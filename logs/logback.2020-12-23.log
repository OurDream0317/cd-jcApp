2020/12/23-10:01:58 [main] INFO  com.tuozhi.zhlw.admin.MyApplication-[55] Starting MyApplication on tz002-PC with PID 9948 (D:\JCAPP\cd-jcApp\cd-zhlw-web-admin\target\classes started by tz008 in D:\JCAPP\cd-jcApp)
2020/12/23-10:01:58 [main] DEBUG com.tuozhi.zhlw.admin.MyApplication-[56] Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020/12/23-10:01:58 [main] INFO  com.tuozhi.zhlw.admin.MyApplication-[655] The following profiles are active: dev
2020/12/23-10:01:59 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate-[249] Multiple Spring Data modules found, entering strict repository configuration mode!
2020/12/23-10:01:59 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate-[127] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020/12/23-10:01:59 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate-[187] Finished Spring Data repository scanning in 80ms. Found 3 JPA repository interfaces.
2020/12/23-10:01:59 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner-[239] Skipping MapperFactoryBean with name 'workFlowNodeMapper' and 'com.tuozhi.zhlw.admin.jc.mapper.WorkFlowNodeMapper' mapperInterface. Bean already defined with the same name!
2020/12/23-10:01:59 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner-[166] No MyBatis mapper was found in '[com.tuozhi.zhlw.admin]' package. Please check your configuration.
2020/12/23-10:01:59 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate-[249] Multiple Spring Data modules found, entering strict repository configuration mode!
2020/12/23-10:01:59 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate-[127] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020/12/23-10:01:59 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport-[348] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.tuozhi.zhlw.admin.dao.SysAppDao. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020/12/23-10:01:59 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport-[348] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.tuozhi.zhlw.admin.dao.SysLogDao. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020/12/23-10:01:59 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport-[348] Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.tuozhi.zhlw.admin.dao.SysMenuDao. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2020/12/23-10:01:59 [main] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate-[187] Finished Spring Data repository scanning in 47ms. Found 0 Redis repository interfaces.
2020/12/23-10:01:59 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker-[330] Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020/12/23-10:02:00 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer-[92] Tomcat initialized with port(s): 317 (http)
2020/12/23-10:02:00 [main] INFO  org.apache.coyote.http11.Http11NioProtocol-[173] Initializing ProtocolHandler ["http-nio-317"]
2020/12/23-10:02:00 [main] INFO  org.apache.catalina.core.StandardService-[173] Starting service [Tomcat]
2020/12/23-10:02:00 [main] INFO  org.apache.catalina.core.StandardEngine-[173] Starting Servlet engine: [Apache Tomcat/9.0.29]
2020/12/23-10:02:00 [main] INFO  org.apache.jasper.servlet.TldScanner-[173] At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2020/12/23-10:02:00 [main] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]-[173] Initializing Spring embedded WebApplicationContext
2020/12/23-10:02:00 [main] INFO  org.springframework.web.context.ContextLoader-[284] Root WebApplicationContext: initialization completed in 2541 ms
2020/12/23-10:02:01 [main] INFO  org.springframework.boot.web.servlet.RegistrationBean-[110] Filter characterEncodingFilter was not registered (possibly already registered?)
2020/12/23-10:02:01 [main] INFO  com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure-[56] Init DruidDataSource
2020/12/23-10:02:01 [main] WARN  com.alibaba.druid.pool.DruidAbstractDataSource-[1216] oracle.jdbc.driver.OracleDriver is deprecated.Having use oracle.jdbc.OracleDriver.
2020/12/23-10:02:02 [main] INFO  com.alibaba.druid.pool.DruidDataSource-[1003] {dataSource-1} inited
2020/12/23-10:02:02 [main] INFO  org.hibernate.jpa.internal.util.LogHelper-[31] HHH000204: Processing PersistenceUnitInfo [name: default]
2020/12/23-10:02:02 [main] INFO  org.hibernate.Version-[46] HHH000412: Hibernate Core {5.4.9.Final}
2020/12/23-10:02:02 [main] INFO  org.hibernate.annotations.common.Version-[66] HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2020/12/23-10:02:02 [main] INFO  org.hibernate.dialect.Dialect-[172] HHH000400: Using dialect: org.hibernate.dialect.Oracle10gDialect
2020/12/23-10:02:05 [main] INFO  org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator-[52] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020/12/23-10:02:05 [main] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean-[416] Initialized JPA EntityManagerFactory for persistence unit 'default'
2020/12/23-10:02:08 [main] WARN  org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration-[220] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020/12/23-10:02:08 [main] INFO  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler-[60] Clear tk.mybatis.mapper.util.MsUtil CLASS_CACHE cache.
2020/12/23-10:02:08 [main] INFO  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler-[60] Clear tk.mybatis.mapper.genid.GenIdUtil CACHE cache.
2020/12/23-10:02:08 [main] INFO  tk.mybatis.mapper.autoconfigure.MapperCacheDisabler-[83] Clear EntityHelper entityTableMap cache.
2020/12/23-10:02:09 [main] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler-[171] Initializing ExecutorService 'taskScheduler'
2020/12/23-10:02:09 [main] INFO  org.apache.coyote.http11.Http11NioProtocol-[173] Starting ProtocolHandler ["http-nio-317"]
2020/12/23-10:02:09 [main] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer-[204] Tomcat started on port(s): 317 (http) with context path ''
2020/12/23-10:02:09 [main] INFO  com.tuozhi.zhlw.admin.MyApplication-[61] Started MyApplication in 11.285 seconds (JVM running for 12.175)
2020/12/23-10:02:09 [main] DEBUG com.tuozhi.zhlw.admin.jc.mapper.BaseDeptMapper.getJCBDeptId-[159] ==>  Preparing: SELECT ID FROM CD_SYSTEM.SYS_DEPT WHERE DEPT_WORK = '1000002' 
2020/12/23-10:02:09 [main] DEBUG com.tuozhi.zhlw.admin.jc.mapper.BaseDeptMapper.getJCBDeptId-[159] ==> Parameters: 
2020/12/23-10:02:09 [main] DEBUG com.tuozhi.zhlw.admin.jc.mapper.BaseDeptMapper.getJCBDeptId-[159] <==      Total: 1
2020/12/23-10:02:09 [main] DEBUG com.tuozhi.zhlw.admin.jc.mapper.BaseDeptMapper.getIssuerDeptId-[159] ==>  Preparing: SELECT ID FROM CD_SYSTEM.SYS_DEPT WHERE DEPT_WORK = 'FX' 
2020/12/23-10:02:09 [main] DEBUG com.tuozhi.zhlw.admin.jc.mapper.BaseDeptMapper.getIssuerDeptId-[159] ==> Parameters: 
2020/12/23-10:02:09 [main] DEBUG com.tuozhi.zhlw.admin.jc.mapper.BaseDeptMapper.getIssuerDeptId-[159] <==      Total: 1
2020/12/23-10:06:15 [http-nio-317-exec-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]-[173] Initializing Spring DispatcherServlet 'dispatcherServlet'
2020/12/23-10:06:15 [http-nio-317-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet-[525] Initializing Servlet 'dispatcherServlet'
2020/12/23-10:06:15 [http-nio-317-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet-[547] Completed initialization in 9 ms
2020/12/23-10:06:15 [http-nio-317-exec-1] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[32] 方法执行前执行。。。。。before
2020/12/23-10:06:15 [http-nio-317-exec-1] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[33] <============================================
2020/12/23-10:06:15 [http-nio-317-exec-1] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[34] 请求来源： =》192.168.3.5
2020/12/23-10:06:15 [http-nio-317-exec-1] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[35] 请求URL：=》/JC/APP/getNewVersionFilePath
2020/12/23-10:06:15 [http-nio-317-exec-1] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[36] 请求方式：=》POST
2020/12/23-10:06:15 [http-nio-317-exec-1] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[37] 响应方法：=》com.tuozhi.zhlw.admin.jcApp.controller.JCAppETCCardController.getNewVersionFilePath
2020/12/23-10:06:15 [http-nio-317-exec-1] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[38] 请求参数：=》[]
2020/12/23-10:06:15 [http-nio-317-exec-1] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.JCAppETCCardMapper.getNewVersionFilePath-[159] ==>  Preparing: SELECT VERSION,URLPATH FROM CD_JC.JC_APP_VERSION where rownum=1 ORDER BY VERSION desc 
2020/12/23-10:06:15 [http-nio-317-exec-1] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.JCAppETCCardMapper.getNewVersionFilePath-[159] ==> Parameters: 
2020/12/23-10:06:15 [http-nio-317-exec-1] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.JCAppETCCardMapper.getNewVersionFilePath-[159] <==      Total: 1
2020/12/23-10:06:16 [http-nio-317-exec-2] DEBUG com.tuozhi.zhlw.admin.mapper.LoginMapper.findBaseUserByLoginName-[159] ==>  Preparing: select t.ID as deptId,t.PARENT_ID as deptParentId,t.DEPT_NAME as deptName,t.DEPT_WORK as deptWork,u.LOGIN_NAME as loginName,u.USER_NAME as userName,u.PASSWORD as password,u.ID as userId,u.LAST_PASSWORD_MODIFY_TIME lastPasswordModifyTime,u.PASSWORD_HISTORY passwordHistory, t.PRIVILEGE_ID as privilegeId ,u.VALID_STATUS as validStatus,(select wm_concat(ROLE_ID) from SYS_USER_ROLES where USER_ID= u.ID) roleIds,t.DEPT_LONG_ID deptLongId, t.WORKFLOWDEPTROLE workFlowDeptRole from SYS_USERS u left join SYS_DEPT t on t.ID = u.DEPT_ID where u.LOGIN_NAME = ? 
2020/12/23-10:06:16 [http-nio-317-exec-2] DEBUG com.tuozhi.zhlw.admin.mapper.LoginMapper.findBaseUserByLoginName-[159] ==> Parameters: 1111111(String)
2020/12/23-10:06:16 [http-nio-317-exec-2] DEBUG com.tuozhi.zhlw.admin.mapper.LoginMapper.findBaseUserByLoginName-[159] <==      Total: 1
2020/12/23-10:06:16 [http-nio-317-exec-3] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[32] 方法执行前执行。。。。。before
2020/12/23-10:06:16 [http-nio-317-exec-3] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[33] <============================================
2020/12/23-10:06:16 [http-nio-317-exec-3] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[34] 请求来源： =》192.168.3.5
2020/12/23-10:06:16 [http-nio-317-exec-3] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[35] 请求URL：=》/JC/APP/getBlackOrGreyListByVehicle
2020/12/23-10:06:16 [http-nio-317-exec-3] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[36] 请求方式：=》POST
2020/12/23-10:06:16 [http-nio-317-exec-3] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[37] 响应方法：=》com.tuozhi.zhlw.admin.jcApp.controller.JCAuditStatusController.getBlackListByVehicle
2020/12/23-10:06:16 [http-nio-317-exec-3] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[38] 请求参数：=》[null]
2020/12/23-10:06:16 [http-nio-317-exec-3] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.JCAuditStatusMapper.getLocalBlackList-[159] ==>  Preparing: SELECT jbr.REQUESTID, jbr.CARNUMBER, sed.ENUM_NAME CARCOLOUR, jbr.CARFEATURE, round( jbr.ELUDEMONEYNUMBER / 100, 2 ) ELUDEMONEYNUMBER, round( jbr.FACTMONEYNUMBER / 100, 2 ) FACTMONEYNUMBER, sed1.ENUM_NAME ELUDEMONEYTYPE, CASE WHEN jbr.ELUDEMONEYTYPE = 1001 THEN sed2.ENUM_NAME WHEN jbr.ELUDEMONEYTYPE = 1002 THEN sed3.ENUM_NAME WHEN jbr.ELUDEMONEYTYPE = 1003 THEN sed4.ENUM_NAME WHEN jbr.ELUDEMONEYTYPE = 1004 THEN sed5.ENUM_NAME END ELUDEMONEYTYPEITEMNAME, sed6.ENUM_NAME CARTYPE, jbr.AXLETYPE, bt2.NAME ENTRYSTATIONID, bt3.NAME EXITSTATIONID, to_char( jbr.ENTRYSTATIONTIME, 'yyyy-mm-dd HH24:mi:ss' ) ENTRYSTATIONTIME, to_char( jbr.EXITSTATIONTIME, 'yyyy-mm-dd HH24:mi:ss' ) EXITSTATIONTIME, nvl( jbr.TOTALWEIGHT, '' ) TOTALWEIGHT, decode( jbr.HAVECARD, 1, '是', 0, '否', '' ) HAVECARD, decode( jbr.HAVEDAMAGEDEVICE, 1, '有', 0, '无', '' ) HAVEDAMAGEDEVICE, decode( jbr.HAVEVIDEO, 1, '有', 0, '无', '' ) HAVEVIDEO, nvl( jbr.CPUCARDID, '' ) CPUCARDID, nvl( jbr.REQUESTDESCRIPTION, '' ) REQUESTDESCRIPTION, to_char( jbr.CREATETIME, 'yyyy-mm-dd HH24:mi:ss' ) CREATETIME, jbr.CREATEUSERNAME, sed7.dept_name CREATEDEPTID, nvl( jbr.SUMTOTAL, 0 ) SUMTOTAL, bd1.DEPT_NAME SERVICEDEPTNAME, jbr1.SREQUESTID 撤销状态, --有值已撤销，没有值未撤销 jbr.IS_APP, jbr.REQUESTSTATUS FROM cd_jc.JC_BLACKLIST_REQUEST jbr LEFT JOIN "CD_JC"."JC_BLACKLIST_REQUEST" jbr1 ON jbr1.SREQUESTID = jbr.REQUESTID AND jbr1.DELETEFLAG = 1 AND jbr1.LOGICTYPE = 2 INNER JOIN "CD_JC"."JC_BLACKLIST_FLOWPATH" jbf ON jbr.CURRENTFLOWPATHID = jbf.FLOWPATHID LEFT JOIN CD_SYSTEM.SYS_DEPT bd1 ON jbf.OPERATEDEPTID = bd1.ID LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed ON sed.ENUM_VALUE = jbr.CARCOLOUR AND sed.ENUM_ID = 39 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed1 ON sed1.ENUM_VALUE = jbr.ELUDEMONEYTYPE AND sed1.ENUM_ID = 87 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed2 ON sed2.ENUM_VALUE = jbr.ELUDEMONEYTYPEITEM AND sed2.ENUM_ID = 88 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed3 ON sed3.ENUM_VALUE = jbr.ELUDEMONEYTYPEITEM AND sed3.ENUM_ID = 89 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed4 ON sed4.ENUM_VALUE = jbr.ELUDEMONEYTYPEITEM AND sed4.ENUM_ID = 90 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed5 ON sed5.ENUM_VALUE = jbr.ELUDEMONEYTYPEITEM AND sed5.ENUM_ID = 91 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed6 ON sed6.ENUM_VALUE = jbr.CARTYPE AND sed6.ENUM_ID = 40 LEFT JOIN CD_SYSTEM.SYS_DEPT sed7 ON sed7.ID = jbr.CREATEDEPTID LEFT JOIN ( SELECT x.* FROM CD_PASS.BASIC_BASICINFODOWN_RES x WHERE x.downid = ( SELECT max( w.down_id ) FROM CD_PASS.CLEAR_DOWNLOAD_LOG w WHERE w.read_result = 1 AND w.file_type = 24 ) AND x.TYPE = '1' ) bt2 ON bt2.ID = jbr.ENTRYSTATIONID LEFT JOIN ( SELECT x.* FROM CD_PASS.BASIC_BASICINFODOWN_RES x WHERE x.downid = ( SELECT max( w.down_id ) FROM CD_PASS.CLEAR_DOWNLOAD_LOG w WHERE w.read_result = 1 AND w.file_type = 24 ) AND x.TYPE = '1' ) bt3 ON bt3.ID = jbr.EXITSTATIONID WHERE jbr.DELETEFLAG = 1 AND jbr.LOGICTYPE =1 and rownum <=2 ORDER BY jbr.CREATETIME desc 
2020/12/23-10:06:17 [http-nio-317-exec-3] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.JCAuditStatusMapper.getLocalBlackList-[159] ==> Parameters: 
2020/12/23-10:06:17 [http-nio-317-exec-3] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.JCAuditStatusMapper.getLocalBlackList-[159] <==      Total: 2
2020/12/23-10:06:17 [http-nio-317-exec-3] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.JCAuditStatusMapper.getLocalGreyList-[159] ==>  Preparing: select t.REQUESTID,CARNUMBER,s2.ENUM_NAME LICENSECOLORID,CARFEATURE,round(ELUDEMONEYNUMBER/100,2) ELUDEMONEYNUMBER,round(FACTMONEYNUMBER/100,2) FACTMONEYNUMBER,s.ENUM_NAME ELUDEMONEYTYPE,s1.ENUM_NAME ELUDEMONEYTYPEITEM,s3.ENUM_NAME CARTYPE,AXLETYPE, bt2.NAME ENTRYSTATIONID, bt3.NAME EXITSTATIONID, to_char(ENTRYSTATIONTIME,'yyyy-mm-dd HH24:mi:ss') ENTRYSTATIONTIME,to_char(EXITSTATIONTIME,'yyyy-mm-dd HH24:mi:ss') EXITSTATIONTIME, nvl(TOTALWEIGHT,'') TOTALWEIGHT, decode(HAVECARD,1,'是',0,'否','') HAVECARD, decode(HAVEDAMAGEDEVICE,1,'有',0,'无','') HAVEDAMAGEDEVICE, decode(HAVEVIDEO,1,'有',0,'无','') HAVEVIDEO, nvl(CPUCARDID,'') CPUCARDID, nvl(REQUESTDESCRIPTION,'') REQUESTDESCRIPTION, to_char(t.CREATETIME,'yyyy-mm-dd HH24:mi:ss') CREATETIME, CREATEUSERNAME, s4.dept_name CREATEDEPTID, nvl(SUMTOTAL,0) SUMTOTAL, bd1.DEPT_NAME SERVICEDEPTNAME from cd_jc.JC_GRAYLIST_REQUEST t INNER JOIN "CD_JC"."JC_GRAYLIST_FLOWPATH" jbf ON t.CURRENTFLOWPATHID = jbf.FLOWPATHID LEFT JOIN CD_SYSTEM.SYS_DEPT bd1 ON jbf.DEPTID = bd1.DEPT_WORK LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS s ON t.ELUDEMONEYTYPE = s.ENUM_VALUE and s.ENUM_ID = 43 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS s1 ON t.ELUDEMONEYTYPEITEM = s1.ENUM_VALUE and s1.ENUM_ID = 44 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS s2 ON t.LICENSECOLORID = s2.ENUM_VALUE and s2.ENUM_ID = 39 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS s3 ON s3.ENUM_VALUE = t.CARTYPE AND s3.ENUM_ID = 40 LEFT JOIN CD_SYSTEM.SYS_DEPT s4 ON to_char(s4.ID) = t.CREATEDEPTID LEFT JOIN (SELECT x.* FROM CD_PASS.BASIC_BASICINFODOWN_RES x WHERE x.downid = ( SELECT max( w.down_id ) FROM CD_PASS.CLEAR_DOWNLOAD_LOG w WHERE w.read_result = 1 AND w.file_type = 24 ) AND x.TYPE = '1') bt2 ON bt2.ID = t.ENTRYSTATIONID LEFT JOIN (SELECT x.* FROM CD_PASS.BASIC_BASICINFODOWN_RES x WHERE x.downid = ( SELECT max( w.down_id ) FROM CD_PASS.CLEAR_DOWNLOAD_LOG w WHERE w.read_result = 1 AND w.file_type = 24 ) AND x.TYPE = '1') bt3 ON bt3.ID = t.EXITSTATIONID where rownum<=2 order by t.CREATETIME desc 
2020/12/23-10:06:17 [http-nio-317-exec-3] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.JCAuditStatusMapper.getLocalGreyList-[159] ==> Parameters: 
2020/12/23-10:06:18 [http-nio-317-exec-3] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.JCAuditStatusMapper.getLocalGreyList-[159] <==      Total: 2
2020/12/23-10:06:22 [http-nio-317-exec-4] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[32] 方法执行前执行。。。。。before
2020/12/23-10:06:22 [http-nio-317-exec-4] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[33] <============================================
2020/12/23-10:06:22 [http-nio-317-exec-4] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[34] 请求来源： =》192.168.3.5
2020/12/23-10:06:22 [http-nio-317-exec-4] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[35] 请求URL：=》/JC/APP/getBlackOrGreyListByVehicle
2020/12/23-10:06:22 [http-nio-317-exec-4] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[36] 请求方式：=》POST
2020/12/23-10:06:22 [http-nio-317-exec-4] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[37] 响应方法：=》com.tuozhi.zhlw.admin.jcApp.controller.JCAuditStatusController.getBlackListByVehicle
2020/12/23-10:06:22 [http-nio-317-exec-4] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[38] 请求参数：=》[豫A12345]
2020/12/23-10:06:22 [http-nio-317-exec-4] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.JCAuditStatusMapper.getLocalBlackList-[159] ==>  Preparing: SELECT jbr.REQUESTID, jbr.CARNUMBER, sed.ENUM_NAME CARCOLOUR, jbr.CARFEATURE, round( jbr.ELUDEMONEYNUMBER / 100, 2 ) ELUDEMONEYNUMBER, round( jbr.FACTMONEYNUMBER / 100, 2 ) FACTMONEYNUMBER, sed1.ENUM_NAME ELUDEMONEYTYPE, CASE WHEN jbr.ELUDEMONEYTYPE = 1001 THEN sed2.ENUM_NAME WHEN jbr.ELUDEMONEYTYPE = 1002 THEN sed3.ENUM_NAME WHEN jbr.ELUDEMONEYTYPE = 1003 THEN sed4.ENUM_NAME WHEN jbr.ELUDEMONEYTYPE = 1004 THEN sed5.ENUM_NAME END ELUDEMONEYTYPEITEMNAME, sed6.ENUM_NAME CARTYPE, jbr.AXLETYPE, bt2.NAME ENTRYSTATIONID, bt3.NAME EXITSTATIONID, to_char( jbr.ENTRYSTATIONTIME, 'yyyy-mm-dd HH24:mi:ss' ) ENTRYSTATIONTIME, to_char( jbr.EXITSTATIONTIME, 'yyyy-mm-dd HH24:mi:ss' ) EXITSTATIONTIME, nvl( jbr.TOTALWEIGHT, '' ) TOTALWEIGHT, decode( jbr.HAVECARD, 1, '是', 0, '否', '' ) HAVECARD, decode( jbr.HAVEDAMAGEDEVICE, 1, '有', 0, '无', '' ) HAVEDAMAGEDEVICE, decode( jbr.HAVEVIDEO, 1, '有', 0, '无', '' ) HAVEVIDEO, nvl( jbr.CPUCARDID, '' ) CPUCARDID, nvl( jbr.REQUESTDESCRIPTION, '' ) REQUESTDESCRIPTION, to_char( jbr.CREATETIME, 'yyyy-mm-dd HH24:mi:ss' ) CREATETIME, jbr.CREATEUSERNAME, sed7.dept_name CREATEDEPTID, nvl( jbr.SUMTOTAL, 0 ) SUMTOTAL, bd1.DEPT_NAME SERVICEDEPTNAME, jbr1.SREQUESTID 撤销状态, --有值已撤销，没有值未撤销 jbr.IS_APP, jbr.REQUESTSTATUS FROM cd_jc.JC_BLACKLIST_REQUEST jbr LEFT JOIN "CD_JC"."JC_BLACKLIST_REQUEST" jbr1 ON jbr1.SREQUESTID = jbr.REQUESTID AND jbr1.DELETEFLAG = 1 AND jbr1.LOGICTYPE = 2 INNER JOIN "CD_JC"."JC_BLACKLIST_FLOWPATH" jbf ON jbr.CURRENTFLOWPATHID = jbf.FLOWPATHID LEFT JOIN CD_SYSTEM.SYS_DEPT bd1 ON jbf.OPERATEDEPTID = bd1.ID LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed ON sed.ENUM_VALUE = jbr.CARCOLOUR AND sed.ENUM_ID = 39 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed1 ON sed1.ENUM_VALUE = jbr.ELUDEMONEYTYPE AND sed1.ENUM_ID = 87 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed2 ON sed2.ENUM_VALUE = jbr.ELUDEMONEYTYPEITEM AND sed2.ENUM_ID = 88 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed3 ON sed3.ENUM_VALUE = jbr.ELUDEMONEYTYPEITEM AND sed3.ENUM_ID = 89 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed4 ON sed4.ENUM_VALUE = jbr.ELUDEMONEYTYPEITEM AND sed4.ENUM_ID = 90 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed5 ON sed5.ENUM_VALUE = jbr.ELUDEMONEYTYPEITEM AND sed5.ENUM_ID = 91 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed6 ON sed6.ENUM_VALUE = jbr.CARTYPE AND sed6.ENUM_ID = 40 LEFT JOIN CD_SYSTEM.SYS_DEPT sed7 ON sed7.ID = jbr.CREATEDEPTID LEFT JOIN ( SELECT x.* FROM CD_PASS.BASIC_BASICINFODOWN_RES x WHERE x.downid = ( SELECT max( w.down_id ) FROM CD_PASS.CLEAR_DOWNLOAD_LOG w WHERE w.read_result = 1 AND w.file_type = 24 ) AND x.TYPE = '1' ) bt2 ON bt2.ID = jbr.ENTRYSTATIONID LEFT JOIN ( SELECT x.* FROM CD_PASS.BASIC_BASICINFODOWN_RES x WHERE x.downid = ( SELECT max( w.down_id ) FROM CD_PASS.CLEAR_DOWNLOAD_LOG w WHERE w.read_result = 1 AND w.file_type = 24 ) AND x.TYPE = '1' ) bt3 ON bt3.ID = jbr.EXITSTATIONID WHERE jbr.DELETEFLAG = 1 AND jbr.LOGICTYPE =1 and jbr.CARNUMBER like '%'||?||'%' ORDER BY jbr.CREATETIME desc 
2020/12/23-10:06:22 [http-nio-317-exec-4] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.JCAuditStatusMapper.getLocalBlackList-[159] ==> Parameters: 豫A12345(String)
2020/12/23-10:06:22 [http-nio-317-exec-4] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.JCAuditStatusMapper.getLocalBlackList-[159] <==      Total: 1
2020/12/23-10:06:22 [http-nio-317-exec-4] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.JCAuditStatusMapper.getLocalGreyList-[159] ==>  Preparing: select t.REQUESTID,CARNUMBER,s2.ENUM_NAME LICENSECOLORID,CARFEATURE,round(ELUDEMONEYNUMBER/100,2) ELUDEMONEYNUMBER,round(FACTMONEYNUMBER/100,2) FACTMONEYNUMBER,s.ENUM_NAME ELUDEMONEYTYPE,s1.ENUM_NAME ELUDEMONEYTYPEITEM,s3.ENUM_NAME CARTYPE,AXLETYPE, bt2.NAME ENTRYSTATIONID, bt3.NAME EXITSTATIONID, to_char(ENTRYSTATIONTIME,'yyyy-mm-dd HH24:mi:ss') ENTRYSTATIONTIME,to_char(EXITSTATIONTIME,'yyyy-mm-dd HH24:mi:ss') EXITSTATIONTIME, nvl(TOTALWEIGHT,'') TOTALWEIGHT, decode(HAVECARD,1,'是',0,'否','') HAVECARD, decode(HAVEDAMAGEDEVICE,1,'有',0,'无','') HAVEDAMAGEDEVICE, decode(HAVEVIDEO,1,'有',0,'无','') HAVEVIDEO, nvl(CPUCARDID,'') CPUCARDID, nvl(REQUESTDESCRIPTION,'') REQUESTDESCRIPTION, to_char(t.CREATETIME,'yyyy-mm-dd HH24:mi:ss') CREATETIME, CREATEUSERNAME, s4.dept_name CREATEDEPTID, nvl(SUMTOTAL,0) SUMTOTAL, bd1.DEPT_NAME SERVICEDEPTNAME from cd_jc.JC_GRAYLIST_REQUEST t INNER JOIN "CD_JC"."JC_GRAYLIST_FLOWPATH" jbf ON t.CURRENTFLOWPATHID = jbf.FLOWPATHID LEFT JOIN CD_SYSTEM.SYS_DEPT bd1 ON jbf.DEPTID = bd1.DEPT_WORK LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS s ON t.ELUDEMONEYTYPE = s.ENUM_VALUE and s.ENUM_ID = 43 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS s1 ON t.ELUDEMONEYTYPEITEM = s1.ENUM_VALUE and s1.ENUM_ID = 44 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS s2 ON t.LICENSECOLORID = s2.ENUM_VALUE and s2.ENUM_ID = 39 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS s3 ON s3.ENUM_VALUE = t.CARTYPE AND s3.ENUM_ID = 40 LEFT JOIN CD_SYSTEM.SYS_DEPT s4 ON to_char(s4.ID) = t.CREATEDEPTID LEFT JOIN (SELECT x.* FROM CD_PASS.BASIC_BASICINFODOWN_RES x WHERE x.downid = ( SELECT max( w.down_id ) FROM CD_PASS.CLEAR_DOWNLOAD_LOG w WHERE w.read_result = 1 AND w.file_type = 24 ) AND x.TYPE = '1') bt2 ON bt2.ID = t.ENTRYSTATIONID LEFT JOIN (SELECT x.* FROM CD_PASS.BASIC_BASICINFODOWN_RES x WHERE x.downid = ( SELECT max( w.down_id ) FROM CD_PASS.CLEAR_DOWNLOAD_LOG w WHERE w.read_result = 1 AND w.file_type = 24 ) AND x.TYPE = '1') bt3 ON bt3.ID = t.EXITSTATIONID where CARNUMBER like '%'||?||'%' order by t.CREATETIME desc 
2020/12/23-10:06:22 [http-nio-317-exec-4] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.JCAuditStatusMapper.getLocalGreyList-[159] ==> Parameters: 豫A12345(String)
2020/12/23-10:06:22 [http-nio-317-exec-4] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.JCAuditStatusMapper.getLocalGreyList-[159] <==      Total: 0
2020/12/23-10:10:29 [http-nio-317-exec-6] WARN  org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver-[199] Resolved [org.springframework.web.bind.MissingServletRequestParameterException: Required String parameter 'vehicleOrCardId' is not present]
2020/12/23-10:10:47 [http-nio-317-exec-7] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[32] 方法执行前执行。。。。。before
2020/12/23-10:10:47 [http-nio-317-exec-7] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[33] <============================================
2020/12/23-10:10:47 [http-nio-317-exec-7] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[34] 请求来源： =》192.168.3.5
2020/12/23-10:10:47 [http-nio-317-exec-7] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[35] 请求URL：=》/JC/APP/getNewVersionFilePath
2020/12/23-10:10:47 [http-nio-317-exec-7] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[36] 请求方式：=》POST
2020/12/23-10:10:47 [http-nio-317-exec-7] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[37] 响应方法：=》com.tuozhi.zhlw.admin.jcApp.controller.JCAppETCCardController.getNewVersionFilePath
2020/12/23-10:10:47 [http-nio-317-exec-7] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[38] 请求参数：=》[]
2020/12/23-10:10:47 [http-nio-317-exec-7] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.JCAppETCCardMapper.getNewVersionFilePath-[159] ==>  Preparing: SELECT VERSION,URLPATH FROM CD_JC.JC_APP_VERSION where rownum=1 ORDER BY VERSION desc 
2020/12/23-10:10:47 [http-nio-317-exec-7] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.JCAppETCCardMapper.getNewVersionFilePath-[159] ==> Parameters: 
2020/12/23-10:10:47 [http-nio-317-exec-7] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.JCAppETCCardMapper.getNewVersionFilePath-[159] <==      Total: 1
2020/12/23-10:10:48 [http-nio-317-exec-8] DEBUG com.tuozhi.zhlw.admin.mapper.LoginMapper.findBaseUserByLoginName-[159] ==>  Preparing: select t.ID as deptId,t.PARENT_ID as deptParentId,t.DEPT_NAME as deptName,t.DEPT_WORK as deptWork,u.LOGIN_NAME as loginName,u.USER_NAME as userName,u.PASSWORD as password,u.ID as userId,u.LAST_PASSWORD_MODIFY_TIME lastPasswordModifyTime,u.PASSWORD_HISTORY passwordHistory, t.PRIVILEGE_ID as privilegeId ,u.VALID_STATUS as validStatus,(select wm_concat(ROLE_ID) from SYS_USER_ROLES where USER_ID= u.ID) roleIds,t.DEPT_LONG_ID deptLongId, t.WORKFLOWDEPTROLE workFlowDeptRole from SYS_USERS u left join SYS_DEPT t on t.ID = u.DEPT_ID where u.LOGIN_NAME = ? 
2020/12/23-10:10:48 [http-nio-317-exec-8] DEBUG com.tuozhi.zhlw.admin.mapper.LoginMapper.findBaseUserByLoginName-[159] ==> Parameters: 1111111(String)
2020/12/23-10:10:48 [http-nio-317-exec-8] DEBUG com.tuozhi.zhlw.admin.mapper.LoginMapper.findBaseUserByLoginName-[159] <==      Total: 1
2020/12/23-10:10:49 [http-nio-317-exec-9] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[32] 方法执行前执行。。。。。before
2020/12/23-10:10:49 [http-nio-317-exec-9] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[33] <============================================
2020/12/23-10:10:49 [http-nio-317-exec-9] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[34] 请求来源： =》192.168.3.5
2020/12/23-10:10:49 [http-nio-317-exec-9] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[35] 请求URL：=》/JC/APP/getBlackOrGreyListByVehicle
2020/12/23-10:10:49 [http-nio-317-exec-9] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[36] 请求方式：=》POST
2020/12/23-10:10:49 [http-nio-317-exec-9] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[37] 响应方法：=》com.tuozhi.zhlw.admin.jcApp.controller.JCAuditStatusController.getBlackListByVehicle
2020/12/23-10:10:49 [http-nio-317-exec-9] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[38] 请求参数：=》[null]
2020/12/23-10:10:49 [http-nio-317-exec-9] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.JCAuditStatusMapper.getLocalBlackList-[159] ==>  Preparing: SELECT jbr.REQUESTID, jbr.CARNUMBER, sed.ENUM_NAME CARCOLOUR, jbr.CARFEATURE, round( jbr.ELUDEMONEYNUMBER / 100, 2 ) ELUDEMONEYNUMBER, round( jbr.FACTMONEYNUMBER / 100, 2 ) FACTMONEYNUMBER, sed1.ENUM_NAME ELUDEMONEYTYPE, CASE WHEN jbr.ELUDEMONEYTYPE = 1001 THEN sed2.ENUM_NAME WHEN jbr.ELUDEMONEYTYPE = 1002 THEN sed3.ENUM_NAME WHEN jbr.ELUDEMONEYTYPE = 1003 THEN sed4.ENUM_NAME WHEN jbr.ELUDEMONEYTYPE = 1004 THEN sed5.ENUM_NAME END ELUDEMONEYTYPEITEMNAME, sed6.ENUM_NAME CARTYPE, jbr.AXLETYPE, bt2.NAME ENTRYSTATIONID, bt3.NAME EXITSTATIONID, to_char( jbr.ENTRYSTATIONTIME, 'yyyy-mm-dd HH24:mi:ss' ) ENTRYSTATIONTIME, to_char( jbr.EXITSTATIONTIME, 'yyyy-mm-dd HH24:mi:ss' ) EXITSTATIONTIME, nvl( jbr.TOTALWEIGHT, '' ) TOTALWEIGHT, decode( jbr.HAVECARD, 1, '是', 0, '否', '' ) HAVECARD, decode( jbr.HAVEDAMAGEDEVICE, 1, '有', 0, '无', '' ) HAVEDAMAGEDEVICE, decode( jbr.HAVEVIDEO, 1, '有', 0, '无', '' ) HAVEVIDEO, nvl( jbr.CPUCARDID, '' ) CPUCARDID, nvl( jbr.REQUESTDESCRIPTION, '' ) REQUESTDESCRIPTION, to_char( jbr.CREATETIME, 'yyyy-mm-dd HH24:mi:ss' ) CREATETIME, jbr.CREATEUSERNAME, sed7.dept_name CREATEDEPTID, nvl( jbr.SUMTOTAL, 0 ) SUMTOTAL, bd1.DEPT_NAME SERVICEDEPTNAME, jbr1.SREQUESTID 撤销状态, --有值已撤销，没有值未撤销 jbr.IS_APP, jbr.REQUESTSTATUS FROM cd_jc.JC_BLACKLIST_REQUEST jbr LEFT JOIN "CD_JC"."JC_BLACKLIST_REQUEST" jbr1 ON jbr1.SREQUESTID = jbr.REQUESTID AND jbr1.DELETEFLAG = 1 AND jbr1.LOGICTYPE = 2 INNER JOIN "CD_JC"."JC_BLACKLIST_FLOWPATH" jbf ON jbr.CURRENTFLOWPATHID = jbf.FLOWPATHID LEFT JOIN CD_SYSTEM.SYS_DEPT bd1 ON jbf.OPERATEDEPTID = bd1.ID LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed ON sed.ENUM_VALUE = jbr.CARCOLOUR AND sed.ENUM_ID = 39 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed1 ON sed1.ENUM_VALUE = jbr.ELUDEMONEYTYPE AND sed1.ENUM_ID = 87 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed2 ON sed2.ENUM_VALUE = jbr.ELUDEMONEYTYPEITEM AND sed2.ENUM_ID = 88 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed3 ON sed3.ENUM_VALUE = jbr.ELUDEMONEYTYPEITEM AND sed3.ENUM_ID = 89 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed4 ON sed4.ENUM_VALUE = jbr.ELUDEMONEYTYPEITEM AND sed4.ENUM_ID = 90 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed5 ON sed5.ENUM_VALUE = jbr.ELUDEMONEYTYPEITEM AND sed5.ENUM_ID = 91 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed6 ON sed6.ENUM_VALUE = jbr.CARTYPE AND sed6.ENUM_ID = 40 LEFT JOIN CD_SYSTEM.SYS_DEPT sed7 ON sed7.ID = jbr.CREATEDEPTID LEFT JOIN ( SELECT x.* FROM CD_PASS.BASIC_BASICINFODOWN_RES x WHERE x.downid = ( SELECT max( w.down_id ) FROM CD_PASS.CLEAR_DOWNLOAD_LOG w WHERE w.read_result = 1 AND w.file_type = 24 ) AND x.TYPE = '1' ) bt2 ON bt2.ID = jbr.ENTRYSTATIONID LEFT JOIN ( SELECT x.* FROM CD_PASS.BASIC_BASICINFODOWN_RES x WHERE x.downid = ( SELECT max( w.down_id ) FROM CD_PASS.CLEAR_DOWNLOAD_LOG w WHERE w.read_result = 1 AND w.file_type = 24 ) AND x.TYPE = '1' ) bt3 ON bt3.ID = jbr.EXITSTATIONID WHERE jbr.DELETEFLAG = 1 AND jbr.LOGICTYPE =1 and rownum <=2 ORDER BY jbr.CREATETIME desc 
2020/12/23-10:10:49 [http-nio-317-exec-9] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.JCAuditStatusMapper.getLocalBlackList-[159] ==> Parameters: 
2020/12/23-10:10:49 [http-nio-317-exec-9] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.JCAuditStatusMapper.getLocalBlackList-[159] <==      Total: 2
2020/12/23-10:10:49 [http-nio-317-exec-9] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.JCAuditStatusMapper.getLocalGreyList-[159] ==>  Preparing: select t.REQUESTID,CARNUMBER,s2.ENUM_NAME LICENSECOLORID,CARFEATURE,round(ELUDEMONEYNUMBER/100,2) ELUDEMONEYNUMBER,round(FACTMONEYNUMBER/100,2) FACTMONEYNUMBER,s.ENUM_NAME ELUDEMONEYTYPE,s1.ENUM_NAME ELUDEMONEYTYPEITEM,s3.ENUM_NAME CARTYPE,AXLETYPE, bt2.NAME ENTRYSTATIONID, bt3.NAME EXITSTATIONID, to_char(ENTRYSTATIONTIME,'yyyy-mm-dd HH24:mi:ss') ENTRYSTATIONTIME,to_char(EXITSTATIONTIME,'yyyy-mm-dd HH24:mi:ss') EXITSTATIONTIME, nvl(TOTALWEIGHT,'') TOTALWEIGHT, decode(HAVECARD,1,'是',0,'否','') HAVECARD, decode(HAVEDAMAGEDEVICE,1,'有',0,'无','') HAVEDAMAGEDEVICE, decode(HAVEVIDEO,1,'有',0,'无','') HAVEVIDEO, nvl(CPUCARDID,'') CPUCARDID, nvl(REQUESTDESCRIPTION,'') REQUESTDESCRIPTION, to_char(t.CREATETIME,'yyyy-mm-dd HH24:mi:ss') CREATETIME, CREATEUSERNAME, s4.dept_name CREATEDEPTID, nvl(SUMTOTAL,0) SUMTOTAL, bd1.DEPT_NAME SERVICEDEPTNAME from cd_jc.JC_GRAYLIST_REQUEST t INNER JOIN "CD_JC"."JC_GRAYLIST_FLOWPATH" jbf ON t.CURRENTFLOWPATHID = jbf.FLOWPATHID LEFT JOIN CD_SYSTEM.SYS_DEPT bd1 ON jbf.DEPTID = bd1.DEPT_WORK LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS s ON t.ELUDEMONEYTYPE = s.ENUM_VALUE and s.ENUM_ID = 43 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS s1 ON t.ELUDEMONEYTYPEITEM = s1.ENUM_VALUE and s1.ENUM_ID = 44 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS s2 ON t.LICENSECOLORID = s2.ENUM_VALUE and s2.ENUM_ID = 39 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS s3 ON s3.ENUM_VALUE = t.CARTYPE AND s3.ENUM_ID = 40 LEFT JOIN CD_SYSTEM.SYS_DEPT s4 ON to_char(s4.ID) = t.CREATEDEPTID LEFT JOIN (SELECT x.* FROM CD_PASS.BASIC_BASICINFODOWN_RES x WHERE x.downid = ( SELECT max( w.down_id ) FROM CD_PASS.CLEAR_DOWNLOAD_LOG w WHERE w.read_result = 1 AND w.file_type = 24 ) AND x.TYPE = '1') bt2 ON bt2.ID = t.ENTRYSTATIONID LEFT JOIN (SELECT x.* FROM CD_PASS.BASIC_BASICINFODOWN_RES x WHERE x.downid = ( SELECT max( w.down_id ) FROM CD_PASS.CLEAR_DOWNLOAD_LOG w WHERE w.read_result = 1 AND w.file_type = 24 ) AND x.TYPE = '1') bt3 ON bt3.ID = t.EXITSTATIONID where rownum<=2 order by t.CREATETIME desc 
2020/12/23-10:10:49 [http-nio-317-exec-9] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.JCAuditStatusMapper.getLocalGreyList-[159] ==> Parameters: 
2020/12/23-10:10:49 [http-nio-317-exec-9] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.JCAuditStatusMapper.getLocalGreyList-[159] <==      Total: 2
2020/12/23-10:10:52 [http-nio-317-exec-10] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[32] 方法执行前执行。。。。。before
2020/12/23-10:10:52 [http-nio-317-exec-10] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[33] <============================================
2020/12/23-10:10:52 [http-nio-317-exec-10] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[34] 请求来源： =》192.168.3.5
2020/12/23-10:10:52 [http-nio-317-exec-10] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[35] 请求URL：=》/JC/APP/getBlackOrGreyListByVehicle
2020/12/23-10:10:52 [http-nio-317-exec-10] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[36] 请求方式：=》POST
2020/12/23-10:10:52 [http-nio-317-exec-10] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[37] 响应方法：=》com.tuozhi.zhlw.admin.jcApp.controller.JCAuditStatusController.getBlackListByVehicle
2020/12/23-10:10:52 [http-nio-317-exec-10] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[38] 请求参数：=》[豫A12345]
2020/12/23-10:10:52 [http-nio-317-exec-10] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.JCAuditStatusMapper.getLocalBlackList-[159] ==>  Preparing: SELECT jbr.REQUESTID, jbr.CARNUMBER, sed.ENUM_NAME CARCOLOUR, jbr.CARFEATURE, round( jbr.ELUDEMONEYNUMBER / 100, 2 ) ELUDEMONEYNUMBER, round( jbr.FACTMONEYNUMBER / 100, 2 ) FACTMONEYNUMBER, sed1.ENUM_NAME ELUDEMONEYTYPE, CASE WHEN jbr.ELUDEMONEYTYPE = 1001 THEN sed2.ENUM_NAME WHEN jbr.ELUDEMONEYTYPE = 1002 THEN sed3.ENUM_NAME WHEN jbr.ELUDEMONEYTYPE = 1003 THEN sed4.ENUM_NAME WHEN jbr.ELUDEMONEYTYPE = 1004 THEN sed5.ENUM_NAME END ELUDEMONEYTYPEITEMNAME, sed6.ENUM_NAME CARTYPE, jbr.AXLETYPE, bt2.NAME ENTRYSTATIONID, bt3.NAME EXITSTATIONID, to_char( jbr.ENTRYSTATIONTIME, 'yyyy-mm-dd HH24:mi:ss' ) ENTRYSTATIONTIME, to_char( jbr.EXITSTATIONTIME, 'yyyy-mm-dd HH24:mi:ss' ) EXITSTATIONTIME, nvl( jbr.TOTALWEIGHT, '' ) TOTALWEIGHT, decode( jbr.HAVECARD, 1, '是', 0, '否', '' ) HAVECARD, decode( jbr.HAVEDAMAGEDEVICE, 1, '有', 0, '无', '' ) HAVEDAMAGEDEVICE, decode( jbr.HAVEVIDEO, 1, '有', 0, '无', '' ) HAVEVIDEO, nvl( jbr.CPUCARDID, '' ) CPUCARDID, nvl( jbr.REQUESTDESCRIPTION, '' ) REQUESTDESCRIPTION, to_char( jbr.CREATETIME, 'yyyy-mm-dd HH24:mi:ss' ) CREATETIME, jbr.CREATEUSERNAME, sed7.dept_name CREATEDEPTID, nvl( jbr.SUMTOTAL, 0 ) SUMTOTAL, bd1.DEPT_NAME SERVICEDEPTNAME, jbr1.SREQUESTID 撤销状态, --有值已撤销，没有值未撤销 jbr.IS_APP, jbr.REQUESTSTATUS FROM cd_jc.JC_BLACKLIST_REQUEST jbr LEFT JOIN "CD_JC"."JC_BLACKLIST_REQUEST" jbr1 ON jbr1.SREQUESTID = jbr.REQUESTID AND jbr1.DELETEFLAG = 1 AND jbr1.LOGICTYPE = 2 INNER JOIN "CD_JC"."JC_BLACKLIST_FLOWPATH" jbf ON jbr.CURRENTFLOWPATHID = jbf.FLOWPATHID LEFT JOIN CD_SYSTEM.SYS_DEPT bd1 ON jbf.OPERATEDEPTID = bd1.ID LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed ON sed.ENUM_VALUE = jbr.CARCOLOUR AND sed.ENUM_ID = 39 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed1 ON sed1.ENUM_VALUE = jbr.ELUDEMONEYTYPE AND sed1.ENUM_ID = 87 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed2 ON sed2.ENUM_VALUE = jbr.ELUDEMONEYTYPEITEM AND sed2.ENUM_ID = 88 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed3 ON sed3.ENUM_VALUE = jbr.ELUDEMONEYTYPEITEM AND sed3.ENUM_ID = 89 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed4 ON sed4.ENUM_VALUE = jbr.ELUDEMONEYTYPEITEM AND sed4.ENUM_ID = 90 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed5 ON sed5.ENUM_VALUE = jbr.ELUDEMONEYTYPEITEM AND sed5.ENUM_ID = 91 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed6 ON sed6.ENUM_VALUE = jbr.CARTYPE AND sed6.ENUM_ID = 40 LEFT JOIN CD_SYSTEM.SYS_DEPT sed7 ON sed7.ID = jbr.CREATEDEPTID LEFT JOIN ( SELECT x.* FROM CD_PASS.BASIC_BASICINFODOWN_RES x WHERE x.downid = ( SELECT max( w.down_id ) FROM CD_PASS.CLEAR_DOWNLOAD_LOG w WHERE w.read_result = 1 AND w.file_type = 24 ) AND x.TYPE = '1' ) bt2 ON bt2.ID = jbr.ENTRYSTATIONID LEFT JOIN ( SELECT x.* FROM CD_PASS.BASIC_BASICINFODOWN_RES x WHERE x.downid = ( SELECT max( w.down_id ) FROM CD_PASS.CLEAR_DOWNLOAD_LOG w WHERE w.read_result = 1 AND w.file_type = 24 ) AND x.TYPE = '1' ) bt3 ON bt3.ID = jbr.EXITSTATIONID WHERE jbr.DELETEFLAG = 1 AND jbr.LOGICTYPE =1 and jbr.CARNUMBER like '%'||?||'%' ORDER BY jbr.CREATETIME desc 
2020/12/23-10:10:52 [http-nio-317-exec-10] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.JCAuditStatusMapper.getLocalBlackList-[159] ==> Parameters: 豫A12345(String)
2020/12/23-10:10:52 [http-nio-317-exec-10] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.JCAuditStatusMapper.getLocalBlackList-[159] <==      Total: 1
2020/12/23-10:10:52 [http-nio-317-exec-10] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.JCAuditStatusMapper.getLocalGreyList-[159] ==>  Preparing: select t.REQUESTID,CARNUMBER,s2.ENUM_NAME LICENSECOLORID,CARFEATURE,round(ELUDEMONEYNUMBER/100,2) ELUDEMONEYNUMBER,round(FACTMONEYNUMBER/100,2) FACTMONEYNUMBER,s.ENUM_NAME ELUDEMONEYTYPE,s1.ENUM_NAME ELUDEMONEYTYPEITEM,s3.ENUM_NAME CARTYPE,AXLETYPE, bt2.NAME ENTRYSTATIONID, bt3.NAME EXITSTATIONID, to_char(ENTRYSTATIONTIME,'yyyy-mm-dd HH24:mi:ss') ENTRYSTATIONTIME,to_char(EXITSTATIONTIME,'yyyy-mm-dd HH24:mi:ss') EXITSTATIONTIME, nvl(TOTALWEIGHT,'') TOTALWEIGHT, decode(HAVECARD,1,'是',0,'否','') HAVECARD, decode(HAVEDAMAGEDEVICE,1,'有',0,'无','') HAVEDAMAGEDEVICE, decode(HAVEVIDEO,1,'有',0,'无','') HAVEVIDEO, nvl(CPUCARDID,'') CPUCARDID, nvl(REQUESTDESCRIPTION,'') REQUESTDESCRIPTION, to_char(t.CREATETIME,'yyyy-mm-dd HH24:mi:ss') CREATETIME, CREATEUSERNAME, s4.dept_name CREATEDEPTID, nvl(SUMTOTAL,0) SUMTOTAL, bd1.DEPT_NAME SERVICEDEPTNAME from cd_jc.JC_GRAYLIST_REQUEST t INNER JOIN "CD_JC"."JC_GRAYLIST_FLOWPATH" jbf ON t.CURRENTFLOWPATHID = jbf.FLOWPATHID LEFT JOIN CD_SYSTEM.SYS_DEPT bd1 ON jbf.DEPTID = bd1.DEPT_WORK LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS s ON t.ELUDEMONEYTYPE = s.ENUM_VALUE and s.ENUM_ID = 43 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS s1 ON t.ELUDEMONEYTYPEITEM = s1.ENUM_VALUE and s1.ENUM_ID = 44 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS s2 ON t.LICENSECOLORID = s2.ENUM_VALUE and s2.ENUM_ID = 39 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS s3 ON s3.ENUM_VALUE = t.CARTYPE AND s3.ENUM_ID = 40 LEFT JOIN CD_SYSTEM.SYS_DEPT s4 ON to_char(s4.ID) = t.CREATEDEPTID LEFT JOIN (SELECT x.* FROM CD_PASS.BASIC_BASICINFODOWN_RES x WHERE x.downid = ( SELECT max( w.down_id ) FROM CD_PASS.CLEAR_DOWNLOAD_LOG w WHERE w.read_result = 1 AND w.file_type = 24 ) AND x.TYPE = '1') bt2 ON bt2.ID = t.ENTRYSTATIONID LEFT JOIN (SELECT x.* FROM CD_PASS.BASIC_BASICINFODOWN_RES x WHERE x.downid = ( SELECT max( w.down_id ) FROM CD_PASS.CLEAR_DOWNLOAD_LOG w WHERE w.read_result = 1 AND w.file_type = 24 ) AND x.TYPE = '1') bt3 ON bt3.ID = t.EXITSTATIONID where CARNUMBER like '%'||?||'%' order by t.CREATETIME desc 
2020/12/23-10:10:52 [http-nio-317-exec-10] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.JCAuditStatusMapper.getLocalGreyList-[159] ==> Parameters: 豫A12345(String)
2020/12/23-10:10:52 [http-nio-317-exec-10] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.JCAuditStatusMapper.getLocalGreyList-[159] <==      Total: 0
2020/12/23-10:11:27 [http-nio-317-exec-1] WARN  org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver-[199] Resolved [org.springframework.web.bind.MissingServletRequestParameterException: Required String parameter 'vehicleOrCardId' is not present]
2020/12/23-10:11:37 [http-nio-317-exec-2] WARN  org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver-[199] Resolved [org.springframework.web.bind.MissingServletRequestParameterException: Required String parameter 'vehicleOrCardId' is not present]
2020/12/23-10:11:38 [http-nio-317-exec-3] WARN  org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver-[199] Resolved [org.springframework.web.bind.MissingServletRequestParameterException: Required String parameter 'vehicleOrCardId' is not present]
2020/12/23-10:11:38 [http-nio-317-exec-4] WARN  org.springframework.web.servlet.PageNotFound-[1251] No mapping for GET /favicon.ico
2020/12/23-10:11:38 [http-nio-317-exec-5] WARN  org.springframework.web.servlet.PageNotFound-[1251] No mapping for GET /favicon.ico
2020/12/23-10:11:39 [http-nio-317-exec-6] WARN  org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver-[199] Resolved [org.springframework.web.bind.MissingServletRequestParameterException: Required String parameter 'vehicleOrCardId' is not present]
2020/12/23-10:19:30 [http-nio-317-exec-8] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[32] 方法执行前执行。。。。。before
2020/12/23-10:19:30 [http-nio-317-exec-8] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[33] <============================================
2020/12/23-10:19:30 [http-nio-317-exec-8] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[34] 请求来源： =》192.168.3.5
2020/12/23-10:19:30 [http-nio-317-exec-8] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[35] 请求URL：=》/JC/APP/getNewVersionFilePath
2020/12/23-10:19:30 [http-nio-317-exec-8] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[36] 请求方式：=》POST
2020/12/23-10:19:30 [http-nio-317-exec-8] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[37] 响应方法：=》com.tuozhi.zhlw.admin.jcApp.controller.JCAppETCCardController.getNewVersionFilePath
2020/12/23-10:19:30 [http-nio-317-exec-8] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[38] 请求参数：=》[]
2020/12/23-10:19:30 [http-nio-317-exec-8] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.JCAppETCCardMapper.getNewVersionFilePath-[159] ==>  Preparing: SELECT VERSION,URLPATH FROM CD_JC.JC_APP_VERSION where rownum=1 ORDER BY VERSION desc 
2020/12/23-10:19:30 [http-nio-317-exec-8] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.JCAppETCCardMapper.getNewVersionFilePath-[159] ==> Parameters: 
2020/12/23-10:19:30 [http-nio-317-exec-8] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.JCAppETCCardMapper.getNewVersionFilePath-[159] <==      Total: 1
2020/12/23-10:19:31 [http-nio-317-exec-9] DEBUG com.tuozhi.zhlw.admin.mapper.LoginMapper.findBaseUserByLoginName-[159] ==>  Preparing: select t.ID as deptId,t.PARENT_ID as deptParentId,t.DEPT_NAME as deptName,t.DEPT_WORK as deptWork,u.LOGIN_NAME as loginName,u.USER_NAME as userName,u.PASSWORD as password,u.ID as userId,u.LAST_PASSWORD_MODIFY_TIME lastPasswordModifyTime,u.PASSWORD_HISTORY passwordHistory, t.PRIVILEGE_ID as privilegeId ,u.VALID_STATUS as validStatus,(select wm_concat(ROLE_ID) from SYS_USER_ROLES where USER_ID= u.ID) roleIds,t.DEPT_LONG_ID deptLongId, t.WORKFLOWDEPTROLE workFlowDeptRole from SYS_USERS u left join SYS_DEPT t on t.ID = u.DEPT_ID where u.LOGIN_NAME = ? 
2020/12/23-10:19:31 [http-nio-317-exec-9] DEBUG com.tuozhi.zhlw.admin.mapper.LoginMapper.findBaseUserByLoginName-[159] ==> Parameters: 1111111(String)
2020/12/23-10:19:31 [http-nio-317-exec-9] DEBUG com.tuozhi.zhlw.admin.mapper.LoginMapper.findBaseUserByLoginName-[159] <==      Total: 1
2020/12/23-10:19:31 [http-nio-317-exec-10] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[32] 方法执行前执行。。。。。before
2020/12/23-10:19:31 [http-nio-317-exec-10] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[33] <============================================
2020/12/23-10:19:31 [http-nio-317-exec-10] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[34] 请求来源： =》192.168.3.5
2020/12/23-10:19:31 [http-nio-317-exec-10] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[35] 请求URL：=》/JC/APP/getBlackOrGreyListByVehicle
2020/12/23-10:19:31 [http-nio-317-exec-10] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[36] 请求方式：=》POST
2020/12/23-10:19:31 [http-nio-317-exec-10] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[37] 响应方法：=》com.tuozhi.zhlw.admin.jcApp.controller.JCAuditStatusController.getBlackListByVehicle
2020/12/23-10:19:31 [http-nio-317-exec-10] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[38] 请求参数：=》[null]
2020/12/23-10:19:31 [http-nio-317-exec-10] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.JCAuditStatusMapper.getLocalBlackList-[159] ==>  Preparing: SELECT jbr.REQUESTID, jbr.CARNUMBER, sed.ENUM_NAME CARCOLOUR, jbr.CARFEATURE, round( jbr.ELUDEMONEYNUMBER / 100, 2 ) ELUDEMONEYNUMBER, round( jbr.FACTMONEYNUMBER / 100, 2 ) FACTMONEYNUMBER, sed1.ENUM_NAME ELUDEMONEYTYPE, CASE WHEN jbr.ELUDEMONEYTYPE = 1001 THEN sed2.ENUM_NAME WHEN jbr.ELUDEMONEYTYPE = 1002 THEN sed3.ENUM_NAME WHEN jbr.ELUDEMONEYTYPE = 1003 THEN sed4.ENUM_NAME WHEN jbr.ELUDEMONEYTYPE = 1004 THEN sed5.ENUM_NAME END ELUDEMONEYTYPEITEMNAME, sed6.ENUM_NAME CARTYPE, jbr.AXLETYPE, bt2.NAME ENTRYSTATIONID, bt3.NAME EXITSTATIONID, to_char( jbr.ENTRYSTATIONTIME, 'yyyy-mm-dd HH24:mi:ss' ) ENTRYSTATIONTIME, to_char( jbr.EXITSTATIONTIME, 'yyyy-mm-dd HH24:mi:ss' ) EXITSTATIONTIME, nvl( jbr.TOTALWEIGHT, '' ) TOTALWEIGHT, decode( jbr.HAVECARD, 1, '是', 0, '否', '' ) HAVECARD, decode( jbr.HAVEDAMAGEDEVICE, 1, '有', 0, '无', '' ) HAVEDAMAGEDEVICE, decode( jbr.HAVEVIDEO, 1, '有', 0, '无', '' ) HAVEVIDEO, nvl( jbr.CPUCARDID, '' ) CPUCARDID, nvl( jbr.REQUESTDESCRIPTION, '' ) REQUESTDESCRIPTION, to_char( jbr.CREATETIME, 'yyyy-mm-dd HH24:mi:ss' ) CREATETIME, jbr.CREATEUSERNAME, sed7.dept_name CREATEDEPTID, nvl( jbr.SUMTOTAL, 0 ) SUMTOTAL, bd1.DEPT_NAME SERVICEDEPTNAME, jbr1.SREQUESTID 撤销状态, --有值已撤销，没有值未撤销 jbr.IS_APP, jbr.REQUESTSTATUS FROM cd_jc.JC_BLACKLIST_REQUEST jbr LEFT JOIN "CD_JC"."JC_BLACKLIST_REQUEST" jbr1 ON jbr1.SREQUESTID = jbr.REQUESTID AND jbr1.DELETEFLAG = 1 AND jbr1.LOGICTYPE = 2 INNER JOIN "CD_JC"."JC_BLACKLIST_FLOWPATH" jbf ON jbr.CURRENTFLOWPATHID = jbf.FLOWPATHID LEFT JOIN CD_SYSTEM.SYS_DEPT bd1 ON jbf.OPERATEDEPTID = bd1.ID LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed ON sed.ENUM_VALUE = jbr.CARCOLOUR AND sed.ENUM_ID = 39 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed1 ON sed1.ENUM_VALUE = jbr.ELUDEMONEYTYPE AND sed1.ENUM_ID = 87 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed2 ON sed2.ENUM_VALUE = jbr.ELUDEMONEYTYPEITEM AND sed2.ENUM_ID = 88 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed3 ON sed3.ENUM_VALUE = jbr.ELUDEMONEYTYPEITEM AND sed3.ENUM_ID = 89 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed4 ON sed4.ENUM_VALUE = jbr.ELUDEMONEYTYPEITEM AND sed4.ENUM_ID = 90 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed5 ON sed5.ENUM_VALUE = jbr.ELUDEMONEYTYPEITEM AND sed5.ENUM_ID = 91 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed6 ON sed6.ENUM_VALUE = jbr.CARTYPE AND sed6.ENUM_ID = 40 LEFT JOIN CD_SYSTEM.SYS_DEPT sed7 ON sed7.ID = jbr.CREATEDEPTID LEFT JOIN ( SELECT x.* FROM CD_PASS.BASIC_BASICINFODOWN_RES x WHERE x.downid = ( SELECT max( w.down_id ) FROM CD_PASS.CLEAR_DOWNLOAD_LOG w WHERE w.read_result = 1 AND w.file_type = 24 ) AND x.TYPE = '1' ) bt2 ON bt2.ID = jbr.ENTRYSTATIONID LEFT JOIN ( SELECT x.* FROM CD_PASS.BASIC_BASICINFODOWN_RES x WHERE x.downid = ( SELECT max( w.down_id ) FROM CD_PASS.CLEAR_DOWNLOAD_LOG w WHERE w.read_result = 1 AND w.file_type = 24 ) AND x.TYPE = '1' ) bt3 ON bt3.ID = jbr.EXITSTATIONID WHERE jbr.DELETEFLAG = 1 AND jbr.LOGICTYPE =1 and rownum <=2 ORDER BY jbr.CREATETIME desc 
2020/12/23-10:19:31 [http-nio-317-exec-10] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.JCAuditStatusMapper.getLocalBlackList-[159] ==> Parameters: 
2020/12/23-10:19:31 [http-nio-317-exec-10] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.JCAuditStatusMapper.getLocalBlackList-[159] <==      Total: 2
2020/12/23-10:19:31 [http-nio-317-exec-10] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.JCAuditStatusMapper.getLocalGreyList-[159] ==>  Preparing: select t.REQUESTID,CARNUMBER,s2.ENUM_NAME LICENSECOLORID,CARFEATURE,round(ELUDEMONEYNUMBER/100,2) ELUDEMONEYNUMBER,round(FACTMONEYNUMBER/100,2) FACTMONEYNUMBER,s.ENUM_NAME ELUDEMONEYTYPE,s1.ENUM_NAME ELUDEMONEYTYPEITEM,s3.ENUM_NAME CARTYPE,AXLETYPE, bt2.NAME ENTRYSTATIONID, bt3.NAME EXITSTATIONID, to_char(ENTRYSTATIONTIME,'yyyy-mm-dd HH24:mi:ss') ENTRYSTATIONTIME,to_char(EXITSTATIONTIME,'yyyy-mm-dd HH24:mi:ss') EXITSTATIONTIME, nvl(TOTALWEIGHT,'') TOTALWEIGHT, decode(HAVECARD,1,'是',0,'否','') HAVECARD, decode(HAVEDAMAGEDEVICE,1,'有',0,'无','') HAVEDAMAGEDEVICE, decode(HAVEVIDEO,1,'有',0,'无','') HAVEVIDEO, nvl(CPUCARDID,'') CPUCARDID, nvl(REQUESTDESCRIPTION,'') REQUESTDESCRIPTION, to_char(t.CREATETIME,'yyyy-mm-dd HH24:mi:ss') CREATETIME, CREATEUSERNAME, s4.dept_name CREATEDEPTID, nvl(SUMTOTAL,0) SUMTOTAL, bd1.DEPT_NAME SERVICEDEPTNAME from cd_jc.JC_GRAYLIST_REQUEST t INNER JOIN "CD_JC"."JC_GRAYLIST_FLOWPATH" jbf ON t.CURRENTFLOWPATHID = jbf.FLOWPATHID LEFT JOIN CD_SYSTEM.SYS_DEPT bd1 ON jbf.DEPTID = bd1.DEPT_WORK LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS s ON t.ELUDEMONEYTYPE = s.ENUM_VALUE and s.ENUM_ID = 43 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS s1 ON t.ELUDEMONEYTYPEITEM = s1.ENUM_VALUE and s1.ENUM_ID = 44 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS s2 ON t.LICENSECOLORID = s2.ENUM_VALUE and s2.ENUM_ID = 39 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS s3 ON s3.ENUM_VALUE = t.CARTYPE AND s3.ENUM_ID = 40 LEFT JOIN CD_SYSTEM.SYS_DEPT s4 ON to_char(s4.ID) = t.CREATEDEPTID LEFT JOIN (SELECT x.* FROM CD_PASS.BASIC_BASICINFODOWN_RES x WHERE x.downid = ( SELECT max( w.down_id ) FROM CD_PASS.CLEAR_DOWNLOAD_LOG w WHERE w.read_result = 1 AND w.file_type = 24 ) AND x.TYPE = '1') bt2 ON bt2.ID = t.ENTRYSTATIONID LEFT JOIN (SELECT x.* FROM CD_PASS.BASIC_BASICINFODOWN_RES x WHERE x.downid = ( SELECT max( w.down_id ) FROM CD_PASS.CLEAR_DOWNLOAD_LOG w WHERE w.read_result = 1 AND w.file_type = 24 ) AND x.TYPE = '1') bt3 ON bt3.ID = t.EXITSTATIONID where rownum<=2 order by t.CREATETIME desc 
2020/12/23-10:19:31 [http-nio-317-exec-10] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.JCAuditStatusMapper.getLocalGreyList-[159] ==> Parameters: 
2020/12/23-10:19:31 [http-nio-317-exec-10] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.JCAuditStatusMapper.getLocalGreyList-[159] <==      Total: 2
2020/12/23-10:19:35 [http-nio-317-exec-1] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[32] 方法执行前执行。。。。。before
2020/12/23-10:19:35 [http-nio-317-exec-1] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[33] <============================================
2020/12/23-10:19:35 [http-nio-317-exec-1] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[34] 请求来源： =》192.168.3.5
2020/12/23-10:19:35 [http-nio-317-exec-1] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[35] 请求URL：=》/JC/APP/getBlackOrGreyListByVehicle
2020/12/23-10:19:35 [http-nio-317-exec-1] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[36] 请求方式：=》POST
2020/12/23-10:19:35 [http-nio-317-exec-1] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[37] 响应方法：=》com.tuozhi.zhlw.admin.jcApp.controller.JCAuditStatusController.getBlackListByVehicle
2020/12/23-10:19:35 [http-nio-317-exec-1] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[38] 请求参数：=》[豫A12345]
2020/12/23-10:19:35 [http-nio-317-exec-1] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.JCAuditStatusMapper.getLocalBlackList-[159] ==>  Preparing: SELECT jbr.REQUESTID, jbr.CARNUMBER, sed.ENUM_NAME CARCOLOUR, jbr.CARFEATURE, round( jbr.ELUDEMONEYNUMBER / 100, 2 ) ELUDEMONEYNUMBER, round( jbr.FACTMONEYNUMBER / 100, 2 ) FACTMONEYNUMBER, sed1.ENUM_NAME ELUDEMONEYTYPE, CASE WHEN jbr.ELUDEMONEYTYPE = 1001 THEN sed2.ENUM_NAME WHEN jbr.ELUDEMONEYTYPE = 1002 THEN sed3.ENUM_NAME WHEN jbr.ELUDEMONEYTYPE = 1003 THEN sed4.ENUM_NAME WHEN jbr.ELUDEMONEYTYPE = 1004 THEN sed5.ENUM_NAME END ELUDEMONEYTYPEITEMNAME, sed6.ENUM_NAME CARTYPE, jbr.AXLETYPE, bt2.NAME ENTRYSTATIONID, bt3.NAME EXITSTATIONID, to_char( jbr.ENTRYSTATIONTIME, 'yyyy-mm-dd HH24:mi:ss' ) ENTRYSTATIONTIME, to_char( jbr.EXITSTATIONTIME, 'yyyy-mm-dd HH24:mi:ss' ) EXITSTATIONTIME, nvl( jbr.TOTALWEIGHT, '' ) TOTALWEIGHT, decode( jbr.HAVECARD, 1, '是', 0, '否', '' ) HAVECARD, decode( jbr.HAVEDAMAGEDEVICE, 1, '有', 0, '无', '' ) HAVEDAMAGEDEVICE, decode( jbr.HAVEVIDEO, 1, '有', 0, '无', '' ) HAVEVIDEO, nvl( jbr.CPUCARDID, '' ) CPUCARDID, nvl( jbr.REQUESTDESCRIPTION, '' ) REQUESTDESCRIPTION, to_char( jbr.CREATETIME, 'yyyy-mm-dd HH24:mi:ss' ) CREATETIME, jbr.CREATEUSERNAME, sed7.dept_name CREATEDEPTID, nvl( jbr.SUMTOTAL, 0 ) SUMTOTAL, bd1.DEPT_NAME SERVICEDEPTNAME, jbr1.SREQUESTID 撤销状态, --有值已撤销，没有值未撤销 jbr.IS_APP, jbr.REQUESTSTATUS FROM cd_jc.JC_BLACKLIST_REQUEST jbr LEFT JOIN "CD_JC"."JC_BLACKLIST_REQUEST" jbr1 ON jbr1.SREQUESTID = jbr.REQUESTID AND jbr1.DELETEFLAG = 1 AND jbr1.LOGICTYPE = 2 INNER JOIN "CD_JC"."JC_BLACKLIST_FLOWPATH" jbf ON jbr.CURRENTFLOWPATHID = jbf.FLOWPATHID LEFT JOIN CD_SYSTEM.SYS_DEPT bd1 ON jbf.OPERATEDEPTID = bd1.ID LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed ON sed.ENUM_VALUE = jbr.CARCOLOUR AND sed.ENUM_ID = 39 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed1 ON sed1.ENUM_VALUE = jbr.ELUDEMONEYTYPE AND sed1.ENUM_ID = 87 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed2 ON sed2.ENUM_VALUE = jbr.ELUDEMONEYTYPEITEM AND sed2.ENUM_ID = 88 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed3 ON sed3.ENUM_VALUE = jbr.ELUDEMONEYTYPEITEM AND sed3.ENUM_ID = 89 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed4 ON sed4.ENUM_VALUE = jbr.ELUDEMONEYTYPEITEM AND sed4.ENUM_ID = 90 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed5 ON sed5.ENUM_VALUE = jbr.ELUDEMONEYTYPEITEM AND sed5.ENUM_ID = 91 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed6 ON sed6.ENUM_VALUE = jbr.CARTYPE AND sed6.ENUM_ID = 40 LEFT JOIN CD_SYSTEM.SYS_DEPT sed7 ON sed7.ID = jbr.CREATEDEPTID LEFT JOIN ( SELECT x.* FROM CD_PASS.BASIC_BASICINFODOWN_RES x WHERE x.downid = ( SELECT max( w.down_id ) FROM CD_PASS.CLEAR_DOWNLOAD_LOG w WHERE w.read_result = 1 AND w.file_type = 24 ) AND x.TYPE = '1' ) bt2 ON bt2.ID = jbr.ENTRYSTATIONID LEFT JOIN ( SELECT x.* FROM CD_PASS.BASIC_BASICINFODOWN_RES x WHERE x.downid = ( SELECT max( w.down_id ) FROM CD_PASS.CLEAR_DOWNLOAD_LOG w WHERE w.read_result = 1 AND w.file_type = 24 ) AND x.TYPE = '1' ) bt3 ON bt3.ID = jbr.EXITSTATIONID WHERE jbr.DELETEFLAG = 1 AND jbr.LOGICTYPE =1 and jbr.CARNUMBER like '%'||?||'%' ORDER BY jbr.CREATETIME desc 
2020/12/23-10:19:35 [http-nio-317-exec-1] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.JCAuditStatusMapper.getLocalBlackList-[159] ==> Parameters: 豫A12345(String)
2020/12/23-10:19:35 [http-nio-317-exec-1] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.JCAuditStatusMapper.getLocalBlackList-[159] <==      Total: 1
2020/12/23-10:19:35 [http-nio-317-exec-1] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.JCAuditStatusMapper.getLocalGreyList-[159] ==>  Preparing: select t.REQUESTID,CARNUMBER,s2.ENUM_NAME LICENSECOLORID,CARFEATURE,round(ELUDEMONEYNUMBER/100,2) ELUDEMONEYNUMBER,round(FACTMONEYNUMBER/100,2) FACTMONEYNUMBER,s.ENUM_NAME ELUDEMONEYTYPE,s1.ENUM_NAME ELUDEMONEYTYPEITEM,s3.ENUM_NAME CARTYPE,AXLETYPE, bt2.NAME ENTRYSTATIONID, bt3.NAME EXITSTATIONID, to_char(ENTRYSTATIONTIME,'yyyy-mm-dd HH24:mi:ss') ENTRYSTATIONTIME,to_char(EXITSTATIONTIME,'yyyy-mm-dd HH24:mi:ss') EXITSTATIONTIME, nvl(TOTALWEIGHT,'') TOTALWEIGHT, decode(HAVECARD,1,'是',0,'否','') HAVECARD, decode(HAVEDAMAGEDEVICE,1,'有',0,'无','') HAVEDAMAGEDEVICE, decode(HAVEVIDEO,1,'有',0,'无','') HAVEVIDEO, nvl(CPUCARDID,'') CPUCARDID, nvl(REQUESTDESCRIPTION,'') REQUESTDESCRIPTION, to_char(t.CREATETIME,'yyyy-mm-dd HH24:mi:ss') CREATETIME, CREATEUSERNAME, s4.dept_name CREATEDEPTID, nvl(SUMTOTAL,0) SUMTOTAL, bd1.DEPT_NAME SERVICEDEPTNAME from cd_jc.JC_GRAYLIST_REQUEST t INNER JOIN "CD_JC"."JC_GRAYLIST_FLOWPATH" jbf ON t.CURRENTFLOWPATHID = jbf.FLOWPATHID LEFT JOIN CD_SYSTEM.SYS_DEPT bd1 ON jbf.DEPTID = bd1.DEPT_WORK LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS s ON t.ELUDEMONEYTYPE = s.ENUM_VALUE and s.ENUM_ID = 43 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS s1 ON t.ELUDEMONEYTYPEITEM = s1.ENUM_VALUE and s1.ENUM_ID = 44 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS s2 ON t.LICENSECOLORID = s2.ENUM_VALUE and s2.ENUM_ID = 39 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS s3 ON s3.ENUM_VALUE = t.CARTYPE AND s3.ENUM_ID = 40 LEFT JOIN CD_SYSTEM.SYS_DEPT s4 ON to_char(s4.ID) = t.CREATEDEPTID LEFT JOIN (SELECT x.* FROM CD_PASS.BASIC_BASICINFODOWN_RES x WHERE x.downid = ( SELECT max( w.down_id ) FROM CD_PASS.CLEAR_DOWNLOAD_LOG w WHERE w.read_result = 1 AND w.file_type = 24 ) AND x.TYPE = '1') bt2 ON bt2.ID = t.ENTRYSTATIONID LEFT JOIN (SELECT x.* FROM CD_PASS.BASIC_BASICINFODOWN_RES x WHERE x.downid = ( SELECT max( w.down_id ) FROM CD_PASS.CLEAR_DOWNLOAD_LOG w WHERE w.read_result = 1 AND w.file_type = 24 ) AND x.TYPE = '1') bt3 ON bt3.ID = t.EXITSTATIONID where CARNUMBER like '%'||?||'%' order by t.CREATETIME desc 
2020/12/23-10:19:35 [http-nio-317-exec-1] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.JCAuditStatusMapper.getLocalGreyList-[159] ==> Parameters: 豫A12345(String)
2020/12/23-10:19:35 [http-nio-317-exec-1] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.JCAuditStatusMapper.getLocalGreyList-[159] <==      Total: 0
2020/12/23-10:20:45 [http-nio-317-exec-3] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[32] 方法执行前执行。。。。。before
2020/12/23-10:20:45 [http-nio-317-exec-3] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[33] <============================================
2020/12/23-10:20:45 [http-nio-317-exec-3] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[34] 请求来源： =》192.168.3.5
2020/12/23-10:20:45 [http-nio-317-exec-3] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[35] 请求URL：=》/JC/APP/getNewVersionFilePath
2020/12/23-10:20:45 [http-nio-317-exec-3] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[36] 请求方式：=》POST
2020/12/23-10:20:45 [http-nio-317-exec-3] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[37] 响应方法：=》com.tuozhi.zhlw.admin.jcApp.controller.JCAppETCCardController.getNewVersionFilePath
2020/12/23-10:20:45 [http-nio-317-exec-3] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[38] 请求参数：=》[]
2020/12/23-10:20:45 [http-nio-317-exec-3] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.JCAppETCCardMapper.getNewVersionFilePath-[159] ==>  Preparing: SELECT VERSION,URLPATH FROM CD_JC.JC_APP_VERSION where rownum=1 ORDER BY VERSION desc 
2020/12/23-10:20:45 [http-nio-317-exec-3] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.JCAppETCCardMapper.getNewVersionFilePath-[159] ==> Parameters: 
2020/12/23-10:20:45 [http-nio-317-exec-3] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.JCAppETCCardMapper.getNewVersionFilePath-[159] <==      Total: 1
2020/12/23-10:20:46 [http-nio-317-exec-4] DEBUG com.tuozhi.zhlw.admin.mapper.LoginMapper.findBaseUserByLoginName-[159] ==>  Preparing: select t.ID as deptId,t.PARENT_ID as deptParentId,t.DEPT_NAME as deptName,t.DEPT_WORK as deptWork,u.LOGIN_NAME as loginName,u.USER_NAME as userName,u.PASSWORD as password,u.ID as userId,u.LAST_PASSWORD_MODIFY_TIME lastPasswordModifyTime,u.PASSWORD_HISTORY passwordHistory, t.PRIVILEGE_ID as privilegeId ,u.VALID_STATUS as validStatus,(select wm_concat(ROLE_ID) from SYS_USER_ROLES where USER_ID= u.ID) roleIds,t.DEPT_LONG_ID deptLongId, t.WORKFLOWDEPTROLE workFlowDeptRole from SYS_USERS u left join SYS_DEPT t on t.ID = u.DEPT_ID where u.LOGIN_NAME = ? 
2020/12/23-10:20:46 [http-nio-317-exec-4] DEBUG com.tuozhi.zhlw.admin.mapper.LoginMapper.findBaseUserByLoginName-[159] ==> Parameters: 1111111(String)
2020/12/23-10:20:46 [http-nio-317-exec-4] DEBUG com.tuozhi.zhlw.admin.mapper.LoginMapper.findBaseUserByLoginName-[159] <==      Total: 1
2020/12/23-10:20:46 [http-nio-317-exec-5] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[32] 方法执行前执行。。。。。before
2020/12/23-10:20:46 [http-nio-317-exec-5] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[33] <============================================
2020/12/23-10:20:46 [http-nio-317-exec-5] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[34] 请求来源： =》192.168.3.5
2020/12/23-10:20:46 [http-nio-317-exec-5] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[35] 请求URL：=》/JC/APP/getBlackOrGreyListByVehicle
2020/12/23-10:20:46 [http-nio-317-exec-5] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[36] 请求方式：=》POST
2020/12/23-10:20:46 [http-nio-317-exec-5] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[37] 响应方法：=》com.tuozhi.zhlw.admin.jcApp.controller.JCAuditStatusController.getBlackListByVehicle
2020/12/23-10:20:46 [http-nio-317-exec-5] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[38] 请求参数：=》[null]
2020/12/23-10:20:46 [http-nio-317-exec-5] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.JCAuditStatusMapper.getLocalBlackList-[159] ==>  Preparing: SELECT jbr.REQUESTID, jbr.CARNUMBER, sed.ENUM_NAME CARCOLOUR, jbr.CARFEATURE, round( jbr.ELUDEMONEYNUMBER / 100, 2 ) ELUDEMONEYNUMBER, round( jbr.FACTMONEYNUMBER / 100, 2 ) FACTMONEYNUMBER, sed1.ENUM_NAME ELUDEMONEYTYPE, CASE WHEN jbr.ELUDEMONEYTYPE = 1001 THEN sed2.ENUM_NAME WHEN jbr.ELUDEMONEYTYPE = 1002 THEN sed3.ENUM_NAME WHEN jbr.ELUDEMONEYTYPE = 1003 THEN sed4.ENUM_NAME WHEN jbr.ELUDEMONEYTYPE = 1004 THEN sed5.ENUM_NAME END ELUDEMONEYTYPEITEMNAME, sed6.ENUM_NAME CARTYPE, jbr.AXLETYPE, bt2.NAME ENTRYSTATIONID, bt3.NAME EXITSTATIONID, to_char( jbr.ENTRYSTATIONTIME, 'yyyy-mm-dd HH24:mi:ss' ) ENTRYSTATIONTIME, to_char( jbr.EXITSTATIONTIME, 'yyyy-mm-dd HH24:mi:ss' ) EXITSTATIONTIME, nvl( jbr.TOTALWEIGHT, '' ) TOTALWEIGHT, decode( jbr.HAVECARD, 1, '是', 0, '否', '' ) HAVECARD, decode( jbr.HAVEDAMAGEDEVICE, 1, '有', 0, '无', '' ) HAVEDAMAGEDEVICE, decode( jbr.HAVEVIDEO, 1, '有', 0, '无', '' ) HAVEVIDEO, nvl( jbr.CPUCARDID, '' ) CPUCARDID, nvl( jbr.REQUESTDESCRIPTION, '' ) REQUESTDESCRIPTION, to_char( jbr.CREATETIME, 'yyyy-mm-dd HH24:mi:ss' ) CREATETIME, jbr.CREATEUSERNAME, sed7.dept_name CREATEDEPTID, nvl( jbr.SUMTOTAL, 0 ) SUMTOTAL, bd1.DEPT_NAME SERVICEDEPTNAME, jbr1.SREQUESTID 撤销状态, --有值已撤销，没有值未撤销 jbr.IS_APP, jbr.REQUESTSTATUS FROM cd_jc.JC_BLACKLIST_REQUEST jbr LEFT JOIN "CD_JC"."JC_BLACKLIST_REQUEST" jbr1 ON jbr1.SREQUESTID = jbr.REQUESTID AND jbr1.DELETEFLAG = 1 AND jbr1.LOGICTYPE = 2 INNER JOIN "CD_JC"."JC_BLACKLIST_FLOWPATH" jbf ON jbr.CURRENTFLOWPATHID = jbf.FLOWPATHID LEFT JOIN CD_SYSTEM.SYS_DEPT bd1 ON jbf.OPERATEDEPTID = bd1.ID LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed ON sed.ENUM_VALUE = jbr.CARCOLOUR AND sed.ENUM_ID = 39 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed1 ON sed1.ENUM_VALUE = jbr.ELUDEMONEYTYPE AND sed1.ENUM_ID = 87 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed2 ON sed2.ENUM_VALUE = jbr.ELUDEMONEYTYPEITEM AND sed2.ENUM_ID = 88 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed3 ON sed3.ENUM_VALUE = jbr.ELUDEMONEYTYPEITEM AND sed3.ENUM_ID = 89 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed4 ON sed4.ENUM_VALUE = jbr.ELUDEMONEYTYPEITEM AND sed4.ENUM_ID = 90 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed5 ON sed5.ENUM_VALUE = jbr.ELUDEMONEYTYPEITEM AND sed5.ENUM_ID = 91 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed6 ON sed6.ENUM_VALUE = jbr.CARTYPE AND sed6.ENUM_ID = 40 LEFT JOIN CD_SYSTEM.SYS_DEPT sed7 ON sed7.ID = jbr.CREATEDEPTID LEFT JOIN ( SELECT x.* FROM CD_PASS.BASIC_BASICINFODOWN_RES x WHERE x.downid = ( SELECT max( w.down_id ) FROM CD_PASS.CLEAR_DOWNLOAD_LOG w WHERE w.read_result = 1 AND w.file_type = 24 ) AND x.TYPE = '1' ) bt2 ON bt2.ID = jbr.ENTRYSTATIONID LEFT JOIN ( SELECT x.* FROM CD_PASS.BASIC_BASICINFODOWN_RES x WHERE x.downid = ( SELECT max( w.down_id ) FROM CD_PASS.CLEAR_DOWNLOAD_LOG w WHERE w.read_result = 1 AND w.file_type = 24 ) AND x.TYPE = '1' ) bt3 ON bt3.ID = jbr.EXITSTATIONID WHERE jbr.DELETEFLAG = 1 AND jbr.LOGICTYPE =1 and rownum <=2 ORDER BY jbr.CREATETIME desc 
2020/12/23-10:20:46 [http-nio-317-exec-5] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.JCAuditStatusMapper.getLocalBlackList-[159] ==> Parameters: 
2020/12/23-10:20:46 [http-nio-317-exec-5] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.JCAuditStatusMapper.getLocalBlackList-[159] <==      Total: 2
2020/12/23-10:20:46 [http-nio-317-exec-5] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.JCAuditStatusMapper.getLocalGreyList-[159] ==>  Preparing: select t.REQUESTID,CARNUMBER,s2.ENUM_NAME LICENSECOLORID,CARFEATURE,round(ELUDEMONEYNUMBER/100,2) ELUDEMONEYNUMBER,round(FACTMONEYNUMBER/100,2) FACTMONEYNUMBER,s.ENUM_NAME ELUDEMONEYTYPE,s1.ENUM_NAME ELUDEMONEYTYPEITEM,s3.ENUM_NAME CARTYPE,AXLETYPE, bt2.NAME ENTRYSTATIONID, bt3.NAME EXITSTATIONID, to_char(ENTRYSTATIONTIME,'yyyy-mm-dd HH24:mi:ss') ENTRYSTATIONTIME,to_char(EXITSTATIONTIME,'yyyy-mm-dd HH24:mi:ss') EXITSTATIONTIME, nvl(TOTALWEIGHT,'') TOTALWEIGHT, decode(HAVECARD,1,'是',0,'否','') HAVECARD, decode(HAVEDAMAGEDEVICE,1,'有',0,'无','') HAVEDAMAGEDEVICE, decode(HAVEVIDEO,1,'有',0,'无','') HAVEVIDEO, nvl(CPUCARDID,'') CPUCARDID, nvl(REQUESTDESCRIPTION,'') REQUESTDESCRIPTION, to_char(t.CREATETIME,'yyyy-mm-dd HH24:mi:ss') CREATETIME, CREATEUSERNAME, s4.dept_name CREATEDEPTID, nvl(SUMTOTAL,0) SUMTOTAL, bd1.DEPT_NAME SERVICEDEPTNAME from cd_jc.JC_GRAYLIST_REQUEST t INNER JOIN "CD_JC"."JC_GRAYLIST_FLOWPATH" jbf ON t.CURRENTFLOWPATHID = jbf.FLOWPATHID LEFT JOIN CD_SYSTEM.SYS_DEPT bd1 ON jbf.DEPTID = bd1.DEPT_WORK LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS s ON t.ELUDEMONEYTYPE = s.ENUM_VALUE and s.ENUM_ID = 43 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS s1 ON t.ELUDEMONEYTYPEITEM = s1.ENUM_VALUE and s1.ENUM_ID = 44 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS s2 ON t.LICENSECOLORID = s2.ENUM_VALUE and s2.ENUM_ID = 39 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS s3 ON s3.ENUM_VALUE = t.CARTYPE AND s3.ENUM_ID = 40 LEFT JOIN CD_SYSTEM.SYS_DEPT s4 ON to_char(s4.ID) = t.CREATEDEPTID LEFT JOIN (SELECT x.* FROM CD_PASS.BASIC_BASICINFODOWN_RES x WHERE x.downid = ( SELECT max( w.down_id ) FROM CD_PASS.CLEAR_DOWNLOAD_LOG w WHERE w.read_result = 1 AND w.file_type = 24 ) AND x.TYPE = '1') bt2 ON bt2.ID = t.ENTRYSTATIONID LEFT JOIN (SELECT x.* FROM CD_PASS.BASIC_BASICINFODOWN_RES x WHERE x.downid = ( SELECT max( w.down_id ) FROM CD_PASS.CLEAR_DOWNLOAD_LOG w WHERE w.read_result = 1 AND w.file_type = 24 ) AND x.TYPE = '1') bt3 ON bt3.ID = t.EXITSTATIONID where rownum<=2 order by t.CREATETIME desc 
2020/12/23-10:20:46 [http-nio-317-exec-5] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.JCAuditStatusMapper.getLocalGreyList-[159] ==> Parameters: 
2020/12/23-10:20:46 [http-nio-317-exec-5] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.JCAuditStatusMapper.getLocalGreyList-[159] <==      Total: 2
2020/12/23-10:20:49 [http-nio-317-exec-6] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[32] 方法执行前执行。。。。。before
2020/12/23-10:20:49 [http-nio-317-exec-6] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[33] <============================================
2020/12/23-10:20:49 [http-nio-317-exec-6] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[34] 请求来源： =》192.168.3.5
2020/12/23-10:20:49 [http-nio-317-exec-6] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[35] 请求URL：=》/JC/APP/getBlackOrGreyListByVehicle
2020/12/23-10:20:49 [http-nio-317-exec-6] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[36] 请求方式：=》POST
2020/12/23-10:20:49 [http-nio-317-exec-6] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[37] 响应方法：=》com.tuozhi.zhlw.admin.jcApp.controller.JCAuditStatusController.getBlackListByVehicle
2020/12/23-10:20:49 [http-nio-317-exec-6] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[38] 请求参数：=》[豫A12345]
2020/12/23-10:20:49 [http-nio-317-exec-6] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.JCAuditStatusMapper.getLocalBlackList-[159] ==>  Preparing: SELECT jbr.REQUESTID, jbr.CARNUMBER, sed.ENUM_NAME CARCOLOUR, jbr.CARFEATURE, round( jbr.ELUDEMONEYNUMBER / 100, 2 ) ELUDEMONEYNUMBER, round( jbr.FACTMONEYNUMBER / 100, 2 ) FACTMONEYNUMBER, sed1.ENUM_NAME ELUDEMONEYTYPE, CASE WHEN jbr.ELUDEMONEYTYPE = 1001 THEN sed2.ENUM_NAME WHEN jbr.ELUDEMONEYTYPE = 1002 THEN sed3.ENUM_NAME WHEN jbr.ELUDEMONEYTYPE = 1003 THEN sed4.ENUM_NAME WHEN jbr.ELUDEMONEYTYPE = 1004 THEN sed5.ENUM_NAME END ELUDEMONEYTYPEITEMNAME, sed6.ENUM_NAME CARTYPE, jbr.AXLETYPE, bt2.NAME ENTRYSTATIONID, bt3.NAME EXITSTATIONID, to_char( jbr.ENTRYSTATIONTIME, 'yyyy-mm-dd HH24:mi:ss' ) ENTRYSTATIONTIME, to_char( jbr.EXITSTATIONTIME, 'yyyy-mm-dd HH24:mi:ss' ) EXITSTATIONTIME, nvl( jbr.TOTALWEIGHT, '' ) TOTALWEIGHT, decode( jbr.HAVECARD, 1, '是', 0, '否', '' ) HAVECARD, decode( jbr.HAVEDAMAGEDEVICE, 1, '有', 0, '无', '' ) HAVEDAMAGEDEVICE, decode( jbr.HAVEVIDEO, 1, '有', 0, '无', '' ) HAVEVIDEO, nvl( jbr.CPUCARDID, '' ) CPUCARDID, nvl( jbr.REQUESTDESCRIPTION, '' ) REQUESTDESCRIPTION, to_char( jbr.CREATETIME, 'yyyy-mm-dd HH24:mi:ss' ) CREATETIME, jbr.CREATEUSERNAME, sed7.dept_name CREATEDEPTID, nvl( jbr.SUMTOTAL, 0 ) SUMTOTAL, bd1.DEPT_NAME SERVICEDEPTNAME, jbr1.SREQUESTID 撤销状态, --有值已撤销，没有值未撤销 jbr.IS_APP, jbr.REQUESTSTATUS FROM cd_jc.JC_BLACKLIST_REQUEST jbr LEFT JOIN "CD_JC"."JC_BLACKLIST_REQUEST" jbr1 ON jbr1.SREQUESTID = jbr.REQUESTID AND jbr1.DELETEFLAG = 1 AND jbr1.LOGICTYPE = 2 INNER JOIN "CD_JC"."JC_BLACKLIST_FLOWPATH" jbf ON jbr.CURRENTFLOWPATHID = jbf.FLOWPATHID LEFT JOIN CD_SYSTEM.SYS_DEPT bd1 ON jbf.OPERATEDEPTID = bd1.ID LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed ON sed.ENUM_VALUE = jbr.CARCOLOUR AND sed.ENUM_ID = 39 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed1 ON sed1.ENUM_VALUE = jbr.ELUDEMONEYTYPE AND sed1.ENUM_ID = 87 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed2 ON sed2.ENUM_VALUE = jbr.ELUDEMONEYTYPEITEM AND sed2.ENUM_ID = 88 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed3 ON sed3.ENUM_VALUE = jbr.ELUDEMONEYTYPEITEM AND sed3.ENUM_ID = 89 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed4 ON sed4.ENUM_VALUE = jbr.ELUDEMONEYTYPEITEM AND sed4.ENUM_ID = 90 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed5 ON sed5.ENUM_VALUE = jbr.ELUDEMONEYTYPEITEM AND sed5.ENUM_ID = 91 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed6 ON sed6.ENUM_VALUE = jbr.CARTYPE AND sed6.ENUM_ID = 40 LEFT JOIN CD_SYSTEM.SYS_DEPT sed7 ON sed7.ID = jbr.CREATEDEPTID LEFT JOIN ( SELECT x.* FROM CD_PASS.BASIC_BASICINFODOWN_RES x WHERE x.downid = ( SELECT max( w.down_id ) FROM CD_PASS.CLEAR_DOWNLOAD_LOG w WHERE w.read_result = 1 AND w.file_type = 24 ) AND x.TYPE = '1' ) bt2 ON bt2.ID = jbr.ENTRYSTATIONID LEFT JOIN ( SELECT x.* FROM CD_PASS.BASIC_BASICINFODOWN_RES x WHERE x.downid = ( SELECT max( w.down_id ) FROM CD_PASS.CLEAR_DOWNLOAD_LOG w WHERE w.read_result = 1 AND w.file_type = 24 ) AND x.TYPE = '1' ) bt3 ON bt3.ID = jbr.EXITSTATIONID WHERE jbr.DELETEFLAG = 1 AND jbr.LOGICTYPE =1 and jbr.CARNUMBER like '%'||?||'%' ORDER BY jbr.CREATETIME desc 
2020/12/23-10:20:49 [http-nio-317-exec-6] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.JCAuditStatusMapper.getLocalBlackList-[159] ==> Parameters: 豫A12345(String)
2020/12/23-10:20:49 [http-nio-317-exec-6] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.JCAuditStatusMapper.getLocalBlackList-[159] <==      Total: 1
2020/12/23-10:20:49 [http-nio-317-exec-6] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.JCAuditStatusMapper.getLocalGreyList-[159] ==>  Preparing: select t.REQUESTID,CARNUMBER,s2.ENUM_NAME LICENSECOLORID,CARFEATURE,round(ELUDEMONEYNUMBER/100,2) ELUDEMONEYNUMBER,round(FACTMONEYNUMBER/100,2) FACTMONEYNUMBER,s.ENUM_NAME ELUDEMONEYTYPE,s1.ENUM_NAME ELUDEMONEYTYPEITEM,s3.ENUM_NAME CARTYPE,AXLETYPE, bt2.NAME ENTRYSTATIONID, bt3.NAME EXITSTATIONID, to_char(ENTRYSTATIONTIME,'yyyy-mm-dd HH24:mi:ss') ENTRYSTATIONTIME,to_char(EXITSTATIONTIME,'yyyy-mm-dd HH24:mi:ss') EXITSTATIONTIME, nvl(TOTALWEIGHT,'') TOTALWEIGHT, decode(HAVECARD,1,'是',0,'否','') HAVECARD, decode(HAVEDAMAGEDEVICE,1,'有',0,'无','') HAVEDAMAGEDEVICE, decode(HAVEVIDEO,1,'有',0,'无','') HAVEVIDEO, nvl(CPUCARDID,'') CPUCARDID, nvl(REQUESTDESCRIPTION,'') REQUESTDESCRIPTION, to_char(t.CREATETIME,'yyyy-mm-dd HH24:mi:ss') CREATETIME, CREATEUSERNAME, s4.dept_name CREATEDEPTID, nvl(SUMTOTAL,0) SUMTOTAL, bd1.DEPT_NAME SERVICEDEPTNAME from cd_jc.JC_GRAYLIST_REQUEST t INNER JOIN "CD_JC"."JC_GRAYLIST_FLOWPATH" jbf ON t.CURRENTFLOWPATHID = jbf.FLOWPATHID LEFT JOIN CD_SYSTEM.SYS_DEPT bd1 ON jbf.DEPTID = bd1.DEPT_WORK LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS s ON t.ELUDEMONEYTYPE = s.ENUM_VALUE and s.ENUM_ID = 43 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS s1 ON t.ELUDEMONEYTYPEITEM = s1.ENUM_VALUE and s1.ENUM_ID = 44 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS s2 ON t.LICENSECOLORID = s2.ENUM_VALUE and s2.ENUM_ID = 39 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS s3 ON s3.ENUM_VALUE = t.CARTYPE AND s3.ENUM_ID = 40 LEFT JOIN CD_SYSTEM.SYS_DEPT s4 ON to_char(s4.ID) = t.CREATEDEPTID LEFT JOIN (SELECT x.* FROM CD_PASS.BASIC_BASICINFODOWN_RES x WHERE x.downid = ( SELECT max( w.down_id ) FROM CD_PASS.CLEAR_DOWNLOAD_LOG w WHERE w.read_result = 1 AND w.file_type = 24 ) AND x.TYPE = '1') bt2 ON bt2.ID = t.ENTRYSTATIONID LEFT JOIN (SELECT x.* FROM CD_PASS.BASIC_BASICINFODOWN_RES x WHERE x.downid = ( SELECT max( w.down_id ) FROM CD_PASS.CLEAR_DOWNLOAD_LOG w WHERE w.read_result = 1 AND w.file_type = 24 ) AND x.TYPE = '1') bt3 ON bt3.ID = t.EXITSTATIONID where CARNUMBER like '%'||?||'%' order by t.CREATETIME desc 
2020/12/23-10:20:49 [http-nio-317-exec-6] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.JCAuditStatusMapper.getLocalGreyList-[159] ==> Parameters: 豫A12345(String)
2020/12/23-10:20:49 [http-nio-317-exec-6] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.JCAuditStatusMapper.getLocalGreyList-[159] <==      Total: 0
2020/12/23-10:20:52 [http-nio-317-exec-7] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[32] 方法执行前执行。。。。。before
2020/12/23-10:20:52 [http-nio-317-exec-7] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[33] <============================================
2020/12/23-10:20:52 [http-nio-317-exec-7] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[34] 请求来源： =》192.168.3.5
2020/12/23-10:20:52 [http-nio-317-exec-7] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[35] 请求URL：=》/JC/APP/getBlackOrGreyListByVehicle
2020/12/23-10:20:52 [http-nio-317-exec-7] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[36] 请求方式：=》POST
2020/12/23-10:20:52 [http-nio-317-exec-7] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[37] 响应方法：=》com.tuozhi.zhlw.admin.jcApp.controller.JCAuditStatusController.getBlackListByVehicle
2020/12/23-10:20:52 [http-nio-317-exec-7] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[38] 请求参数：=》[豫A12345]
2020/12/23-10:20:52 [http-nio-317-exec-7] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.JCAuditStatusMapper.getLocalBlackList-[159] ==>  Preparing: SELECT jbr.REQUESTID, jbr.CARNUMBER, sed.ENUM_NAME CARCOLOUR, jbr.CARFEATURE, round( jbr.ELUDEMONEYNUMBER / 100, 2 ) ELUDEMONEYNUMBER, round( jbr.FACTMONEYNUMBER / 100, 2 ) FACTMONEYNUMBER, sed1.ENUM_NAME ELUDEMONEYTYPE, CASE WHEN jbr.ELUDEMONEYTYPE = 1001 THEN sed2.ENUM_NAME WHEN jbr.ELUDEMONEYTYPE = 1002 THEN sed3.ENUM_NAME WHEN jbr.ELUDEMONEYTYPE = 1003 THEN sed4.ENUM_NAME WHEN jbr.ELUDEMONEYTYPE = 1004 THEN sed5.ENUM_NAME END ELUDEMONEYTYPEITEMNAME, sed6.ENUM_NAME CARTYPE, jbr.AXLETYPE, bt2.NAME ENTRYSTATIONID, bt3.NAME EXITSTATIONID, to_char( jbr.ENTRYSTATIONTIME, 'yyyy-mm-dd HH24:mi:ss' ) ENTRYSTATIONTIME, to_char( jbr.EXITSTATIONTIME, 'yyyy-mm-dd HH24:mi:ss' ) EXITSTATIONTIME, nvl( jbr.TOTALWEIGHT, '' ) TOTALWEIGHT, decode( jbr.HAVECARD, 1, '是', 0, '否', '' ) HAVECARD, decode( jbr.HAVEDAMAGEDEVICE, 1, '有', 0, '无', '' ) HAVEDAMAGEDEVICE, decode( jbr.HAVEVIDEO, 1, '有', 0, '无', '' ) HAVEVIDEO, nvl( jbr.CPUCARDID, '' ) CPUCARDID, nvl( jbr.REQUESTDESCRIPTION, '' ) REQUESTDESCRIPTION, to_char( jbr.CREATETIME, 'yyyy-mm-dd HH24:mi:ss' ) CREATETIME, jbr.CREATEUSERNAME, sed7.dept_name CREATEDEPTID, nvl( jbr.SUMTOTAL, 0 ) SUMTOTAL, bd1.DEPT_NAME SERVICEDEPTNAME, jbr1.SREQUESTID 撤销状态, --有值已撤销，没有值未撤销 jbr.IS_APP, jbr.REQUESTSTATUS FROM cd_jc.JC_BLACKLIST_REQUEST jbr LEFT JOIN "CD_JC"."JC_BLACKLIST_REQUEST" jbr1 ON jbr1.SREQUESTID = jbr.REQUESTID AND jbr1.DELETEFLAG = 1 AND jbr1.LOGICTYPE = 2 INNER JOIN "CD_JC"."JC_BLACKLIST_FLOWPATH" jbf ON jbr.CURRENTFLOWPATHID = jbf.FLOWPATHID LEFT JOIN CD_SYSTEM.SYS_DEPT bd1 ON jbf.OPERATEDEPTID = bd1.ID LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed ON sed.ENUM_VALUE = jbr.CARCOLOUR AND sed.ENUM_ID = 39 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed1 ON sed1.ENUM_VALUE = jbr.ELUDEMONEYTYPE AND sed1.ENUM_ID = 87 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed2 ON sed2.ENUM_VALUE = jbr.ELUDEMONEYTYPEITEM AND sed2.ENUM_ID = 88 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed3 ON sed3.ENUM_VALUE = jbr.ELUDEMONEYTYPEITEM AND sed3.ENUM_ID = 89 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed4 ON sed4.ENUM_VALUE = jbr.ELUDEMONEYTYPEITEM AND sed4.ENUM_ID = 90 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed5 ON sed5.ENUM_VALUE = jbr.ELUDEMONEYTYPEITEM AND sed5.ENUM_ID = 91 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed6 ON sed6.ENUM_VALUE = jbr.CARTYPE AND sed6.ENUM_ID = 40 LEFT JOIN CD_SYSTEM.SYS_DEPT sed7 ON sed7.ID = jbr.CREATEDEPTID LEFT JOIN ( SELECT x.* FROM CD_PASS.BASIC_BASICINFODOWN_RES x WHERE x.downid = ( SELECT max( w.down_id ) FROM CD_PASS.CLEAR_DOWNLOAD_LOG w WHERE w.read_result = 1 AND w.file_type = 24 ) AND x.TYPE = '1' ) bt2 ON bt2.ID = jbr.ENTRYSTATIONID LEFT JOIN ( SELECT x.* FROM CD_PASS.BASIC_BASICINFODOWN_RES x WHERE x.downid = ( SELECT max( w.down_id ) FROM CD_PASS.CLEAR_DOWNLOAD_LOG w WHERE w.read_result = 1 AND w.file_type = 24 ) AND x.TYPE = '1' ) bt3 ON bt3.ID = jbr.EXITSTATIONID WHERE jbr.DELETEFLAG = 1 AND jbr.LOGICTYPE =1 and jbr.CARNUMBER like '%'||?||'%' ORDER BY jbr.CREATETIME desc 
2020/12/23-10:20:52 [http-nio-317-exec-7] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.JCAuditStatusMapper.getLocalBlackList-[159] ==> Parameters: 豫A12345(String)
2020/12/23-10:20:53 [http-nio-317-exec-7] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.JCAuditStatusMapper.getLocalBlackList-[159] <==      Total: 1
2020/12/23-10:20:53 [http-nio-317-exec-7] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.JCAuditStatusMapper.getLocalGreyList-[159] ==>  Preparing: select t.REQUESTID,CARNUMBER,s2.ENUM_NAME LICENSECOLORID,CARFEATURE,round(ELUDEMONEYNUMBER/100,2) ELUDEMONEYNUMBER,round(FACTMONEYNUMBER/100,2) FACTMONEYNUMBER,s.ENUM_NAME ELUDEMONEYTYPE,s1.ENUM_NAME ELUDEMONEYTYPEITEM,s3.ENUM_NAME CARTYPE,AXLETYPE, bt2.NAME ENTRYSTATIONID, bt3.NAME EXITSTATIONID, to_char(ENTRYSTATIONTIME,'yyyy-mm-dd HH24:mi:ss') ENTRYSTATIONTIME,to_char(EXITSTATIONTIME,'yyyy-mm-dd HH24:mi:ss') EXITSTATIONTIME, nvl(TOTALWEIGHT,'') TOTALWEIGHT, decode(HAVECARD,1,'是',0,'否','') HAVECARD, decode(HAVEDAMAGEDEVICE,1,'有',0,'无','') HAVEDAMAGEDEVICE, decode(HAVEVIDEO,1,'有',0,'无','') HAVEVIDEO, nvl(CPUCARDID,'') CPUCARDID, nvl(REQUESTDESCRIPTION,'') REQUESTDESCRIPTION, to_char(t.CREATETIME,'yyyy-mm-dd HH24:mi:ss') CREATETIME, CREATEUSERNAME, s4.dept_name CREATEDEPTID, nvl(SUMTOTAL,0) SUMTOTAL, bd1.DEPT_NAME SERVICEDEPTNAME from cd_jc.JC_GRAYLIST_REQUEST t INNER JOIN "CD_JC"."JC_GRAYLIST_FLOWPATH" jbf ON t.CURRENTFLOWPATHID = jbf.FLOWPATHID LEFT JOIN CD_SYSTEM.SYS_DEPT bd1 ON jbf.DEPTID = bd1.DEPT_WORK LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS s ON t.ELUDEMONEYTYPE = s.ENUM_VALUE and s.ENUM_ID = 43 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS s1 ON t.ELUDEMONEYTYPEITEM = s1.ENUM_VALUE and s1.ENUM_ID = 44 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS s2 ON t.LICENSECOLORID = s2.ENUM_VALUE and s2.ENUM_ID = 39 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS s3 ON s3.ENUM_VALUE = t.CARTYPE AND s3.ENUM_ID = 40 LEFT JOIN CD_SYSTEM.SYS_DEPT s4 ON to_char(s4.ID) = t.CREATEDEPTID LEFT JOIN (SELECT x.* FROM CD_PASS.BASIC_BASICINFODOWN_RES x WHERE x.downid = ( SELECT max( w.down_id ) FROM CD_PASS.CLEAR_DOWNLOAD_LOG w WHERE w.read_result = 1 AND w.file_type = 24 ) AND x.TYPE = '1') bt2 ON bt2.ID = t.ENTRYSTATIONID LEFT JOIN (SELECT x.* FROM CD_PASS.BASIC_BASICINFODOWN_RES x WHERE x.downid = ( SELECT max( w.down_id ) FROM CD_PASS.CLEAR_DOWNLOAD_LOG w WHERE w.read_result = 1 AND w.file_type = 24 ) AND x.TYPE = '1') bt3 ON bt3.ID = t.EXITSTATIONID where CARNUMBER like '%'||?||'%' order by t.CREATETIME desc 
2020/12/23-10:20:53 [http-nio-317-exec-7] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.JCAuditStatusMapper.getLocalGreyList-[159] ==> Parameters: 豫A12345(String)
2020/12/23-10:20:53 [http-nio-317-exec-7] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.JCAuditStatusMapper.getLocalGreyList-[159] <==      Total: 0
2020/12/23-10:20:53 [http-nio-317-exec-8] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[32] 方法执行前执行。。。。。before
2020/12/23-10:20:53 [http-nio-317-exec-8] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[33] <============================================
2020/12/23-10:20:53 [http-nio-317-exec-8] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[34] 请求来源： =》192.168.3.5
2020/12/23-10:20:53 [http-nio-317-exec-8] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[35] 请求URL：=》/JC/APP/getBlackOrGreyListByVehicle
2020/12/23-10:20:53 [http-nio-317-exec-8] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[36] 请求方式：=》POST
2020/12/23-10:20:53 [http-nio-317-exec-8] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[37] 响应方法：=》com.tuozhi.zhlw.admin.jcApp.controller.JCAuditStatusController.getBlackListByVehicle
2020/12/23-10:20:53 [http-nio-317-exec-8] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[38] 请求参数：=》[豫A12345]
2020/12/23-10:20:53 [http-nio-317-exec-8] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.JCAuditStatusMapper.getLocalBlackList-[159] ==>  Preparing: SELECT jbr.REQUESTID, jbr.CARNUMBER, sed.ENUM_NAME CARCOLOUR, jbr.CARFEATURE, round( jbr.ELUDEMONEYNUMBER / 100, 2 ) ELUDEMONEYNUMBER, round( jbr.FACTMONEYNUMBER / 100, 2 ) FACTMONEYNUMBER, sed1.ENUM_NAME ELUDEMONEYTYPE, CASE WHEN jbr.ELUDEMONEYTYPE = 1001 THEN sed2.ENUM_NAME WHEN jbr.ELUDEMONEYTYPE = 1002 THEN sed3.ENUM_NAME WHEN jbr.ELUDEMONEYTYPE = 1003 THEN sed4.ENUM_NAME WHEN jbr.ELUDEMONEYTYPE = 1004 THEN sed5.ENUM_NAME END ELUDEMONEYTYPEITEMNAME, sed6.ENUM_NAME CARTYPE, jbr.AXLETYPE, bt2.NAME ENTRYSTATIONID, bt3.NAME EXITSTATIONID, to_char( jbr.ENTRYSTATIONTIME, 'yyyy-mm-dd HH24:mi:ss' ) ENTRYSTATIONTIME, to_char( jbr.EXITSTATIONTIME, 'yyyy-mm-dd HH24:mi:ss' ) EXITSTATIONTIME, nvl( jbr.TOTALWEIGHT, '' ) TOTALWEIGHT, decode( jbr.HAVECARD, 1, '是', 0, '否', '' ) HAVECARD, decode( jbr.HAVEDAMAGEDEVICE, 1, '有', 0, '无', '' ) HAVEDAMAGEDEVICE, decode( jbr.HAVEVIDEO, 1, '有', 0, '无', '' ) HAVEVIDEO, nvl( jbr.CPUCARDID, '' ) CPUCARDID, nvl( jbr.REQUESTDESCRIPTION, '' ) REQUESTDESCRIPTION, to_char( jbr.CREATETIME, 'yyyy-mm-dd HH24:mi:ss' ) CREATETIME, jbr.CREATEUSERNAME, sed7.dept_name CREATEDEPTID, nvl( jbr.SUMTOTAL, 0 ) SUMTOTAL, bd1.DEPT_NAME SERVICEDEPTNAME, jbr1.SREQUESTID 撤销状态, --有值已撤销，没有值未撤销 jbr.IS_APP, jbr.REQUESTSTATUS FROM cd_jc.JC_BLACKLIST_REQUEST jbr LEFT JOIN "CD_JC"."JC_BLACKLIST_REQUEST" jbr1 ON jbr1.SREQUESTID = jbr.REQUESTID AND jbr1.DELETEFLAG = 1 AND jbr1.LOGICTYPE = 2 INNER JOIN "CD_JC"."JC_BLACKLIST_FLOWPATH" jbf ON jbr.CURRENTFLOWPATHID = jbf.FLOWPATHID LEFT JOIN CD_SYSTEM.SYS_DEPT bd1 ON jbf.OPERATEDEPTID = bd1.ID LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed ON sed.ENUM_VALUE = jbr.CARCOLOUR AND sed.ENUM_ID = 39 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed1 ON sed1.ENUM_VALUE = jbr.ELUDEMONEYTYPE AND sed1.ENUM_ID = 87 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed2 ON sed2.ENUM_VALUE = jbr.ELUDEMONEYTYPEITEM AND sed2.ENUM_ID = 88 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed3 ON sed3.ENUM_VALUE = jbr.ELUDEMONEYTYPEITEM AND sed3.ENUM_ID = 89 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed4 ON sed4.ENUM_VALUE = jbr.ELUDEMONEYTYPEITEM AND sed4.ENUM_ID = 90 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed5 ON sed5.ENUM_VALUE = jbr.ELUDEMONEYTYPEITEM AND sed5.ENUM_ID = 91 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed6 ON sed6.ENUM_VALUE = jbr.CARTYPE AND sed6.ENUM_ID = 40 LEFT JOIN CD_SYSTEM.SYS_DEPT sed7 ON sed7.ID = jbr.CREATEDEPTID LEFT JOIN ( SELECT x.* FROM CD_PASS.BASIC_BASICINFODOWN_RES x WHERE x.downid = ( SELECT max( w.down_id ) FROM CD_PASS.CLEAR_DOWNLOAD_LOG w WHERE w.read_result = 1 AND w.file_type = 24 ) AND x.TYPE = '1' ) bt2 ON bt2.ID = jbr.ENTRYSTATIONID LEFT JOIN ( SELECT x.* FROM CD_PASS.BASIC_BASICINFODOWN_RES x WHERE x.downid = ( SELECT max( w.down_id ) FROM CD_PASS.CLEAR_DOWNLOAD_LOG w WHERE w.read_result = 1 AND w.file_type = 24 ) AND x.TYPE = '1' ) bt3 ON bt3.ID = jbr.EXITSTATIONID WHERE jbr.DELETEFLAG = 1 AND jbr.LOGICTYPE =1 and jbr.CARNUMBER like '%'||?||'%' ORDER BY jbr.CREATETIME desc 
2020/12/23-10:20:53 [http-nio-317-exec-8] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.JCAuditStatusMapper.getLocalBlackList-[159] ==> Parameters: 豫A12345(String)
2020/12/23-10:20:54 [http-nio-317-exec-8] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.JCAuditStatusMapper.getLocalBlackList-[159] <==      Total: 1
2020/12/23-10:20:54 [http-nio-317-exec-8] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.JCAuditStatusMapper.getLocalGreyList-[159] ==>  Preparing: select t.REQUESTID,CARNUMBER,s2.ENUM_NAME LICENSECOLORID,CARFEATURE,round(ELUDEMONEYNUMBER/100,2) ELUDEMONEYNUMBER,round(FACTMONEYNUMBER/100,2) FACTMONEYNUMBER,s.ENUM_NAME ELUDEMONEYTYPE,s1.ENUM_NAME ELUDEMONEYTYPEITEM,s3.ENUM_NAME CARTYPE,AXLETYPE, bt2.NAME ENTRYSTATIONID, bt3.NAME EXITSTATIONID, to_char(ENTRYSTATIONTIME,'yyyy-mm-dd HH24:mi:ss') ENTRYSTATIONTIME,to_char(EXITSTATIONTIME,'yyyy-mm-dd HH24:mi:ss') EXITSTATIONTIME, nvl(TOTALWEIGHT,'') TOTALWEIGHT, decode(HAVECARD,1,'是',0,'否','') HAVECARD, decode(HAVEDAMAGEDEVICE,1,'有',0,'无','') HAVEDAMAGEDEVICE, decode(HAVEVIDEO,1,'有',0,'无','') HAVEVIDEO, nvl(CPUCARDID,'') CPUCARDID, nvl(REQUESTDESCRIPTION,'') REQUESTDESCRIPTION, to_char(t.CREATETIME,'yyyy-mm-dd HH24:mi:ss') CREATETIME, CREATEUSERNAME, s4.dept_name CREATEDEPTID, nvl(SUMTOTAL,0) SUMTOTAL, bd1.DEPT_NAME SERVICEDEPTNAME from cd_jc.JC_GRAYLIST_REQUEST t INNER JOIN "CD_JC"."JC_GRAYLIST_FLOWPATH" jbf ON t.CURRENTFLOWPATHID = jbf.FLOWPATHID LEFT JOIN CD_SYSTEM.SYS_DEPT bd1 ON jbf.DEPTID = bd1.DEPT_WORK LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS s ON t.ELUDEMONEYTYPE = s.ENUM_VALUE and s.ENUM_ID = 43 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS s1 ON t.ELUDEMONEYTYPEITEM = s1.ENUM_VALUE and s1.ENUM_ID = 44 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS s2 ON t.LICENSECOLORID = s2.ENUM_VALUE and s2.ENUM_ID = 39 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS s3 ON s3.ENUM_VALUE = t.CARTYPE AND s3.ENUM_ID = 40 LEFT JOIN CD_SYSTEM.SYS_DEPT s4 ON to_char(s4.ID) = t.CREATEDEPTID LEFT JOIN (SELECT x.* FROM CD_PASS.BASIC_BASICINFODOWN_RES x WHERE x.downid = ( SELECT max( w.down_id ) FROM CD_PASS.CLEAR_DOWNLOAD_LOG w WHERE w.read_result = 1 AND w.file_type = 24 ) AND x.TYPE = '1') bt2 ON bt2.ID = t.ENTRYSTATIONID LEFT JOIN (SELECT x.* FROM CD_PASS.BASIC_BASICINFODOWN_RES x WHERE x.downid = ( SELECT max( w.down_id ) FROM CD_PASS.CLEAR_DOWNLOAD_LOG w WHERE w.read_result = 1 AND w.file_type = 24 ) AND x.TYPE = '1') bt3 ON bt3.ID = t.EXITSTATIONID where CARNUMBER like '%'||?||'%' order by t.CREATETIME desc 
2020/12/23-10:20:54 [http-nio-317-exec-8] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.JCAuditStatusMapper.getLocalGreyList-[159] ==> Parameters: 豫A12345(String)
2020/12/23-10:20:54 [http-nio-317-exec-8] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.JCAuditStatusMapper.getLocalGreyList-[159] <==      Total: 0
2020/12/23-10:21:35 [http-nio-317-exec-9] WARN  org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver-[199] Resolved [org.springframework.web.bind.MissingServletRequestParameterException: Required String parameter 'vehicleOrCardId' is not present]
2020/12/23-10:35:05 [http-nio-317-exec-10] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[32] 方法执行前执行。。。。。before
2020/12/23-10:35:05 [http-nio-317-exec-10] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[33] <============================================
2020/12/23-10:35:05 [http-nio-317-exec-10] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[34] 请求来源： =》192.168.3.5
2020/12/23-10:35:05 [http-nio-317-exec-10] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[35] 请求URL：=》/JC/APP/getNewVersionFilePath
2020/12/23-10:35:05 [http-nio-317-exec-10] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[36] 请求方式：=》POST
2020/12/23-10:35:05 [http-nio-317-exec-10] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[37] 响应方法：=》com.tuozhi.zhlw.admin.jcApp.controller.JCAppETCCardController.getNewVersionFilePath
2020/12/23-10:35:05 [http-nio-317-exec-10] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[38] 请求参数：=》[]
2020/12/23-10:35:05 [http-nio-317-exec-10] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.JCAppETCCardMapper.getNewVersionFilePath-[159] ==>  Preparing: SELECT VERSION,URLPATH FROM CD_JC.JC_APP_VERSION where rownum=1 ORDER BY VERSION desc 
2020/12/23-10:35:05 [http-nio-317-exec-10] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.JCAppETCCardMapper.getNewVersionFilePath-[159] ==> Parameters: 
2020/12/23-10:35:05 [http-nio-317-exec-10] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.JCAppETCCardMapper.getNewVersionFilePath-[159] <==      Total: 1
2020/12/23-10:35:40 [http-nio-317-exec-1] DEBUG com.tuozhi.zhlw.admin.mapper.LoginMapper.findBaseUserByLoginName-[159] ==>  Preparing: select t.ID as deptId,t.PARENT_ID as deptParentId,t.DEPT_NAME as deptName,t.DEPT_WORK as deptWork,u.LOGIN_NAME as loginName,u.USER_NAME as userName,u.PASSWORD as password,u.ID as userId,u.LAST_PASSWORD_MODIFY_TIME lastPasswordModifyTime,u.PASSWORD_HISTORY passwordHistory, t.PRIVILEGE_ID as privilegeId ,u.VALID_STATUS as validStatus,(select wm_concat(ROLE_ID) from SYS_USER_ROLES where USER_ID= u.ID) roleIds,t.DEPT_LONG_ID deptLongId, t.WORKFLOWDEPTROLE workFlowDeptRole from SYS_USERS u left join SYS_DEPT t on t.ID = u.DEPT_ID where u.LOGIN_NAME = ? 
2020/12/23-10:35:40 [http-nio-317-exec-1] DEBUG com.tuozhi.zhlw.admin.mapper.LoginMapper.findBaseUserByLoginName-[159] ==> Parameters: 1111111(String)
2020/12/23-10:35:40 [http-nio-317-exec-1] DEBUG com.tuozhi.zhlw.admin.mapper.LoginMapper.findBaseUserByLoginName-[159] <==      Total: 1
2020/12/23-10:35:40 [http-nio-317-exec-2] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[32] 方法执行前执行。。。。。before
2020/12/23-10:35:40 [http-nio-317-exec-2] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[33] <============================================
2020/12/23-10:35:40 [http-nio-317-exec-2] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[34] 请求来源： =》192.168.3.5
2020/12/23-10:35:40 [http-nio-317-exec-2] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[35] 请求URL：=》/JC/APP/getBlackOrGreyListByVehicle
2020/12/23-10:35:40 [http-nio-317-exec-2] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[36] 请求方式：=》POST
2020/12/23-10:35:40 [http-nio-317-exec-2] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[37] 响应方法：=》com.tuozhi.zhlw.admin.jcApp.controller.JCAuditStatusController.getBlackListByVehicle
2020/12/23-10:35:40 [http-nio-317-exec-2] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[38] 请求参数：=》[null]
2020/12/23-10:35:40 [http-nio-317-exec-2] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.JCAuditStatusMapper.getLocalBlackList-[159] ==>  Preparing: SELECT jbr.REQUESTID, jbr.CARNUMBER, sed.ENUM_NAME CARCOLOUR, jbr.CARFEATURE, round( jbr.ELUDEMONEYNUMBER / 100, 2 ) ELUDEMONEYNUMBER, round( jbr.FACTMONEYNUMBER / 100, 2 ) FACTMONEYNUMBER, sed1.ENUM_NAME ELUDEMONEYTYPE, CASE WHEN jbr.ELUDEMONEYTYPE = 1001 THEN sed2.ENUM_NAME WHEN jbr.ELUDEMONEYTYPE = 1002 THEN sed3.ENUM_NAME WHEN jbr.ELUDEMONEYTYPE = 1003 THEN sed4.ENUM_NAME WHEN jbr.ELUDEMONEYTYPE = 1004 THEN sed5.ENUM_NAME END ELUDEMONEYTYPEITEMNAME, sed6.ENUM_NAME CARTYPE, jbr.AXLETYPE, bt2.NAME ENTRYSTATIONID, bt3.NAME EXITSTATIONID, to_char( jbr.ENTRYSTATIONTIME, 'yyyy-mm-dd HH24:mi:ss' ) ENTRYSTATIONTIME, to_char( jbr.EXITSTATIONTIME, 'yyyy-mm-dd HH24:mi:ss' ) EXITSTATIONTIME, nvl( jbr.TOTALWEIGHT, '' ) TOTALWEIGHT, decode( jbr.HAVECARD, 1, '是', 0, '否', '' ) HAVECARD, decode( jbr.HAVEDAMAGEDEVICE, 1, '有', 0, '无', '' ) HAVEDAMAGEDEVICE, decode( jbr.HAVEVIDEO, 1, '有', 0, '无', '' ) HAVEVIDEO, nvl( jbr.CPUCARDID, '' ) CPUCARDID, nvl( jbr.REQUESTDESCRIPTION, '' ) REQUESTDESCRIPTION, to_char( jbr.CREATETIME, 'yyyy-mm-dd HH24:mi:ss' ) CREATETIME, jbr.CREATEUSERNAME, sed7.dept_name CREATEDEPTID, nvl( jbr.SUMTOTAL, 0 ) SUMTOTAL, bd1.DEPT_NAME SERVICEDEPTNAME, jbr1.SREQUESTID 撤销状态, --有值已撤销，没有值未撤销 jbr.IS_APP, jbr.REQUESTSTATUS FROM cd_jc.JC_BLACKLIST_REQUEST jbr LEFT JOIN "CD_JC"."JC_BLACKLIST_REQUEST" jbr1 ON jbr1.SREQUESTID = jbr.REQUESTID AND jbr1.DELETEFLAG = 1 AND jbr1.LOGICTYPE = 2 INNER JOIN "CD_JC"."JC_BLACKLIST_FLOWPATH" jbf ON jbr.CURRENTFLOWPATHID = jbf.FLOWPATHID LEFT JOIN CD_SYSTEM.SYS_DEPT bd1 ON jbf.OPERATEDEPTID = bd1.ID LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed ON sed.ENUM_VALUE = jbr.CARCOLOUR AND sed.ENUM_ID = 39 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed1 ON sed1.ENUM_VALUE = jbr.ELUDEMONEYTYPE AND sed1.ENUM_ID = 87 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed2 ON sed2.ENUM_VALUE = jbr.ELUDEMONEYTYPEITEM AND sed2.ENUM_ID = 88 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed3 ON sed3.ENUM_VALUE = jbr.ELUDEMONEYTYPEITEM AND sed3.ENUM_ID = 89 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed4 ON sed4.ENUM_VALUE = jbr.ELUDEMONEYTYPEITEM AND sed4.ENUM_ID = 90 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed5 ON sed5.ENUM_VALUE = jbr.ELUDEMONEYTYPEITEM AND sed5.ENUM_ID = 91 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed6 ON sed6.ENUM_VALUE = jbr.CARTYPE AND sed6.ENUM_ID = 40 LEFT JOIN CD_SYSTEM.SYS_DEPT sed7 ON sed7.ID = jbr.CREATEDEPTID LEFT JOIN ( SELECT x.* FROM CD_PASS.BASIC_BASICINFODOWN_RES x WHERE x.downid = ( SELECT max( w.down_id ) FROM CD_PASS.CLEAR_DOWNLOAD_LOG w WHERE w.read_result = 1 AND w.file_type = 24 ) AND x.TYPE = '1' ) bt2 ON bt2.ID = jbr.ENTRYSTATIONID LEFT JOIN ( SELECT x.* FROM CD_PASS.BASIC_BASICINFODOWN_RES x WHERE x.downid = ( SELECT max( w.down_id ) FROM CD_PASS.CLEAR_DOWNLOAD_LOG w WHERE w.read_result = 1 AND w.file_type = 24 ) AND x.TYPE = '1' ) bt3 ON bt3.ID = jbr.EXITSTATIONID WHERE jbr.DELETEFLAG = 1 AND jbr.LOGICTYPE =1 and rownum <=2 ORDER BY jbr.CREATETIME desc 
2020/12/23-10:35:40 [http-nio-317-exec-2] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.JCAuditStatusMapper.getLocalBlackList-[159] ==> Parameters: 
2020/12/23-10:35:40 [http-nio-317-exec-2] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.JCAuditStatusMapper.getLocalBlackList-[159] <==      Total: 2
2020/12/23-10:35:40 [http-nio-317-exec-2] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.JCAuditStatusMapper.getLocalGreyList-[159] ==>  Preparing: select t.REQUESTID,CARNUMBER,s2.ENUM_NAME LICENSECOLORID,CARFEATURE,round(ELUDEMONEYNUMBER/100,2) ELUDEMONEYNUMBER,round(FACTMONEYNUMBER/100,2) FACTMONEYNUMBER,s.ENUM_NAME ELUDEMONEYTYPE,s1.ENUM_NAME ELUDEMONEYTYPEITEM,s3.ENUM_NAME CARTYPE,AXLETYPE, bt2.NAME ENTRYSTATIONID, bt3.NAME EXITSTATIONID, to_char(ENTRYSTATIONTIME,'yyyy-mm-dd HH24:mi:ss') ENTRYSTATIONTIME,to_char(EXITSTATIONTIME,'yyyy-mm-dd HH24:mi:ss') EXITSTATIONTIME, nvl(TOTALWEIGHT,'') TOTALWEIGHT, decode(HAVECARD,1,'是',0,'否','') HAVECARD, decode(HAVEDAMAGEDEVICE,1,'有',0,'无','') HAVEDAMAGEDEVICE, decode(HAVEVIDEO,1,'有',0,'无','') HAVEVIDEO, nvl(CPUCARDID,'') CPUCARDID, nvl(REQUESTDESCRIPTION,'') REQUESTDESCRIPTION, to_char(t.CREATETIME,'yyyy-mm-dd HH24:mi:ss') CREATETIME, CREATEUSERNAME, s4.dept_name CREATEDEPTID, nvl(SUMTOTAL,0) SUMTOTAL, bd1.DEPT_NAME SERVICEDEPTNAME from cd_jc.JC_GRAYLIST_REQUEST t INNER JOIN "CD_JC"."JC_GRAYLIST_FLOWPATH" jbf ON t.CURRENTFLOWPATHID = jbf.FLOWPATHID LEFT JOIN CD_SYSTEM.SYS_DEPT bd1 ON jbf.DEPTID = bd1.DEPT_WORK LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS s ON t.ELUDEMONEYTYPE = s.ENUM_VALUE and s.ENUM_ID = 43 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS s1 ON t.ELUDEMONEYTYPEITEM = s1.ENUM_VALUE and s1.ENUM_ID = 44 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS s2 ON t.LICENSECOLORID = s2.ENUM_VALUE and s2.ENUM_ID = 39 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS s3 ON s3.ENUM_VALUE = t.CARTYPE AND s3.ENUM_ID = 40 LEFT JOIN CD_SYSTEM.SYS_DEPT s4 ON to_char(s4.ID) = t.CREATEDEPTID LEFT JOIN (SELECT x.* FROM CD_PASS.BASIC_BASICINFODOWN_RES x WHERE x.downid = ( SELECT max( w.down_id ) FROM CD_PASS.CLEAR_DOWNLOAD_LOG w WHERE w.read_result = 1 AND w.file_type = 24 ) AND x.TYPE = '1') bt2 ON bt2.ID = t.ENTRYSTATIONID LEFT JOIN (SELECT x.* FROM CD_PASS.BASIC_BASICINFODOWN_RES x WHERE x.downid = ( SELECT max( w.down_id ) FROM CD_PASS.CLEAR_DOWNLOAD_LOG w WHERE w.read_result = 1 AND w.file_type = 24 ) AND x.TYPE = '1') bt3 ON bt3.ID = t.EXITSTATIONID where rownum<=2 order by t.CREATETIME desc 
2020/12/23-10:35:40 [http-nio-317-exec-2] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.JCAuditStatusMapper.getLocalGreyList-[159] ==> Parameters: 
2020/12/23-10:35:40 [http-nio-317-exec-2] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.JCAuditStatusMapper.getLocalGreyList-[159] <==      Total: 2
2020/12/23-10:35:44 [http-nio-317-exec-3] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[32] 方法执行前执行。。。。。before
2020/12/23-10:35:44 [http-nio-317-exec-3] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[33] <============================================
2020/12/23-10:35:44 [http-nio-317-exec-3] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[34] 请求来源： =》192.168.3.5
2020/12/23-10:35:44 [http-nio-317-exec-3] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[35] 请求URL：=》/JC/APP/getBlackOrGreyListByVehicle
2020/12/23-10:35:44 [http-nio-317-exec-3] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[36] 请求方式：=》POST
2020/12/23-10:35:44 [http-nio-317-exec-3] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[37] 响应方法：=》com.tuozhi.zhlw.admin.jcApp.controller.JCAuditStatusController.getBlackListByVehicle
2020/12/23-10:35:44 [http-nio-317-exec-3] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[38] 请求参数：=》[豫A12345]
2020/12/23-10:35:44 [http-nio-317-exec-3] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.JCAuditStatusMapper.getLocalBlackList-[159] ==>  Preparing: SELECT jbr.REQUESTID, jbr.CARNUMBER, sed.ENUM_NAME CARCOLOUR, jbr.CARFEATURE, round( jbr.ELUDEMONEYNUMBER / 100, 2 ) ELUDEMONEYNUMBER, round( jbr.FACTMONEYNUMBER / 100, 2 ) FACTMONEYNUMBER, sed1.ENUM_NAME ELUDEMONEYTYPE, CASE WHEN jbr.ELUDEMONEYTYPE = 1001 THEN sed2.ENUM_NAME WHEN jbr.ELUDEMONEYTYPE = 1002 THEN sed3.ENUM_NAME WHEN jbr.ELUDEMONEYTYPE = 1003 THEN sed4.ENUM_NAME WHEN jbr.ELUDEMONEYTYPE = 1004 THEN sed5.ENUM_NAME END ELUDEMONEYTYPEITEMNAME, sed6.ENUM_NAME CARTYPE, jbr.AXLETYPE, bt2.NAME ENTRYSTATIONID, bt3.NAME EXITSTATIONID, to_char( jbr.ENTRYSTATIONTIME, 'yyyy-mm-dd HH24:mi:ss' ) ENTRYSTATIONTIME, to_char( jbr.EXITSTATIONTIME, 'yyyy-mm-dd HH24:mi:ss' ) EXITSTATIONTIME, nvl( jbr.TOTALWEIGHT, '' ) TOTALWEIGHT, decode( jbr.HAVECARD, 1, '是', 0, '否', '' ) HAVECARD, decode( jbr.HAVEDAMAGEDEVICE, 1, '有', 0, '无', '' ) HAVEDAMAGEDEVICE, decode( jbr.HAVEVIDEO, 1, '有', 0, '无', '' ) HAVEVIDEO, nvl( jbr.CPUCARDID, '' ) CPUCARDID, nvl( jbr.REQUESTDESCRIPTION, '' ) REQUESTDESCRIPTION, to_char( jbr.CREATETIME, 'yyyy-mm-dd HH24:mi:ss' ) CREATETIME, jbr.CREATEUSERNAME, sed7.dept_name CREATEDEPTID, nvl( jbr.SUMTOTAL, 0 ) SUMTOTAL, bd1.DEPT_NAME SERVICEDEPTNAME, jbr1.SREQUESTID 撤销状态, --有值已撤销，没有值未撤销 jbr.IS_APP, jbr.REQUESTSTATUS FROM cd_jc.JC_BLACKLIST_REQUEST jbr LEFT JOIN "CD_JC"."JC_BLACKLIST_REQUEST" jbr1 ON jbr1.SREQUESTID = jbr.REQUESTID AND jbr1.DELETEFLAG = 1 AND jbr1.LOGICTYPE = 2 INNER JOIN "CD_JC"."JC_BLACKLIST_FLOWPATH" jbf ON jbr.CURRENTFLOWPATHID = jbf.FLOWPATHID LEFT JOIN CD_SYSTEM.SYS_DEPT bd1 ON jbf.OPERATEDEPTID = bd1.ID LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed ON sed.ENUM_VALUE = jbr.CARCOLOUR AND sed.ENUM_ID = 39 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed1 ON sed1.ENUM_VALUE = jbr.ELUDEMONEYTYPE AND sed1.ENUM_ID = 87 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed2 ON sed2.ENUM_VALUE = jbr.ELUDEMONEYTYPEITEM AND sed2.ENUM_ID = 88 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed3 ON sed3.ENUM_VALUE = jbr.ELUDEMONEYTYPEITEM AND sed3.ENUM_ID = 89 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed4 ON sed4.ENUM_VALUE = jbr.ELUDEMONEYTYPEITEM AND sed4.ENUM_ID = 90 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed5 ON sed5.ENUM_VALUE = jbr.ELUDEMONEYTYPEITEM AND sed5.ENUM_ID = 91 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed6 ON sed6.ENUM_VALUE = jbr.CARTYPE AND sed6.ENUM_ID = 40 LEFT JOIN CD_SYSTEM.SYS_DEPT sed7 ON sed7.ID = jbr.CREATEDEPTID LEFT JOIN ( SELECT x.* FROM CD_PASS.BASIC_BASICINFODOWN_RES x WHERE x.downid = ( SELECT max( w.down_id ) FROM CD_PASS.CLEAR_DOWNLOAD_LOG w WHERE w.read_result = 1 AND w.file_type = 24 ) AND x.TYPE = '1' ) bt2 ON bt2.ID = jbr.ENTRYSTATIONID LEFT JOIN ( SELECT x.* FROM CD_PASS.BASIC_BASICINFODOWN_RES x WHERE x.downid = ( SELECT max( w.down_id ) FROM CD_PASS.CLEAR_DOWNLOAD_LOG w WHERE w.read_result = 1 AND w.file_type = 24 ) AND x.TYPE = '1' ) bt3 ON bt3.ID = jbr.EXITSTATIONID WHERE jbr.DELETEFLAG = 1 AND jbr.LOGICTYPE =1 and jbr.CARNUMBER like '%'||?||'%' ORDER BY jbr.CREATETIME desc 
2020/12/23-10:35:44 [http-nio-317-exec-3] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.JCAuditStatusMapper.getLocalBlackList-[159] ==> Parameters: 豫A12345(String)
2020/12/23-10:35:44 [http-nio-317-exec-3] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.JCAuditStatusMapper.getLocalBlackList-[159] <==      Total: 1
2020/12/23-10:35:44 [http-nio-317-exec-3] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.JCAuditStatusMapper.getLocalGreyList-[159] ==>  Preparing: select t.REQUESTID,CARNUMBER,s2.ENUM_NAME LICENSECOLORID,CARFEATURE,round(ELUDEMONEYNUMBER/100,2) ELUDEMONEYNUMBER,round(FACTMONEYNUMBER/100,2) FACTMONEYNUMBER,s.ENUM_NAME ELUDEMONEYTYPE,s1.ENUM_NAME ELUDEMONEYTYPEITEM,s3.ENUM_NAME CARTYPE,AXLETYPE, bt2.NAME ENTRYSTATIONID, bt3.NAME EXITSTATIONID, to_char(ENTRYSTATIONTIME,'yyyy-mm-dd HH24:mi:ss') ENTRYSTATIONTIME,to_char(EXITSTATIONTIME,'yyyy-mm-dd HH24:mi:ss') EXITSTATIONTIME, nvl(TOTALWEIGHT,'') TOTALWEIGHT, decode(HAVECARD,1,'是',0,'否','') HAVECARD, decode(HAVEDAMAGEDEVICE,1,'有',0,'无','') HAVEDAMAGEDEVICE, decode(HAVEVIDEO,1,'有',0,'无','') HAVEVIDEO, nvl(CPUCARDID,'') CPUCARDID, nvl(REQUESTDESCRIPTION,'') REQUESTDESCRIPTION, to_char(t.CREATETIME,'yyyy-mm-dd HH24:mi:ss') CREATETIME, CREATEUSERNAME, s4.dept_name CREATEDEPTID, nvl(SUMTOTAL,0) SUMTOTAL, bd1.DEPT_NAME SERVICEDEPTNAME from cd_jc.JC_GRAYLIST_REQUEST t INNER JOIN "CD_JC"."JC_GRAYLIST_FLOWPATH" jbf ON t.CURRENTFLOWPATHID = jbf.FLOWPATHID LEFT JOIN CD_SYSTEM.SYS_DEPT bd1 ON jbf.DEPTID = bd1.DEPT_WORK LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS s ON t.ELUDEMONEYTYPE = s.ENUM_VALUE and s.ENUM_ID = 43 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS s1 ON t.ELUDEMONEYTYPEITEM = s1.ENUM_VALUE and s1.ENUM_ID = 44 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS s2 ON t.LICENSECOLORID = s2.ENUM_VALUE and s2.ENUM_ID = 39 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS s3 ON s3.ENUM_VALUE = t.CARTYPE AND s3.ENUM_ID = 40 LEFT JOIN CD_SYSTEM.SYS_DEPT s4 ON to_char(s4.ID) = t.CREATEDEPTID LEFT JOIN (SELECT x.* FROM CD_PASS.BASIC_BASICINFODOWN_RES x WHERE x.downid = ( SELECT max( w.down_id ) FROM CD_PASS.CLEAR_DOWNLOAD_LOG w WHERE w.read_result = 1 AND w.file_type = 24 ) AND x.TYPE = '1') bt2 ON bt2.ID = t.ENTRYSTATIONID LEFT JOIN (SELECT x.* FROM CD_PASS.BASIC_BASICINFODOWN_RES x WHERE x.downid = ( SELECT max( w.down_id ) FROM CD_PASS.CLEAR_DOWNLOAD_LOG w WHERE w.read_result = 1 AND w.file_type = 24 ) AND x.TYPE = '1') bt3 ON bt3.ID = t.EXITSTATIONID where CARNUMBER like '%'||?||'%' order by t.CREATETIME desc 
2020/12/23-10:35:44 [http-nio-317-exec-3] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.JCAuditStatusMapper.getLocalGreyList-[159] ==> Parameters: 豫A12345(String)
2020/12/23-10:35:44 [http-nio-317-exec-3] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.JCAuditStatusMapper.getLocalGreyList-[159] <==      Total: 0
2020/12/23-10:38:37 [http-nio-317-exec-5] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[32] 方法执行前执行。。。。。before
2020/12/23-10:38:37 [http-nio-317-exec-5] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[33] <============================================
2020/12/23-10:38:37 [http-nio-317-exec-5] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[34] 请求来源： =》192.168.3.5
2020/12/23-10:38:37 [http-nio-317-exec-5] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[35] 请求URL：=》/JC/APP/getStationByProvincename
2020/12/23-10:38:37 [http-nio-317-exec-5] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[36] 请求方式：=》POST
2020/12/23-10:38:37 [http-nio-317-exec-5] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[37] 响应方法：=》com.tuozhi.zhlw.admin.jcApp.controller.JCAppETCCardController.getStationByProvincename
2020/12/23-10:38:37 [http-nio-317-exec-5] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[38] 请求参数：=》[天津, null]
2020/12/23-10:38:37 [http-nio-317-exec-5] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.JCAppETCCardMapper.getStationByProvincename-[159] ==>  Preparing: SELECT x.ID, x.NAME, n.PROVINCENAME, x.NAME || ' (' || n.PROVINCENAME || '-' || x.ID || ')' AS STATIONNAME FROM CD_PASS.BASIC_BASICINFODOWN_RES x LEFT JOIN "CD_TRADE"."BASE_NETPROVINCE" n ON n.PROVINCEID = x.PROVINCEID WHERE x.downid = ( SELECT max( w.down_id ) FROM "CD_PASS".CLEAR_DOWNLOAD_LOG w WHERE w.read_result = 1 AND w.file_type = 24 ) AND x.TYPE = '1' and n.PROVINCENAME=? 
2020/12/23-10:38:37 [http-nio-317-exec-5] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.JCAppETCCardMapper.getStationByProvincename-[159] ==> Parameters: 天津(String)
2020/12/23-10:38:37 [http-nio-317-exec-5] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.JCAppETCCardMapper.getStationByProvincename-[159] <==      Total: 138
2020/12/23-10:39:02 [http-nio-317-exec-6] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[32] 方法执行前执行。。。。。before
2020/12/23-10:39:02 [http-nio-317-exec-6] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[33] <============================================
2020/12/23-10:39:02 [http-nio-317-exec-6] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[34] 请求来源： =》192.168.3.5
2020/12/23-10:39:02 [http-nio-317-exec-6] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[35] 请求URL：=》/JC/APP/getBlackListBySrequestId
2020/12/23-10:39:02 [http-nio-317-exec-6] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[36] 请求方式：=》POST
2020/12/23-10:39:02 [http-nio-317-exec-6] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[37] 响应方法：=》com.tuozhi.zhlw.admin.jcApp.controller.OwerController.getBlackListBySrequestId
2020/12/23-10:39:02 [http-nio-317-exec-6] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[38] 请求参数：=》[{"sRequestId":"202012235367"}]
2020/12/23-10:39:02 [http-nio-317-exec-6] DEBUG com.tuozhi.zhlw.admin.jc.mapper.BlackListRequestMapper.getBlackListBySrequestId-[159] ==>  Preparing: select s.DEPT_NAME DEPTNAME,jbr.CREATEUSERNAME from cd_jc.JC_BLACKLIST_REQUEST jbr left join cd_system.sys_dept s on jbr.CREATEDEPTID=s.ID where jbr.SREQUESTID=? and jbr.DELETEFLAG=1 and jbr.LOGICTYPE=2 
2020/12/23-10:39:02 [http-nio-317-exec-6] DEBUG com.tuozhi.zhlw.admin.jc.mapper.BlackListRequestMapper.getBlackListBySrequestId-[159] ==> Parameters: 202012235367(Long)
2020/12/23-10:39:02 [http-nio-317-exec-6] DEBUG com.tuozhi.zhlw.admin.jc.mapper.BlackListRequestMapper.getBlackListBySrequestId-[159] <==      Total: 0
2020/12/23-10:39:02 [http-nio-317-exec-7] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[32] 方法执行前执行。。。。。before
2020/12/23-10:39:02 [http-nio-317-exec-7] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[33] <============================================
2020/12/23-10:39:02 [http-nio-317-exec-7] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[34] 请求来源： =》192.168.3.5
2020/12/23-10:39:02 [http-nio-317-exec-7] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[35] 请求URL：=》/JC/APP/insertJCBlackOrdersRevoked/1111111
2020/12/23-10:39:02 [http-nio-317-exec-7] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[36] 请求方式：=》POST
2020/12/23-10:39:02 [http-nio-317-exec-7] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[37] 响应方法：=》com.tuozhi.zhlw.admin.jcApp.controller.JCAuditStatusController.insertJCBlackOrdersRevoked
2020/12/23-10:39:02 [http-nio-317-exec-7] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[38] 请求参数：=》[{"carNumber":"豫A12345","ferretOutStationId":"G0002120020030","disgorgementMoneyNumber":"0","carColour":0,"repairFeePhone":"222","isTicket":1,"repairFeeUserName":"哟哟哟","createUserName":"哟哟哟","sRequestId":"202012235367","ferretOutStationTime":"2020-12-23 10:38:39"}, [Lorg.springframework.web.multipart.MultipartFile;@425560be, 1111111]
2020/12/23-10:39:02 [http-nio-317-exec-7] DEBUG com.tuozhi.zhlw.admin.mapper.LoginMapper.findBaseUserByLoginName-[159] ==>  Preparing: select t.ID as deptId,t.PARENT_ID as deptParentId,t.DEPT_NAME as deptName,t.DEPT_WORK as deptWork,u.LOGIN_NAME as loginName,u.USER_NAME as userName,u.PASSWORD as password,u.ID as userId,u.LAST_PASSWORD_MODIFY_TIME lastPasswordModifyTime,u.PASSWORD_HISTORY passwordHistory, t.PRIVILEGE_ID as privilegeId ,u.VALID_STATUS as validStatus,(select wm_concat(ROLE_ID) from SYS_USER_ROLES where USER_ID= u.ID) roleIds,t.DEPT_LONG_ID deptLongId, t.WORKFLOWDEPTROLE workFlowDeptRole from SYS_USERS u left join SYS_DEPT t on t.ID = u.DEPT_ID where u.LOGIN_NAME = ? 
2020/12/23-10:39:02 [http-nio-317-exec-7] DEBUG com.tuozhi.zhlw.admin.mapper.LoginMapper.findBaseUserByLoginName-[159] ==> Parameters: 1111111(String)
2020/12/23-10:39:02 [http-nio-317-exec-7] DEBUG com.tuozhi.zhlw.admin.mapper.LoginMapper.findBaseUserByLoginName-[159] <==      Total: 1
2020/12/23-10:39:03 [http-nio-317-exec-7] DEBUG com.tuozhi.zhlw.admin.jc.mapper.BlackListRequestMapper.getDataByRequestId-[159] ==>  Preparing: SELECT jbr.cardLossFee /100 cardLossFee, jbr.REQUESTID, jbr.CARNUMBER, jbr.CARFEATURE, jbr.CARTYPE, vev.ENUM_NAME CARTYPENAME, jbr.EXITSTATIONID, ROUND(jbr.ELUDEMONEYNUMBER/100,2) ELUDEMONEYNUMBER, ROUND(jbr.PAYMONEYNUMBER/100,2) PAYMONEYNUMBER, jbr.ELUDEMONEYTYPE, jbr.REQUESTDESCRIPTION, jbr.CREATETIME, jbr.LOGINUSERID, jbr.CREATEUSERNAME, jbr.REQUESTSTATUS, jbr.CREATEDEPTID, jbr.ENTRYSTATIONID, jbr.ENTRYSTATIONTIME, jbr.EXITSTATIONTIME, jbr.TOTALWEIGHT, ROUND(jbr.FACTMONEYNUMBER/100,2) FACTMONEYNUMBER, jbr.AXLETYPE, jbr.CURRENTFLOWPATHID, jbr.LOGICTYPE, jbr.FERRETOUTSTATIONID, jbr.FERRETOUTSTATIONTIME, ROUND(jbr.DISGORGEMENTMONEYNUMBER/100,2) DISGORGEMENTMONEYNUMBER, jbr.CARDID, jbr.HAVEDAMAGEDEVICE, jbr.HAVEVIDEO, jbr.HAVECARD, jbr.WORKFLOW_DEFINATION_ID WORKFLOWDEFINATIONID, jbr.eludeMoneyTypeItem, jbr.SUMTOTAL, jbr.CPUCARDID, jbr.OBUID, jbr.RECOVERTIME, jbr.PHYSICALTRUTHSTATUS, jbr.DEVCARNUMBER, jbr.PHONE, jbr.INVESTIGATIONID, jbr.SEAT_NUM SEATNUM, jbr.DELETEFLAG, jbr.CARCOLOUR, vvc.ENUM_NAME carColourName, jbr.MEDIATYPE, jbf.OPERATEDEPTID DEPTID, jbf.FLOWPATHSTATUS FLOWPATHSTATUS, jbf.WORKFLOWNODEID, t.codename ISSUER, to_char(jbf.CREATETIME, 'yyyy-mm-dd hh24:mi:ss' ) AS FlowPathCREATETIME, bd1.DEPT_NAME, bd2.DEPT_NAME AS CreateStationName, (SELECT count(1) FROM "CD_JC"."JC_EVADETOLL_RECORD" jer WHERE jer.BLACKLISTADDID = jbr.REQUESTID ) ADDEVADETOLLCOUNT, bs1.NAME ENSECTIONNAME, bs2.NAME EXSECTIONNAME, bt1.NAME ENTRYSTATIONNAME, bt2.NAME EXITSTATIONNAME, bt3.NAME ferretOutStationName, sed1.ENUM_NAME ELUDEMONEYTYPENAME, CASE WHEN jbr.ELUDEMONEYTYPE = 1001 THEN sed2.ENUM_NAME WHEN jbr.ELUDEMONEYTYPE = 1002 THEN sed3.ENUM_NAME WHEN jbr.ELUDEMONEYTYPE = 1003 THEN sed4.ENUM_NAME WHEN jbr.ELUDEMONEYTYPE = 1004 THEN sed5.ENUM_NAME END ELUDEMONEYTYPEITEMNAME, sed8.ENUM_NAME HAVECARDNAME, jbr1.EXITSTATIONTIME EXITSTATIONTIME1, bt4.NAME EXITSTATIONNAME1, jbr1.PHONE PHONE1 FROM "CD_JC"."JC_BLACKLIST_REQUEST" jbr left JOIN "CD_JC"."JC_BLACKLIST_REQUEST" jbr1 ON jbr.SREQUESTID = jbr1.REQUESTID and jbr1.DELETEFLAG = 1 AND jbr1.LOGICTYPE = 1 left join CD_ETC.etc_system_code t on jbr.issuer=t.codevalue and t.typeid=62 and t.codevalue like '%1001' left join cd_system.V_ENUM_VEHICLETYPE vev on vev.ENUM_VALUE=jbr.CARTYPE left join cd_system.V_VEHICLEPLATE_COLOR vvc on vvc.ENUM_VALUE=jbr.CARCOLOUR INNER JOIN "CD_JC"."JC_BLACKLIST_FLOWPATH" jbf ON jbr.CURRENTFLOWPATHID = jbf.FLOWPATHID LEFT JOIN CD_SYSTEM.SYS_DEPT bd1 ON jbf.OPERATEDEPTID = bd1.ID LEFT JOIN CD_SYSTEM.SYS_DEPT bd2 ON jbr.CREATEDEPTID = bd2.ID LEFT JOIN CD_PASS.BASE_SECTION bs1 ON bs1.ID = jbr.ENSECTIONID LEFT JOIN CD_PASS.BASE_SECTION bs2 ON bs2.ID = jbr.EXSECTIONID LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed1 ON sed1.ENUM_VALUE = jbr.ELUDEMONEYTYPE AND sed1.ENUM_ID = 87 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed2 ON sed2.ENUM_VALUE = jbr.ELUDEMONEYTYPEITEM AND sed2.ENUM_ID = 88 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed3 ON sed3.ENUM_VALUE = jbr.ELUDEMONEYTYPEITEM AND sed3.ENUM_ID = 89 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed4 ON sed4.ENUM_VALUE = jbr.ELUDEMONEYTYPEITEM AND sed4.ENUM_ID = 90 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed5 ON sed5.ENUM_VALUE = jbr.ELUDEMONEYTYPEITEM AND sed5.ENUM_ID = 91 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed8 ON sed8.ENUM_VALUE = jbr1.HAVECARD AND sed8.ENUM_ID = 2025 LEFT JOIN (SELECT x.* FROM CD_PASS.BASIC_BASICINFODOWN_RES x WHERE x.downid = ( SELECT max( w.down_id ) FROM CD_PASS.CLEAR_DOWNLOAD_LOG w WHERE w.read_result = 1 AND w.file_type = 24 ) AND x.TYPE = '1') bt1 ON bt1.ID = jbr.ENTRYSTATIONID LEFT JOIN (SELECT x.* FROM CD_PASS.BASIC_BASICINFODOWN_RES x WHERE x.downid = ( SELECT max( w.down_id ) FROM CD_PASS.CLEAR_DOWNLOAD_LOG w WHERE w.read_result = 1 AND w.file_type = 24 ) AND x.TYPE = '1') bt2 ON bt2.ID = jbr.EXITSTATIONID LEFT JOIN (SELECT x.* FROM CD_PASS.BASIC_BASICINFODOWN_RES x WHERE x.downid = ( SELECT max( w.down_id ) FROM CD_PASS.CLEAR_DOWNLOAD_LOG w WHERE w.read_result = 1 AND w.file_type = 24 ) AND x.TYPE = '1') bt3 ON bt3.ID = jbr.ferretOutStationId LEFT JOIN (SELECT x.* FROM CD_PASS.BASIC_BASICINFODOWN_RES x WHERE x.downid = ( SELECT max( w.down_id ) FROM CD_PASS.CLEAR_DOWNLOAD_LOG w WHERE w.read_result = 1 AND w.file_type = 24 ) AND x.TYPE = '1') bt4 ON bt4.ID = jbr1.EXITSTATIONID WHERE jbr.REQUESTID = ? 
2020/12/23-10:39:03 [http-nio-317-exec-7] DEBUG com.tuozhi.zhlw.admin.jc.mapper.BlackListRequestMapper.getDataByRequestId-[159] ==> Parameters: 202012235367(Long)
2020/12/23-10:39:04 [http-nio-317-exec-7] DEBUG com.tuozhi.zhlw.admin.jc.mapper.BlackListRequestMapper.getDataByRequestId-[159] <==      Total: 1
2020/12/23-10:39:04 [http-nio-317-exec-7] DEBUG com.tuozhi.zhlw.admin.jc.mapper.JcWorkFlowNodeMapper.getDataByDefinationInitDept-[159] ==>  Preparing: SELECT p.* FROM ( SELECT jwn.NODEID, jwn.DEFINATIONID, jwn.NODENAME, jwn.PREVNODEID, jwn.NEXTNODEID, jwn.WORKFLOWDEPTROLE, jwn.NODETYPE, jwn.CREATETIME FROM "CD_JC"."JC_WORKFLOW_NODE" jwn LEFT JOIN (SELECT * FROM(SELECT jwd.DEFINATION_ID,jwd.DEFINATION_STATUS,jwd.DEFINATION_MENU,jwd.CREATE_TIME,regexp_substr( DEFINATION_INIT_DEPT, '[^,]+', 1, LEVEL ) definationInitDept FROM "CD_JC".JC_WORKFLOW_DEFINATION jwd CONNECT BY LEVEL <= regexp_count ( jwd.DEFINATION_INIT_DEPT, ',' ) + 1 and jwd.DEFINATION_ID = prior jwd.DEFINATION_ID and prior dbms_random.value is not null) WHERE definationInitDept = ?) jwd2 ON jwd2.DEFINATION_ID = jwn.DEFINATIONID WHERE jwn.NODETYPE = 1 AND jwd2.DEFINATION_STATUS = 4 AND jwd2.DEFINATION_MENU = ? ORDER BY jwd2.CREATE_TIME DESC ) p WHERE ROWNUM = 1 
2020/12/23-10:39:04 [http-nio-317-exec-7] DEBUG com.tuozhi.zhlw.admin.jc.mapper.JcWorkFlowNodeMapper.getDataByDefinationInitDept-[159] ==> Parameters: 20530(String), 1(Integer)
2020/12/23-10:39:04 [http-nio-317-exec-7] DEBUG com.tuozhi.zhlw.admin.jc.mapper.JcWorkFlowNodeMapper.getDataByDefinationInitDept-[159] <==      Total: 1
2020/12/23-10:39:04 [http-nio-317-exec-7] DEBUG com.tuozhi.zhlw.admin.jc.mapper.BaseDeptMapper.getDeptId-[159] ==>  Preparing: SELECT ID from sys_dept where WORKFLOWDEPTROLE = 5 CONNECT BY PRIOR PARENT_ID =ID START WITH ID=? 
2020/12/23-10:39:04 [http-nio-317-exec-7] DEBUG com.tuozhi.zhlw.admin.jc.mapper.BaseDeptMapper.getDeptId-[159] ==> Parameters: 20530(Long)
2020/12/23-10:39:04 [http-nio-317-exec-7] DEBUG com.tuozhi.zhlw.admin.jc.mapper.BaseDeptMapper.getDeptId-[159] <==      Total: 1
2020/12/23-10:39:04 [http-nio-317-exec-7] DEBUG com.tuozhi.zhlw.admin.jc.mapper.BlackListRequestMapper.addBlackRevoked-[159] ==>  Preparing: INSERT INTO CD_JC.JC_BLACKLIST_REQUEST ( REQUESTID, CARNUMBER, CARCOLOUR, CREATEUSERNAME, REQUESTSTATUS, CURRENTFLOWPATHID, LOGICTYPE, FERRETOUTSTATIONID, FERRETOUTSTATIONTIME, DISGORGEMENTMONEYNUMBER, WORKFLOW_DEFINATION_ID, CPUCARDID, OBUID, DEVCARNUMBER, REQUESTDESCRIPTION, CREATETIME, LOGINUSERID, CREATEDEPTID, DELETEFLAG, SREQUESTID, CARTYPE, ENTRYSTATIONID, ELUDEMONEYTYPE, ELUDEMONEYTYPEITEM, COMPANYDEPTID, EXITSTATIONID, REPAIRFEEUSERNAME, REPAIRFEEPHONE, ISTICKET, IS_APP ) VALUES ( TO_NUMBER(to_char(sysdate,'yyyymmdd')||"CD_JC"."SEQ_JC_BLACKLIST_REQUEST".nextval), ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, current_date, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2020/12/23-10:39:04 [http-nio-317-exec-7] DEBUG com.tuozhi.zhlw.admin.jc.mapper.BlackListRequestMapper.addBlackRevoked-[159] ==> Parameters: 豫A12345(String), 0(Integer), 哟哟哟(String), 1(Integer), null, 2(Integer), G0002120020030(String), 2020-12-23 10:38:39.0(Timestamp), 0.0(Double), 3(Integer), null, null, null, null, 21129(Long), 20530(Long), 1(Integer), 202012235367(Long), 1(Integer), G0018120020010(String), 1001(Integer), 1(Integer), 20510(Long), G0018120030020(String), 哟哟哟(String), 222(String), 1(String), 1(Integer)
2020/12/23-10:39:04 [http-nio-317-exec-7] DEBUG com.tuozhi.zhlw.admin.jc.mapper.BlackListRequestMapper.addBlackRevoked-[159] <==    Updates: 1
2020/12/23-10:39:04 [http-nio-317-exec-7] DEBUG com.tuozhi.zhlw.admin.jc.mapper.BlackListRequestMapper.addBlackRevoked!selectKey-[159] ==>  Preparing: select TO_NUMBER(to_char(sysdate,'yyyymmdd')|| CD_JC.SEQ_JC_BLACKLIST_REQUEST.CURRVAL) FROM DUAL 
2020/12/23-10:39:04 [http-nio-317-exec-7] DEBUG com.tuozhi.zhlw.admin.jc.mapper.BlackListRequestMapper.addBlackRevoked!selectKey-[159] ==> Parameters: 
2020/12/23-10:39:04 [http-nio-317-exec-7] DEBUG com.tuozhi.zhlw.admin.jc.mapper.BlackListRequestMapper.addBlackRevoked!selectKey-[159] <==      Total: 1
2020/12/23-10:39:04 [http-nio-317-exec-7] DEBUG com.tuozhi.zhlw.admin.jc.mapper.BlackListFlowpathMapper.addBlackFlowPath-[159] ==>  Preparing: INSERT INTO CD_JC.JC_BLACKLIST_FLOWPATH ( FLOWPATHID, REQUESTID, FLOWPATHNAME, CREATETIME, OPERATEDEPTID, WORKFLOWDEFINATIONID, WORKFLOWNODEID ) VALUES ( CD_JC.SEQ_JC_BLACKLIST_FLOWPATH.nextval, ?, ?, CURRENT_DATE, ?, ?, ? ) 
2020/12/23-10:39:04 [http-nio-317-exec-7] DEBUG com.tuozhi.zhlw.admin.jc.mapper.BlackListFlowpathMapper.addBlackFlowPath-[159] ==> Parameters: 202012235368(Long), 黑名单撤销申请(String), 20530(Long), 3(Integer), 3(Integer)
2020/12/23-10:39:04 [http-nio-317-exec-7] DEBUG com.tuozhi.zhlw.admin.jc.mapper.BlackListFlowpathMapper.addBlackFlowPath-[159] <==    Updates: 1
2020/12/23-10:39:04 [http-nio-317-exec-7] DEBUG com.tuozhi.zhlw.admin.jc.mapper.BlackListFlowpathMapper.addBlackFlowPath!selectKey-[159] ==>  Preparing: select CD_JC.SEQ_JC_BLACKLIST_FLOWPATH.CURRVAL FROM DUAL 
2020/12/23-10:39:04 [http-nio-317-exec-7] DEBUG com.tuozhi.zhlw.admin.jc.mapper.BlackListFlowpathMapper.addBlackFlowPath!selectKey-[159] ==> Parameters: 
2020/12/23-10:39:04 [http-nio-317-exec-7] DEBUG com.tuozhi.zhlw.admin.jc.mapper.BlackListFlowpathMapper.addBlackFlowPath!selectKey-[159] <==      Total: 1
2020/12/23-10:39:04 [http-nio-317-exec-7] DEBUG com.tuozhi.zhlw.admin.jc.mapper.BlackListRequestMapper.uptFlowPathId-[159] ==>  Preparing: UPDATE CD_JC.JC_BLACKLIST_REQUEST r SET r.CURRENTFLOWPATHID = ? where r.REQUESTID = ? 
2020/12/23-10:39:04 [http-nio-317-exec-7] DEBUG com.tuozhi.zhlw.admin.jc.mapper.BlackListRequestMapper.uptFlowPathId-[159] ==> Parameters: 11035(Integer), 202012235368(Long)
2020/12/23-10:39:04 [http-nio-317-exec-7] DEBUG com.tuozhi.zhlw.admin.jc.mapper.BlackListRequestMapper.uptFlowPathId-[159] <==    Updates: 1
2020/12/23-10:39:04 [http-nio-317-exec-7] DEBUG com.tuozhi.zhlw.admin.jc.mapper.BlackListAttachmentMapper.saveBlacklistAttachment-[159] ==>  Preparing: insert into CD_JC.JC_APP_BLACKLIST_ATTACHMENT values(CD_JC.SEQ_JC_APP_BL_ATTACHMENT.nextval, ?,?,?,?,?,?,?,?,?,?) 
2020/12/23-10:39:04 [http-nio-317-exec-7] DEBUG com.tuozhi.zhlw.admin.jc.mapper.BlackListAttachmentMapper.saveBlacklistAttachment-[159] ==> Parameters: IMG_CMP_143357919.jpeg(String), 259171(Long), (String), 202012235368(Long), 3(Integer), 21129(Long), 稽查部收费站小号(String), 20530(Long), 稽查部收费站级别(String), 11035(Integer)
2020/12/23-10:39:04 [http-nio-317-exec-7] DEBUG com.tuozhi.zhlw.admin.jc.mapper.BlackListAttachmentMapper.saveBlacklistAttachment-[159] <==    Updates: 1
2020/12/23-10:39:04 [http-nio-317-exec-7] DEBUG com.tuozhi.zhlw.admin.jc.mapper.JcLogMapper.selectOperationLogByCarNum-[159] ==>  Preparing: select * from cd_jc.jc_operation_log jol where vehiclelicense=? and vehiclelicenseColor= ? 
2020/12/23-10:39:04 [http-nio-317-exec-7] DEBUG com.tuozhi.zhlw.admin.jc.mapper.JcLogMapper.selectOperationLogByCarNum-[159] ==> Parameters: 豫A12345(String), 0(Integer)
2020/12/23-10:39:05 [http-nio-317-exec-7] DEBUG com.tuozhi.zhlw.admin.jc.mapper.JcLogMapper.selectOperationLogByCarNum-[159] <==      Total: 1
2020/12/23-10:39:05 [http-nio-317-exec-8] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[32] 方法执行前执行。。。。。before
2020/12/23-10:39:05 [http-nio-317-exec-8] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[33] <============================================
2020/12/23-10:39:05 [http-nio-317-exec-8] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[34] 请求来源： =》192.168.3.5
2020/12/23-10:39:05 [http-nio-317-exec-8] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[35] 请求URL：=》/JC/APP/getBlackOrGreyListByVehicle
2020/12/23-10:39:05 [http-nio-317-exec-8] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[36] 请求方式：=》POST
2020/12/23-10:39:05 [http-nio-317-exec-8] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[37] 响应方法：=》com.tuozhi.zhlw.admin.jcApp.controller.JCAuditStatusController.getBlackListByVehicle
2020/12/23-10:39:05 [http-nio-317-exec-8] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[38] 请求参数：=》[豫A12345]
2020/12/23-10:39:05 [http-nio-317-exec-8] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.JCAuditStatusMapper.getLocalBlackList-[159] ==>  Preparing: SELECT jbr.REQUESTID, jbr.CARNUMBER, sed.ENUM_NAME CARCOLOUR, jbr.CARFEATURE, round( jbr.ELUDEMONEYNUMBER / 100, 2 ) ELUDEMONEYNUMBER, round( jbr.FACTMONEYNUMBER / 100, 2 ) FACTMONEYNUMBER, sed1.ENUM_NAME ELUDEMONEYTYPE, CASE WHEN jbr.ELUDEMONEYTYPE = 1001 THEN sed2.ENUM_NAME WHEN jbr.ELUDEMONEYTYPE = 1002 THEN sed3.ENUM_NAME WHEN jbr.ELUDEMONEYTYPE = 1003 THEN sed4.ENUM_NAME WHEN jbr.ELUDEMONEYTYPE = 1004 THEN sed5.ENUM_NAME END ELUDEMONEYTYPEITEMNAME, sed6.ENUM_NAME CARTYPE, jbr.AXLETYPE, bt2.NAME ENTRYSTATIONID, bt3.NAME EXITSTATIONID, to_char( jbr.ENTRYSTATIONTIME, 'yyyy-mm-dd HH24:mi:ss' ) ENTRYSTATIONTIME, to_char( jbr.EXITSTATIONTIME, 'yyyy-mm-dd HH24:mi:ss' ) EXITSTATIONTIME, nvl( jbr.TOTALWEIGHT, '' ) TOTALWEIGHT, decode( jbr.HAVECARD, 1, '是', 0, '否', '' ) HAVECARD, decode( jbr.HAVEDAMAGEDEVICE, 1, '有', 0, '无', '' ) HAVEDAMAGEDEVICE, decode( jbr.HAVEVIDEO, 1, '有', 0, '无', '' ) HAVEVIDEO, nvl( jbr.CPUCARDID, '' ) CPUCARDID, nvl( jbr.REQUESTDESCRIPTION, '' ) REQUESTDESCRIPTION, to_char( jbr.CREATETIME, 'yyyy-mm-dd HH24:mi:ss' ) CREATETIME, jbr.CREATEUSERNAME, sed7.dept_name CREATEDEPTID, nvl( jbr.SUMTOTAL, 0 ) SUMTOTAL, bd1.DEPT_NAME SERVICEDEPTNAME, jbr1.SREQUESTID 撤销状态, --有值已撤销，没有值未撤销 jbr.IS_APP, jbr.REQUESTSTATUS FROM cd_jc.JC_BLACKLIST_REQUEST jbr LEFT JOIN "CD_JC"."JC_BLACKLIST_REQUEST" jbr1 ON jbr1.SREQUESTID = jbr.REQUESTID AND jbr1.DELETEFLAG = 1 AND jbr1.LOGICTYPE = 2 INNER JOIN "CD_JC"."JC_BLACKLIST_FLOWPATH" jbf ON jbr.CURRENTFLOWPATHID = jbf.FLOWPATHID LEFT JOIN CD_SYSTEM.SYS_DEPT bd1 ON jbf.OPERATEDEPTID = bd1.ID LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed ON sed.ENUM_VALUE = jbr.CARCOLOUR AND sed.ENUM_ID = 39 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed1 ON sed1.ENUM_VALUE = jbr.ELUDEMONEYTYPE AND sed1.ENUM_ID = 87 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed2 ON sed2.ENUM_VALUE = jbr.ELUDEMONEYTYPEITEM AND sed2.ENUM_ID = 88 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed3 ON sed3.ENUM_VALUE = jbr.ELUDEMONEYTYPEITEM AND sed3.ENUM_ID = 89 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed4 ON sed4.ENUM_VALUE = jbr.ELUDEMONEYTYPEITEM AND sed4.ENUM_ID = 90 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed5 ON sed5.ENUM_VALUE = jbr.ELUDEMONEYTYPEITEM AND sed5.ENUM_ID = 91 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed6 ON sed6.ENUM_VALUE = jbr.CARTYPE AND sed6.ENUM_ID = 40 LEFT JOIN CD_SYSTEM.SYS_DEPT sed7 ON sed7.ID = jbr.CREATEDEPTID LEFT JOIN ( SELECT x.* FROM CD_PASS.BASIC_BASICINFODOWN_RES x WHERE x.downid = ( SELECT max( w.down_id ) FROM CD_PASS.CLEAR_DOWNLOAD_LOG w WHERE w.read_result = 1 AND w.file_type = 24 ) AND x.TYPE = '1' ) bt2 ON bt2.ID = jbr.ENTRYSTATIONID LEFT JOIN ( SELECT x.* FROM CD_PASS.BASIC_BASICINFODOWN_RES x WHERE x.downid = ( SELECT max( w.down_id ) FROM CD_PASS.CLEAR_DOWNLOAD_LOG w WHERE w.read_result = 1 AND w.file_type = 24 ) AND x.TYPE = '1' ) bt3 ON bt3.ID = jbr.EXITSTATIONID WHERE jbr.DELETEFLAG = 1 AND jbr.LOGICTYPE =1 and jbr.CARNUMBER like '%'||?||'%' ORDER BY jbr.CREATETIME desc 
2020/12/23-10:39:05 [http-nio-317-exec-8] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.JCAuditStatusMapper.getLocalBlackList-[159] ==> Parameters: 豫A12345(String)
2020/12/23-10:39:05 [http-nio-317-exec-8] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.JCAuditStatusMapper.getLocalBlackList-[159] <==      Total: 1
2020/12/23-10:39:05 [http-nio-317-exec-8] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.JCAuditStatusMapper.getLocalGreyList-[159] ==>  Preparing: select t.REQUESTID,CARNUMBER,s2.ENUM_NAME LICENSECOLORID,CARFEATURE,round(ELUDEMONEYNUMBER/100,2) ELUDEMONEYNUMBER,round(FACTMONEYNUMBER/100,2) FACTMONEYNUMBER,s.ENUM_NAME ELUDEMONEYTYPE,s1.ENUM_NAME ELUDEMONEYTYPEITEM,s3.ENUM_NAME CARTYPE,AXLETYPE, bt2.NAME ENTRYSTATIONID, bt3.NAME EXITSTATIONID, to_char(ENTRYSTATIONTIME,'yyyy-mm-dd HH24:mi:ss') ENTRYSTATIONTIME,to_char(EXITSTATIONTIME,'yyyy-mm-dd HH24:mi:ss') EXITSTATIONTIME, nvl(TOTALWEIGHT,'') TOTALWEIGHT, decode(HAVECARD,1,'是',0,'否','') HAVECARD, decode(HAVEDAMAGEDEVICE,1,'有',0,'无','') HAVEDAMAGEDEVICE, decode(HAVEVIDEO,1,'有',0,'无','') HAVEVIDEO, nvl(CPUCARDID,'') CPUCARDID, nvl(REQUESTDESCRIPTION,'') REQUESTDESCRIPTION, to_char(t.CREATETIME,'yyyy-mm-dd HH24:mi:ss') CREATETIME, CREATEUSERNAME, s4.dept_name CREATEDEPTID, nvl(SUMTOTAL,0) SUMTOTAL, bd1.DEPT_NAME SERVICEDEPTNAME from cd_jc.JC_GRAYLIST_REQUEST t INNER JOIN "CD_JC"."JC_GRAYLIST_FLOWPATH" jbf ON t.CURRENTFLOWPATHID = jbf.FLOWPATHID LEFT JOIN CD_SYSTEM.SYS_DEPT bd1 ON jbf.DEPTID = bd1.DEPT_WORK LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS s ON t.ELUDEMONEYTYPE = s.ENUM_VALUE and s.ENUM_ID = 43 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS s1 ON t.ELUDEMONEYTYPEITEM = s1.ENUM_VALUE and s1.ENUM_ID = 44 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS s2 ON t.LICENSECOLORID = s2.ENUM_VALUE and s2.ENUM_ID = 39 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS s3 ON s3.ENUM_VALUE = t.CARTYPE AND s3.ENUM_ID = 40 LEFT JOIN CD_SYSTEM.SYS_DEPT s4 ON to_char(s4.ID) = t.CREATEDEPTID LEFT JOIN (SELECT x.* FROM CD_PASS.BASIC_BASICINFODOWN_RES x WHERE x.downid = ( SELECT max( w.down_id ) FROM CD_PASS.CLEAR_DOWNLOAD_LOG w WHERE w.read_result = 1 AND w.file_type = 24 ) AND x.TYPE = '1') bt2 ON bt2.ID = t.ENTRYSTATIONID LEFT JOIN (SELECT x.* FROM CD_PASS.BASIC_BASICINFODOWN_RES x WHERE x.downid = ( SELECT max( w.down_id ) FROM CD_PASS.CLEAR_DOWNLOAD_LOG w WHERE w.read_result = 1 AND w.file_type = 24 ) AND x.TYPE = '1') bt3 ON bt3.ID = t.EXITSTATIONID where CARNUMBER like '%'||?||'%' order by t.CREATETIME desc 
2020/12/23-10:39:05 [http-nio-317-exec-8] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.JCAuditStatusMapper.getLocalGreyList-[159] ==> Parameters: 豫A12345(String)
2020/12/23-10:39:05 [http-nio-317-exec-8] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.JCAuditStatusMapper.getLocalGreyList-[159] <==      Total: 0
2020/12/23-10:39:15 [http-nio-317-exec-9] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[32] 方法执行前执行。。。。。before
2020/12/23-10:39:15 [http-nio-317-exec-9] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[33] <============================================
2020/12/23-10:39:15 [http-nio-317-exec-9] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[34] 请求来源： =》192.168.3.5
2020/12/23-10:39:15 [http-nio-317-exec-9] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[35] 请求URL：=》/JC/APP/getBlackOrGreyListByVehicle
2020/12/23-10:39:15 [http-nio-317-exec-9] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[36] 请求方式：=》POST
2020/12/23-10:39:15 [http-nio-317-exec-9] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[37] 响应方法：=》com.tuozhi.zhlw.admin.jcApp.controller.JCAuditStatusController.getBlackListByVehicle
2020/12/23-10:39:15 [http-nio-317-exec-9] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[38] 请求参数：=》[豫A12345]
2020/12/23-10:39:15 [http-nio-317-exec-9] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.JCAuditStatusMapper.getLocalBlackList-[159] ==>  Preparing: SELECT jbr.REQUESTID, jbr.CARNUMBER, sed.ENUM_NAME CARCOLOUR, jbr.CARFEATURE, round( jbr.ELUDEMONEYNUMBER / 100, 2 ) ELUDEMONEYNUMBER, round( jbr.FACTMONEYNUMBER / 100, 2 ) FACTMONEYNUMBER, sed1.ENUM_NAME ELUDEMONEYTYPE, CASE WHEN jbr.ELUDEMONEYTYPE = 1001 THEN sed2.ENUM_NAME WHEN jbr.ELUDEMONEYTYPE = 1002 THEN sed3.ENUM_NAME WHEN jbr.ELUDEMONEYTYPE = 1003 THEN sed4.ENUM_NAME WHEN jbr.ELUDEMONEYTYPE = 1004 THEN sed5.ENUM_NAME END ELUDEMONEYTYPEITEMNAME, sed6.ENUM_NAME CARTYPE, jbr.AXLETYPE, bt2.NAME ENTRYSTATIONID, bt3.NAME EXITSTATIONID, to_char( jbr.ENTRYSTATIONTIME, 'yyyy-mm-dd HH24:mi:ss' ) ENTRYSTATIONTIME, to_char( jbr.EXITSTATIONTIME, 'yyyy-mm-dd HH24:mi:ss' ) EXITSTATIONTIME, nvl( jbr.TOTALWEIGHT, '' ) TOTALWEIGHT, decode( jbr.HAVECARD, 1, '是', 0, '否', '' ) HAVECARD, decode( jbr.HAVEDAMAGEDEVICE, 1, '有', 0, '无', '' ) HAVEDAMAGEDEVICE, decode( jbr.HAVEVIDEO, 1, '有', 0, '无', '' ) HAVEVIDEO, nvl( jbr.CPUCARDID, '' ) CPUCARDID, nvl( jbr.REQUESTDESCRIPTION, '' ) REQUESTDESCRIPTION, to_char( jbr.CREATETIME, 'yyyy-mm-dd HH24:mi:ss' ) CREATETIME, jbr.CREATEUSERNAME, sed7.dept_name CREATEDEPTID, nvl( jbr.SUMTOTAL, 0 ) SUMTOTAL, bd1.DEPT_NAME SERVICEDEPTNAME, jbr1.SREQUESTID 撤销状态, --有值已撤销，没有值未撤销 jbr.IS_APP, jbr.REQUESTSTATUS FROM cd_jc.JC_BLACKLIST_REQUEST jbr LEFT JOIN "CD_JC"."JC_BLACKLIST_REQUEST" jbr1 ON jbr1.SREQUESTID = jbr.REQUESTID AND jbr1.DELETEFLAG = 1 AND jbr1.LOGICTYPE = 2 INNER JOIN "CD_JC"."JC_BLACKLIST_FLOWPATH" jbf ON jbr.CURRENTFLOWPATHID = jbf.FLOWPATHID LEFT JOIN CD_SYSTEM.SYS_DEPT bd1 ON jbf.OPERATEDEPTID = bd1.ID LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed ON sed.ENUM_VALUE = jbr.CARCOLOUR AND sed.ENUM_ID = 39 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed1 ON sed1.ENUM_VALUE = jbr.ELUDEMONEYTYPE AND sed1.ENUM_ID = 87 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed2 ON sed2.ENUM_VALUE = jbr.ELUDEMONEYTYPEITEM AND sed2.ENUM_ID = 88 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed3 ON sed3.ENUM_VALUE = jbr.ELUDEMONEYTYPEITEM AND sed3.ENUM_ID = 89 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed4 ON sed4.ENUM_VALUE = jbr.ELUDEMONEYTYPEITEM AND sed4.ENUM_ID = 90 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed5 ON sed5.ENUM_VALUE = jbr.ELUDEMONEYTYPEITEM AND sed5.ENUM_ID = 91 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed6 ON sed6.ENUM_VALUE = jbr.CARTYPE AND sed6.ENUM_ID = 40 LEFT JOIN CD_SYSTEM.SYS_DEPT sed7 ON sed7.ID = jbr.CREATEDEPTID LEFT JOIN ( SELECT x.* FROM CD_PASS.BASIC_BASICINFODOWN_RES x WHERE x.downid = ( SELECT max( w.down_id ) FROM CD_PASS.CLEAR_DOWNLOAD_LOG w WHERE w.read_result = 1 AND w.file_type = 24 ) AND x.TYPE = '1' ) bt2 ON bt2.ID = jbr.ENTRYSTATIONID LEFT JOIN ( SELECT x.* FROM CD_PASS.BASIC_BASICINFODOWN_RES x WHERE x.downid = ( SELECT max( w.down_id ) FROM CD_PASS.CLEAR_DOWNLOAD_LOG w WHERE w.read_result = 1 AND w.file_type = 24 ) AND x.TYPE = '1' ) bt3 ON bt3.ID = jbr.EXITSTATIONID WHERE jbr.DELETEFLAG = 1 AND jbr.LOGICTYPE =1 and jbr.CARNUMBER like '%'||?||'%' ORDER BY jbr.CREATETIME desc 
2020/12/23-10:39:15 [http-nio-317-exec-9] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.JCAuditStatusMapper.getLocalBlackList-[159] ==> Parameters: 豫A12345(String)
2020/12/23-10:39:15 [http-nio-317-exec-9] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.JCAuditStatusMapper.getLocalBlackList-[159] <==      Total: 1
2020/12/23-10:39:15 [http-nio-317-exec-9] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.JCAuditStatusMapper.getLocalGreyList-[159] ==>  Preparing: select t.REQUESTID,CARNUMBER,s2.ENUM_NAME LICENSECOLORID,CARFEATURE,round(ELUDEMONEYNUMBER/100,2) ELUDEMONEYNUMBER,round(FACTMONEYNUMBER/100,2) FACTMONEYNUMBER,s.ENUM_NAME ELUDEMONEYTYPE,s1.ENUM_NAME ELUDEMONEYTYPEITEM,s3.ENUM_NAME CARTYPE,AXLETYPE, bt2.NAME ENTRYSTATIONID, bt3.NAME EXITSTATIONID, to_char(ENTRYSTATIONTIME,'yyyy-mm-dd HH24:mi:ss') ENTRYSTATIONTIME,to_char(EXITSTATIONTIME,'yyyy-mm-dd HH24:mi:ss') EXITSTATIONTIME, nvl(TOTALWEIGHT,'') TOTALWEIGHT, decode(HAVECARD,1,'是',0,'否','') HAVECARD, decode(HAVEDAMAGEDEVICE,1,'有',0,'无','') HAVEDAMAGEDEVICE, decode(HAVEVIDEO,1,'有',0,'无','') HAVEVIDEO, nvl(CPUCARDID,'') CPUCARDID, nvl(REQUESTDESCRIPTION,'') REQUESTDESCRIPTION, to_char(t.CREATETIME,'yyyy-mm-dd HH24:mi:ss') CREATETIME, CREATEUSERNAME, s4.dept_name CREATEDEPTID, nvl(SUMTOTAL,0) SUMTOTAL, bd1.DEPT_NAME SERVICEDEPTNAME from cd_jc.JC_GRAYLIST_REQUEST t INNER JOIN "CD_JC"."JC_GRAYLIST_FLOWPATH" jbf ON t.CURRENTFLOWPATHID = jbf.FLOWPATHID LEFT JOIN CD_SYSTEM.SYS_DEPT bd1 ON jbf.DEPTID = bd1.DEPT_WORK LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS s ON t.ELUDEMONEYTYPE = s.ENUM_VALUE and s.ENUM_ID = 43 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS s1 ON t.ELUDEMONEYTYPEITEM = s1.ENUM_VALUE and s1.ENUM_ID = 44 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS s2 ON t.LICENSECOLORID = s2.ENUM_VALUE and s2.ENUM_ID = 39 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS s3 ON s3.ENUM_VALUE = t.CARTYPE AND s3.ENUM_ID = 40 LEFT JOIN CD_SYSTEM.SYS_DEPT s4 ON to_char(s4.ID) = t.CREATEDEPTID LEFT JOIN (SELECT x.* FROM CD_PASS.BASIC_BASICINFODOWN_RES x WHERE x.downid = ( SELECT max( w.down_id ) FROM CD_PASS.CLEAR_DOWNLOAD_LOG w WHERE w.read_result = 1 AND w.file_type = 24 ) AND x.TYPE = '1') bt2 ON bt2.ID = t.ENTRYSTATIONID LEFT JOIN (SELECT x.* FROM CD_PASS.BASIC_BASICINFODOWN_RES x WHERE x.downid = ( SELECT max( w.down_id ) FROM CD_PASS.CLEAR_DOWNLOAD_LOG w WHERE w.read_result = 1 AND w.file_type = 24 ) AND x.TYPE = '1') bt3 ON bt3.ID = t.EXITSTATIONID where CARNUMBER like '%'||?||'%' order by t.CREATETIME desc 
2020/12/23-10:39:15 [http-nio-317-exec-9] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.JCAuditStatusMapper.getLocalGreyList-[159] ==> Parameters: 豫A12345(String)
2020/12/23-10:39:15 [http-nio-317-exec-9] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.JCAuditStatusMapper.getLocalGreyList-[159] <==      Total: 0
2020/12/23-10:40:10 [http-nio-317-exec-2] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[32] 方法执行前执行。。。。。before
2020/12/23-10:40:10 [http-nio-317-exec-2] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[33] <============================================
2020/12/23-10:40:10 [http-nio-317-exec-2] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[34] 请求来源： =》192.168.3.5
2020/12/23-10:40:10 [http-nio-317-exec-2] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[35] 请求URL：=》/JC/APP/getJCAppBlackAddOrBlackRevoked
2020/12/23-10:40:10 [http-nio-317-exec-2] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[36] 请求方式：=》POST
2020/12/23-10:40:10 [http-nio-317-exec-2] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[37] 响应方法：=》com.tuozhi.zhlw.admin.jcApp.controller.OwerController.getJCAppBlackAddOrBlackRevoked
2020/12/23-10:40:10 [http-nio-317-exec-2] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[38] 请求参数：=》[1111111, 2]
2020/12/23-10:40:10 [http-nio-317-exec-2] DEBUG com.tuozhi.zhlw.admin.mapper.LoginMapper.findBaseUserByLoginName-[159] ==>  Preparing: select t.ID as deptId,t.PARENT_ID as deptParentId,t.DEPT_NAME as deptName,t.DEPT_WORK as deptWork,u.LOGIN_NAME as loginName,u.USER_NAME as userName,u.PASSWORD as password,u.ID as userId,u.LAST_PASSWORD_MODIFY_TIME lastPasswordModifyTime,u.PASSWORD_HISTORY passwordHistory, t.PRIVILEGE_ID as privilegeId ,u.VALID_STATUS as validStatus,(select wm_concat(ROLE_ID) from SYS_USER_ROLES where USER_ID= u.ID) roleIds,t.DEPT_LONG_ID deptLongId, t.WORKFLOWDEPTROLE workFlowDeptRole from SYS_USERS u left join SYS_DEPT t on t.ID = u.DEPT_ID where u.LOGIN_NAME = ? 
2020/12/23-10:40:10 [http-nio-317-exec-2] DEBUG com.tuozhi.zhlw.admin.mapper.LoginMapper.findBaseUserByLoginName-[159] ==> Parameters: 1111111(String)
2020/12/23-10:40:10 [http-nio-317-exec-2] DEBUG com.tuozhi.zhlw.admin.mapper.LoginMapper.findBaseUserByLoginName-[159] <==      Total: 1
2020/12/23-10:40:10 [http-nio-317-exec-2] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.OwerMapper.getJCAppBlackAddOrBlackRevoked-[159] ==>  Preparing: SELECT jbr.REQUESTID, jbr.CARNUMBER, decode(jbr.LOGICTYPE,1,'追缴黑名单申请',2,'撤销追缴名单申请') LOGICTYPE, sed.ENUM_NAME CARCOLOUR, to_char( jbr.CREATETIME, 'yyyy-mm-dd HH24:mi:ss' ) CREATETIME, decode(jbr.IS_APP,1,'APP添加','非APP添加') IS_APP FROM cd_jc.JC_BLACKLIST_REQUEST jbr LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed ON sed.ENUM_VALUE = jbr.CARCOLOUR AND sed.ENUM_ID = 39 WHERE jbr.DELETEFLAG = 1 AND jbr.LOGICTYPE = 2 AND LOGINUSERID=? ORDER BY jbr.CREATETIME desc 
2020/12/23-10:40:10 [http-nio-317-exec-2] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.OwerMapper.getJCAppBlackAddOrBlackRevoked-[159] ==> Parameters: 21129(Long)
2020/12/23-10:40:10 [http-nio-317-exec-2] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.OwerMapper.getJCAppBlackAddOrBlackRevoked-[159] <==      Total: 1
2020/12/23-10:41:22 [http-nio-317-exec-4] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[32] 方法执行前执行。。。。。before
2020/12/23-10:41:22 [http-nio-317-exec-4] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[33] <============================================
2020/12/23-10:41:22 [http-nio-317-exec-4] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[34] 请求来源： =》192.168.3.5
2020/12/23-10:41:22 [http-nio-317-exec-4] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[35] 请求URL：=》/JC/APP/getJCAppBlackAddOrBlackRevoked
2020/12/23-10:41:22 [http-nio-317-exec-4] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[36] 请求方式：=》POST
2020/12/23-10:41:22 [http-nio-317-exec-4] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[37] 响应方法：=》com.tuozhi.zhlw.admin.jcApp.controller.OwerController.getJCAppBlackAddOrBlackRevoked
2020/12/23-10:41:22 [http-nio-317-exec-4] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[38] 请求参数：=》[1111111, 2]
2020/12/23-10:41:22 [http-nio-317-exec-4] DEBUG com.tuozhi.zhlw.admin.mapper.LoginMapper.findBaseUserByLoginName-[159] ==>  Preparing: select t.ID as deptId,t.PARENT_ID as deptParentId,t.DEPT_NAME as deptName,t.DEPT_WORK as deptWork,u.LOGIN_NAME as loginName,u.USER_NAME as userName,u.PASSWORD as password,u.ID as userId,u.LAST_PASSWORD_MODIFY_TIME lastPasswordModifyTime,u.PASSWORD_HISTORY passwordHistory, t.PRIVILEGE_ID as privilegeId ,u.VALID_STATUS as validStatus,(select wm_concat(ROLE_ID) from SYS_USER_ROLES where USER_ID= u.ID) roleIds,t.DEPT_LONG_ID deptLongId, t.WORKFLOWDEPTROLE workFlowDeptRole from SYS_USERS u left join SYS_DEPT t on t.ID = u.DEPT_ID where u.LOGIN_NAME = ? 
2020/12/23-10:41:22 [http-nio-317-exec-4] DEBUG com.tuozhi.zhlw.admin.mapper.LoginMapper.findBaseUserByLoginName-[159] ==> Parameters: 1111111(String)
2020/12/23-10:41:22 [http-nio-317-exec-4] DEBUG com.tuozhi.zhlw.admin.mapper.LoginMapper.findBaseUserByLoginName-[159] <==      Total: 1
2020/12/23-10:41:22 [http-nio-317-exec-4] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.OwerMapper.getJCAppBlackAddOrBlackRevoked-[159] ==>  Preparing: SELECT jbr.REQUESTID, jbr.CARNUMBER, decode(jbr.LOGICTYPE,1,'追缴黑名单申请',2,'撤销追缴名单申请') LOGICTYPE, sed.ENUM_NAME CARCOLOUR, to_char( jbr.CREATETIME, 'yyyy-mm-dd HH24:mi:ss' ) CREATETIME, decode(jbr.IS_APP,1,'APP添加','非APP添加') IS_APP FROM cd_jc.JC_BLACKLIST_REQUEST jbr LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed ON sed.ENUM_VALUE = jbr.CARCOLOUR AND sed.ENUM_ID = 39 WHERE jbr.DELETEFLAG = 1 AND jbr.LOGICTYPE = 2 AND LOGINUSERID=? ORDER BY jbr.CREATETIME desc 
2020/12/23-10:41:22 [http-nio-317-exec-4] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.OwerMapper.getJCAppBlackAddOrBlackRevoked-[159] ==> Parameters: 21129(Long)
2020/12/23-10:41:22 [http-nio-317-exec-4] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.OwerMapper.getJCAppBlackAddOrBlackRevoked-[159] <==      Total: 1
2020/12/23-10:41:25 [http-nio-317-exec-5] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[32] 方法执行前执行。。。。。before
2020/12/23-10:41:25 [http-nio-317-exec-5] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[33] <============================================
2020/12/23-10:41:25 [http-nio-317-exec-5] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[34] 请求来源： =》192.168.3.5
2020/12/23-10:41:25 [http-nio-317-exec-5] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[35] 请求URL：=》/JC/APP/getBlackListAddOrblackOrdersRevokedAttachment
2020/12/23-10:41:25 [http-nio-317-exec-5] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[36] 请求方式：=》POST
2020/12/23-10:41:25 [http-nio-317-exec-5] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[37] 响应方法：=》com.tuozhi.zhlw.admin.jcApp.controller.OwerController.getBlackListAddOrblackOrdersRevokedAttachment
2020/12/23-10:41:25 [http-nio-317-exec-5] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[38] 请求参数：=》[202012235368, 1]
2020/12/23-10:41:25 [http-nio-317-exec-5] DEBUG com.tuozhi.zhlw.admin.jc.mapper.BlackListAttachmentMapper.getAppDataByRequestId-[159] ==>  Preparing: SELECT jba.ATTACHMENTID, jba.ATTACHMENTNAME, jba.ATTACHMENTSIZE, jba.ATTACHMENTPATH, jba.REQUESTID, jba.FILETYPE, jba.USERID, jba.USERNAME, jba.DEPTID, jba.DEPTNAME, jba.FLOWPATHID FROM "CD_JC"."JC_APP_BLACKLIST_ATTACHMENT" jba WHERE jba.REQUESTID = ? 
2020/12/23-10:41:25 [http-nio-317-exec-5] DEBUG com.tuozhi.zhlw.admin.jc.mapper.BlackListAttachmentMapper.getAppDataByRequestId-[159] ==> Parameters: 202012235368(Long)
2020/12/23-10:41:25 [http-nio-317-exec-5] DEBUG com.tuozhi.zhlw.admin.jc.mapper.BlackListAttachmentMapper.getAppDataByRequestId-[159] <==      Total: 1
2020/12/23-10:41:25 [http-nio-317-exec-5] DEBUG com.tuozhi.zhlw.admin.jc.mapper.BlackListAttachmentMapper.getBZAppDataByRequestId-[159] ==>  Preparing: SELECT jba.ATTACHMENTID, jba.ATTACHMENTNAME, jba.ATTACHMENTSIZE, jba.ATTACHMENTPATH, jba.REQUESTID, jba.FILETYPE, jba.USERID, jba.USERNAME, jba.DEPTID, jba.DEPTNAME, jba.FLOWPATHID FROM "CD_JC"."JC_APP_ATTACHMENT" jba WHERE jba.TYPE=2 and jba.REQUESTID = ? 
2020/12/23-10:41:25 [http-nio-317-exec-5] DEBUG com.tuozhi.zhlw.admin.jc.mapper.BlackListAttachmentMapper.getBZAppDataByRequestId-[159] ==> Parameters: 202012235368(Long)
2020/12/23-10:41:25 [http-nio-317-exec-5] DEBUG com.tuozhi.zhlw.admin.jc.mapper.BlackListAttachmentMapper.getBZAppDataByRequestId-[159] <==      Total: 0
2020/12/23-10:48:31 [http-nio-317-exec-7] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[32] 方法执行前执行。。。。。before
2020/12/23-10:48:31 [http-nio-317-exec-7] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[33] <============================================
2020/12/23-10:48:31 [http-nio-317-exec-7] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[34] 请求来源： =》192.168.3.5
2020/12/23-10:48:31 [http-nio-317-exec-7] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[35] 请求URL：=》/JC/APP/getNewVersionFilePath
2020/12/23-10:48:31 [http-nio-317-exec-7] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[36] 请求方式：=》POST
2020/12/23-10:48:31 [http-nio-317-exec-7] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[37] 响应方法：=》com.tuozhi.zhlw.admin.jcApp.controller.JCAppETCCardController.getNewVersionFilePath
2020/12/23-10:48:31 [http-nio-317-exec-7] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[38] 请求参数：=》[]
2020/12/23-10:48:31 [http-nio-317-exec-7] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.JCAppETCCardMapper.getNewVersionFilePath-[159] ==>  Preparing: SELECT VERSION,URLPATH FROM CD_JC.JC_APP_VERSION where rownum=1 ORDER BY VERSION desc 
2020/12/23-10:48:31 [http-nio-317-exec-7] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.JCAppETCCardMapper.getNewVersionFilePath-[159] ==> Parameters: 
2020/12/23-10:48:31 [http-nio-317-exec-7] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.JCAppETCCardMapper.getNewVersionFilePath-[159] <==      Total: 1
2020/12/23-10:48:49 [http-nio-317-exec-8] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[32] 方法执行前执行。。。。。before
2020/12/23-10:48:49 [http-nio-317-exec-8] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[33] <============================================
2020/12/23-10:48:49 [http-nio-317-exec-8] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[34] 请求来源： =》192.168.3.5
2020/12/23-10:48:49 [http-nio-317-exec-8] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[35] 请求URL：=》/JC/APP/getBlackOrGreyListByVehicle
2020/12/23-10:48:49 [http-nio-317-exec-8] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[36] 请求方式：=》POST
2020/12/23-10:48:49 [http-nio-317-exec-8] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[37] 响应方法：=》com.tuozhi.zhlw.admin.jcApp.controller.JCAuditStatusController.getBlackListByVehicle
2020/12/23-10:48:49 [http-nio-317-exec-8] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[38] 请求参数：=》[豫A12345]
2020/12/23-10:48:49 [http-nio-317-exec-8] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.JCAuditStatusMapper.getLocalBlackList-[159] ==>  Preparing: SELECT jbr.REQUESTID, jbr.CARNUMBER, sed.ENUM_NAME CARCOLOUR, jbr.CARFEATURE, round( jbr.ELUDEMONEYNUMBER / 100, 2 ) ELUDEMONEYNUMBER, round( jbr.FACTMONEYNUMBER / 100, 2 ) FACTMONEYNUMBER, sed1.ENUM_NAME ELUDEMONEYTYPE, CASE WHEN jbr.ELUDEMONEYTYPE = 1001 THEN sed2.ENUM_NAME WHEN jbr.ELUDEMONEYTYPE = 1002 THEN sed3.ENUM_NAME WHEN jbr.ELUDEMONEYTYPE = 1003 THEN sed4.ENUM_NAME WHEN jbr.ELUDEMONEYTYPE = 1004 THEN sed5.ENUM_NAME END ELUDEMONEYTYPEITEMNAME, sed6.ENUM_NAME CARTYPE, jbr.AXLETYPE, bt2.NAME ENTRYSTATIONID, bt3.NAME EXITSTATIONID, to_char( jbr.ENTRYSTATIONTIME, 'yyyy-mm-dd HH24:mi:ss' ) ENTRYSTATIONTIME, to_char( jbr.EXITSTATIONTIME, 'yyyy-mm-dd HH24:mi:ss' ) EXITSTATIONTIME, nvl( jbr.TOTALWEIGHT, '' ) TOTALWEIGHT, decode( jbr.HAVECARD, 1, '是', 0, '否', '' ) HAVECARD, decode( jbr.HAVEDAMAGEDEVICE, 1, '有', 0, '无', '' ) HAVEDAMAGEDEVICE, decode( jbr.HAVEVIDEO, 1, '有', 0, '无', '' ) HAVEVIDEO, nvl( jbr.CPUCARDID, '' ) CPUCARDID, nvl( jbr.REQUESTDESCRIPTION, '' ) REQUESTDESCRIPTION, to_char( jbr.CREATETIME, 'yyyy-mm-dd HH24:mi:ss' ) CREATETIME, jbr.CREATEUSERNAME, sed7.dept_name CREATEDEPTID, nvl( jbr.SUMTOTAL, 0 ) SUMTOTAL, bd1.DEPT_NAME SERVICEDEPTNAME, jbr1.SREQUESTID 撤销状态, --有值已撤销，没有值未撤销 jbr.IS_APP, jbr.REQUESTSTATUS FROM cd_jc.JC_BLACKLIST_REQUEST jbr LEFT JOIN "CD_JC"."JC_BLACKLIST_REQUEST" jbr1 ON jbr1.SREQUESTID = jbr.REQUESTID AND jbr1.DELETEFLAG = 1 AND jbr1.LOGICTYPE = 2 INNER JOIN "CD_JC"."JC_BLACKLIST_FLOWPATH" jbf ON jbr.CURRENTFLOWPATHID = jbf.FLOWPATHID LEFT JOIN CD_SYSTEM.SYS_DEPT bd1 ON jbf.OPERATEDEPTID = bd1.ID LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed ON sed.ENUM_VALUE = jbr.CARCOLOUR AND sed.ENUM_ID = 39 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed1 ON sed1.ENUM_VALUE = jbr.ELUDEMONEYTYPE AND sed1.ENUM_ID = 87 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed2 ON sed2.ENUM_VALUE = jbr.ELUDEMONEYTYPEITEM AND sed2.ENUM_ID = 88 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed3 ON sed3.ENUM_VALUE = jbr.ELUDEMONEYTYPEITEM AND sed3.ENUM_ID = 89 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed4 ON sed4.ENUM_VALUE = jbr.ELUDEMONEYTYPEITEM AND sed4.ENUM_ID = 90 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed5 ON sed5.ENUM_VALUE = jbr.ELUDEMONEYTYPEITEM AND sed5.ENUM_ID = 91 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed6 ON sed6.ENUM_VALUE = jbr.CARTYPE AND sed6.ENUM_ID = 40 LEFT JOIN CD_SYSTEM.SYS_DEPT sed7 ON sed7.ID = jbr.CREATEDEPTID LEFT JOIN ( SELECT x.* FROM CD_PASS.BASIC_BASICINFODOWN_RES x WHERE x.downid = ( SELECT max( w.down_id ) FROM CD_PASS.CLEAR_DOWNLOAD_LOG w WHERE w.read_result = 1 AND w.file_type = 24 ) AND x.TYPE = '1' ) bt2 ON bt2.ID = jbr.ENTRYSTATIONID LEFT JOIN ( SELECT x.* FROM CD_PASS.BASIC_BASICINFODOWN_RES x WHERE x.downid = ( SELECT max( w.down_id ) FROM CD_PASS.CLEAR_DOWNLOAD_LOG w WHERE w.read_result = 1 AND w.file_type = 24 ) AND x.TYPE = '1' ) bt3 ON bt3.ID = jbr.EXITSTATIONID WHERE jbr.DELETEFLAG = 1 AND jbr.LOGICTYPE =1 and jbr.CARNUMBER like '%'||?||'%' ORDER BY jbr.CREATETIME desc 
2020/12/23-10:48:49 [http-nio-317-exec-8] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.JCAuditStatusMapper.getLocalBlackList-[159] ==> Parameters: 豫A12345(String)
2020/12/23-10:48:49 [http-nio-317-exec-8] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.JCAuditStatusMapper.getLocalBlackList-[159] <==      Total: 1
2020/12/23-10:48:49 [http-nio-317-exec-8] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.JCAuditStatusMapper.getLocalGreyList-[159] ==>  Preparing: select t.REQUESTID,CARNUMBER,s2.ENUM_NAME LICENSECOLORID,CARFEATURE,round(ELUDEMONEYNUMBER/100,2) ELUDEMONEYNUMBER,round(FACTMONEYNUMBER/100,2) FACTMONEYNUMBER,s.ENUM_NAME ELUDEMONEYTYPE,s1.ENUM_NAME ELUDEMONEYTYPEITEM,s3.ENUM_NAME CARTYPE,AXLETYPE, bt2.NAME ENTRYSTATIONID, bt3.NAME EXITSTATIONID, to_char(ENTRYSTATIONTIME,'yyyy-mm-dd HH24:mi:ss') ENTRYSTATIONTIME,to_char(EXITSTATIONTIME,'yyyy-mm-dd HH24:mi:ss') EXITSTATIONTIME, nvl(TOTALWEIGHT,'') TOTALWEIGHT, decode(HAVECARD,1,'是',0,'否','') HAVECARD, decode(HAVEDAMAGEDEVICE,1,'有',0,'无','') HAVEDAMAGEDEVICE, decode(HAVEVIDEO,1,'有',0,'无','') HAVEVIDEO, nvl(CPUCARDID,'') CPUCARDID, nvl(REQUESTDESCRIPTION,'') REQUESTDESCRIPTION, to_char(t.CREATETIME,'yyyy-mm-dd HH24:mi:ss') CREATETIME, CREATEUSERNAME, s4.dept_name CREATEDEPTID, nvl(SUMTOTAL,0) SUMTOTAL, bd1.DEPT_NAME SERVICEDEPTNAME from cd_jc.JC_GRAYLIST_REQUEST t INNER JOIN "CD_JC"."JC_GRAYLIST_FLOWPATH" jbf ON t.CURRENTFLOWPATHID = jbf.FLOWPATHID LEFT JOIN CD_SYSTEM.SYS_DEPT bd1 ON jbf.DEPTID = bd1.DEPT_WORK LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS s ON t.ELUDEMONEYTYPE = s.ENUM_VALUE and s.ENUM_ID = 43 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS s1 ON t.ELUDEMONEYTYPEITEM = s1.ENUM_VALUE and s1.ENUM_ID = 44 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS s2 ON t.LICENSECOLORID = s2.ENUM_VALUE and s2.ENUM_ID = 39 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS s3 ON s3.ENUM_VALUE = t.CARTYPE AND s3.ENUM_ID = 40 LEFT JOIN CD_SYSTEM.SYS_DEPT s4 ON to_char(s4.ID) = t.CREATEDEPTID LEFT JOIN (SELECT x.* FROM CD_PASS.BASIC_BASICINFODOWN_RES x WHERE x.downid = ( SELECT max( w.down_id ) FROM CD_PASS.CLEAR_DOWNLOAD_LOG w WHERE w.read_result = 1 AND w.file_type = 24 ) AND x.TYPE = '1') bt2 ON bt2.ID = t.ENTRYSTATIONID LEFT JOIN (SELECT x.* FROM CD_PASS.BASIC_BASICINFODOWN_RES x WHERE x.downid = ( SELECT max( w.down_id ) FROM CD_PASS.CLEAR_DOWNLOAD_LOG w WHERE w.read_result = 1 AND w.file_type = 24 ) AND x.TYPE = '1') bt3 ON bt3.ID = t.EXITSTATIONID where CARNUMBER like '%'||?||'%' order by t.CREATETIME desc 
2020/12/23-10:48:49 [http-nio-317-exec-8] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.JCAuditStatusMapper.getLocalGreyList-[159] ==> Parameters: 豫A12345(String)
2020/12/23-10:48:49 [http-nio-317-exec-8] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.JCAuditStatusMapper.getLocalGreyList-[159] <==      Total: 0
2020/12/23-10:49:51 [http-nio-317-exec-10] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[32] 方法执行前执行。。。。。before
2020/12/23-10:49:51 [http-nio-317-exec-10] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[33] <============================================
2020/12/23-10:49:51 [http-nio-317-exec-10] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[34] 请求来源： =》192.168.3.5
2020/12/23-10:49:51 [http-nio-317-exec-10] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[35] 请求URL：=》/JC/APP/getBlackListAddOrblackOrdersRevokedAttachment
2020/12/23-10:49:51 [http-nio-317-exec-10] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[36] 请求方式：=》POST
2020/12/23-10:49:51 [http-nio-317-exec-10] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[37] 响应方法：=》com.tuozhi.zhlw.admin.jcApp.controller.OwerController.getBlackListAddOrblackOrdersRevokedAttachment
2020/12/23-10:49:51 [http-nio-317-exec-10] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[38] 请求参数：=》[202012235367, 1]
2020/12/23-10:49:51 [http-nio-317-exec-10] DEBUG com.tuozhi.zhlw.admin.jc.mapper.BlackListAttachmentMapper.getAppDataByRequestId-[159] ==>  Preparing: SELECT jba.ATTACHMENTID, jba.ATTACHMENTNAME, jba.ATTACHMENTSIZE, jba.ATTACHMENTPATH, jba.REQUESTID, jba.FILETYPE, jba.USERID, jba.USERNAME, jba.DEPTID, jba.DEPTNAME, jba.FLOWPATHID FROM "CD_JC"."JC_APP_BLACKLIST_ATTACHMENT" jba WHERE jba.REQUESTID = ? 
2020/12/23-10:49:51 [http-nio-317-exec-10] DEBUG com.tuozhi.zhlw.admin.jc.mapper.BlackListAttachmentMapper.getAppDataByRequestId-[159] ==> Parameters: 202012235367(Long)
2020/12/23-10:49:52 [http-nio-317-exec-10] DEBUG com.tuozhi.zhlw.admin.jc.mapper.BlackListAttachmentMapper.getAppDataByRequestId-[159] <==      Total: 1
2020/12/23-10:49:52 [http-nio-317-exec-10] DEBUG com.tuozhi.zhlw.admin.jc.mapper.BlackListAttachmentMapper.getBZAppDataByRequestId-[159] ==>  Preparing: SELECT jba.ATTACHMENTID, jba.ATTACHMENTNAME, jba.ATTACHMENTSIZE, jba.ATTACHMENTPATH, jba.REQUESTID, jba.FILETYPE, jba.USERID, jba.USERNAME, jba.DEPTID, jba.DEPTNAME, jba.FLOWPATHID FROM "CD_JC"."JC_APP_ATTACHMENT" jba WHERE jba.TYPE=2 and jba.REQUESTID = ? 
2020/12/23-10:49:52 [http-nio-317-exec-10] DEBUG com.tuozhi.zhlw.admin.jc.mapper.BlackListAttachmentMapper.getBZAppDataByRequestId-[159] ==> Parameters: 202012235367(Long)
2020/12/23-10:49:52 [http-nio-317-exec-10] DEBUG com.tuozhi.zhlw.admin.jc.mapper.BlackListAttachmentMapper.getBZAppDataByRequestId-[159] <==      Total: 0
2020/12/23-10:58:31 [http-nio-317-exec-2] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[32] 方法执行前执行。。。。。before
2020/12/23-10:58:31 [http-nio-317-exec-2] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[33] <============================================
2020/12/23-10:58:31 [http-nio-317-exec-2] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[34] 请求来源： =》192.168.3.5
2020/12/23-10:58:31 [http-nio-317-exec-2] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[35] 请求URL：=》/JC/APP/getNewVersionFilePath
2020/12/23-10:58:31 [http-nio-317-exec-2] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[36] 请求方式：=》POST
2020/12/23-10:58:31 [http-nio-317-exec-2] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[37] 响应方法：=》com.tuozhi.zhlw.admin.jcApp.controller.JCAppETCCardController.getNewVersionFilePath
2020/12/23-10:58:31 [http-nio-317-exec-2] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[38] 请求参数：=》[]
2020/12/23-10:58:31 [http-nio-317-exec-2] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.JCAppETCCardMapper.getNewVersionFilePath-[159] ==>  Preparing: SELECT VERSION,URLPATH FROM CD_JC.JC_APP_VERSION where rownum=1 ORDER BY VERSION desc 
2020/12/23-10:58:31 [http-nio-317-exec-2] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.JCAppETCCardMapper.getNewVersionFilePath-[159] ==> Parameters: 
2020/12/23-10:58:31 [http-nio-317-exec-2] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.JCAppETCCardMapper.getNewVersionFilePath-[159] <==      Total: 1
2020/12/23-11:00:07 [http-nio-317-exec-4] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[32] 方法执行前执行。。。。。before
2020/12/23-11:00:07 [http-nio-317-exec-4] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[33] <============================================
2020/12/23-11:00:07 [http-nio-317-exec-4] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[34] 请求来源： =》192.168.3.5
2020/12/23-11:00:07 [http-nio-317-exec-4] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[35] 请求URL：=》/JC/APP/findEtcBlackList
2020/12/23-11:00:07 [http-nio-317-exec-4] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[36] 请求方式：=》POST
2020/12/23-11:00:07 [http-nio-317-exec-4] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[37] 响应方法：=》com.tuozhi.zhlw.admin.jcApp.controller.OwerController.findEtcBlackList
2020/12/23-11:00:07 [http-nio-317-exec-4] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[38] 请求参数：=》[豫A12345]
2020/12/23-11:00:07 [http-nio-317-exec-4] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.OwerMapper.findEtcBlackList-[159] ==>  Preparing: SELECT jeb.RCARDTYPE, jeb.ICCISSUER, esc.codename iccIssuerName, jeb.CPUCARDID, jeb.VEHICLELICENSE, decode(jeb.BLACKLISTTYPE,1,'白名单',5,'黑名单','')BLACKLISTTYPE, to_char(jeb.CREATETIME,'yyyy-MM-dd HH24:mi:ss') CREATETIME, jeb.AVT_ID, decode(jeb.FLAG,1,'已下发',0,'未下发')FLAG, jeb.TIME, decode(jeb.DELETEFLAG,1,'已下发',0,'未下发','此卡已消失/已入黑') DELETEFLAG, to_char(jeb.DELETETIME,'yyyy-MM-dd HH24:mi:ss') DELETETIME, jeb.DEVVEHICLELICENSE, sed1.ENUM_NAME ELUDEMONEYTYPE, CASE WHEN jeb.ELUDEMONEYTYPE = 1001 THEN sed2.ENUM_NAME WHEN jeb.ELUDEMONEYTYPE = 1002 THEN sed3.ENUM_NAME WHEN jeb.ELUDEMONEYTYPE = 1003 THEN sed4.ENUM_NAME WHEN jeb.ELUDEMONEYTYPE = 1004 THEN sed5.ENUM_NAME END ELUDEMONEYTYPEITEM, s2.enum_name VEHICLECOLOR, sed6.enum_name CARTYPE, jeb.BLACKTYPE, to_char(jeb.RECOVERTIME,'yyyy-MM-dd HH24:mi:ss') RECOVERTIME, jeb.SUMMONENY, jeb.SUMTOTAL, jeb.OBUID, jeb.ENTRYSTATIONID, bt1.NAME ENTRYSTATIONNAME, jeb.EXITSTATIONID, bt2.NAME EXITSTATIONNAME, to_char(jeb.ENTRYSTATIONTIME,'yyyy-MM-dd HH24:mi:ss') ENTRYSTATIONTIME, to_char(jeb.EXITSTATIONTIME,'yyyy-MM-dd HH24:mi:ss') EXITSTATIONTIME, jeb.PHYSICALTRUTHSTATUS, jeb.REQUESTDESCRIPTION, jeb.CREATENAME, jeb.CREATEDEPT, jeb.CREATEDEPTNAME, jeb.REQUESTID FROM HW_JZ.JC_ETC_CARD_BLACKLIST@DB_LINK3628 jeb LEFT JOIN (SELECT x.* FROM HW_JZ.BASIC_BASICINFODOWN_RES@DB_LINK3628 x WHERE x.downid = '27412820' AND x.TYPE = '1') bt1 ON bt1.ID = jeb.ENTRYSTATIONID LEFT JOIN (SELECT x.* FROM HW_JZ.BASIC_BASICINFODOWN_RES@DB_LINK3628 x WHERE x.downid = '27412820' AND x.TYPE = '1') bt2 ON bt2.ID = jeb.EXITSTATIONID left join etc_system_code@db_link_2310etc esc on esc.codevalue=jeb.ICCISSUER and typeid=62 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS s2 ON jeb.VEHICLECOLOR = s2.ENUM_VALUE and s2.ENUM_ID = 39 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed1 ON sed1.ENUM_VALUE = jeb.ELUDEMONEYTYPE AND sed1.ENUM_ID = 87 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed2 ON sed2.ENUM_VALUE = jeb.ELUDEMONEYTYPEITEM AND sed2.ENUM_ID = 88 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed3 ON sed3.ENUM_VALUE = jeb.ELUDEMONEYTYPEITEM AND sed3.ENUM_ID = 89 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed4 ON sed4.ENUM_VALUE = jeb.ELUDEMONEYTYPEITEM AND sed4.ENUM_ID = 90 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed5 ON sed5.ENUM_VALUE = jeb.ELUDEMONEYTYPEITEM AND sed5.ENUM_ID = 91 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed6 ON sed6.ENUM_VALUE = jeb.CARTYPE AND sed6.ENUM_ID = 40 WHERE jeb.BLACKTYPE = 5 AND ( jeb.CPUCARDID LIKE CONCAT( ?, '%' ) OR jeb.OBUID LIKE CONCAT( ?, '%' ) OR jeb.VEHICLELICENSE LIKE '%' || ? || '%') ORDER BY jeb.CREATETIME DESC 
2020/12/23-11:00:07 [http-nio-317-exec-4] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.OwerMapper.findEtcBlackList-[159] ==> Parameters: 豫A12345(String), 豫A12345(String), 豫A12345(String)
2020/12/23-11:00:07 [http-nio-317-exec-4] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.OwerMapper.findEtcBlackList-[159] <==      Total: 0
2020/12/23-11:00:56 [http-nio-317-exec-5] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[32] 方法执行前执行。。。。。before
2020/12/23-11:00:56 [http-nio-317-exec-5] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[33] <============================================
2020/12/23-11:00:56 [http-nio-317-exec-5] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[34] 请求来源： =》192.168.3.5
2020/12/23-11:00:56 [http-nio-317-exec-5] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[35] 请求URL：=》/JC/APP/findEtcBlackList
2020/12/23-11:00:56 [http-nio-317-exec-5] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[36] 请求方式：=》POST
2020/12/23-11:00:56 [http-nio-317-exec-5] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[37] 响应方法：=》com.tuozhi.zhlw.admin.jcApp.controller.OwerController.findEtcBlackList
2020/12/23-11:00:56 [http-nio-317-exec-5] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[38] 请求参数：=》[津B55633]
2020/12/23-11:00:56 [http-nio-317-exec-5] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.OwerMapper.findEtcBlackList-[159] ==>  Preparing: SELECT jeb.RCARDTYPE, jeb.ICCISSUER, esc.codename iccIssuerName, jeb.CPUCARDID, jeb.VEHICLELICENSE, decode(jeb.BLACKLISTTYPE,1,'白名单',5,'黑名单','')BLACKLISTTYPE, to_char(jeb.CREATETIME,'yyyy-MM-dd HH24:mi:ss') CREATETIME, jeb.AVT_ID, decode(jeb.FLAG,1,'已下发',0,'未下发')FLAG, jeb.TIME, decode(jeb.DELETEFLAG,1,'已下发',0,'未下发','此卡已消失/已入黑') DELETEFLAG, to_char(jeb.DELETETIME,'yyyy-MM-dd HH24:mi:ss') DELETETIME, jeb.DEVVEHICLELICENSE, sed1.ENUM_NAME ELUDEMONEYTYPE, CASE WHEN jeb.ELUDEMONEYTYPE = 1001 THEN sed2.ENUM_NAME WHEN jeb.ELUDEMONEYTYPE = 1002 THEN sed3.ENUM_NAME WHEN jeb.ELUDEMONEYTYPE = 1003 THEN sed4.ENUM_NAME WHEN jeb.ELUDEMONEYTYPE = 1004 THEN sed5.ENUM_NAME END ELUDEMONEYTYPEITEM, s2.enum_name VEHICLECOLOR, sed6.enum_name CARTYPE, jeb.BLACKTYPE, to_char(jeb.RECOVERTIME,'yyyy-MM-dd HH24:mi:ss') RECOVERTIME, jeb.SUMMONENY, jeb.SUMTOTAL, jeb.OBUID, jeb.ENTRYSTATIONID, bt1.NAME ENTRYSTATIONNAME, jeb.EXITSTATIONID, bt2.NAME EXITSTATIONNAME, to_char(jeb.ENTRYSTATIONTIME,'yyyy-MM-dd HH24:mi:ss') ENTRYSTATIONTIME, to_char(jeb.EXITSTATIONTIME,'yyyy-MM-dd HH24:mi:ss') EXITSTATIONTIME, jeb.PHYSICALTRUTHSTATUS, jeb.REQUESTDESCRIPTION, jeb.CREATENAME, jeb.CREATEDEPT, jeb.CREATEDEPTNAME, jeb.REQUESTID FROM HW_JZ.JC_ETC_CARD_BLACKLIST@DB_LINK3628 jeb LEFT JOIN (SELECT x.* FROM HW_JZ.BASIC_BASICINFODOWN_RES@DB_LINK3628 x WHERE x.downid = '27412820' AND x.TYPE = '1') bt1 ON bt1.ID = jeb.ENTRYSTATIONID LEFT JOIN (SELECT x.* FROM HW_JZ.BASIC_BASICINFODOWN_RES@DB_LINK3628 x WHERE x.downid = '27412820' AND x.TYPE = '1') bt2 ON bt2.ID = jeb.EXITSTATIONID left join etc_system_code@db_link_2310etc esc on esc.codevalue=jeb.ICCISSUER and typeid=62 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS s2 ON jeb.VEHICLECOLOR = s2.ENUM_VALUE and s2.ENUM_ID = 39 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed1 ON sed1.ENUM_VALUE = jeb.ELUDEMONEYTYPE AND sed1.ENUM_ID = 87 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed2 ON sed2.ENUM_VALUE = jeb.ELUDEMONEYTYPEITEM AND sed2.ENUM_ID = 88 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed3 ON sed3.ENUM_VALUE = jeb.ELUDEMONEYTYPEITEM AND sed3.ENUM_ID = 89 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed4 ON sed4.ENUM_VALUE = jeb.ELUDEMONEYTYPEITEM AND sed4.ENUM_ID = 90 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed5 ON sed5.ENUM_VALUE = jeb.ELUDEMONEYTYPEITEM AND sed5.ENUM_ID = 91 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed6 ON sed6.ENUM_VALUE = jeb.CARTYPE AND sed6.ENUM_ID = 40 WHERE jeb.BLACKTYPE = 5 AND ( jeb.CPUCARDID LIKE CONCAT( ?, '%' ) OR jeb.OBUID LIKE CONCAT( ?, '%' ) OR jeb.VEHICLELICENSE LIKE '%' || ? || '%') ORDER BY jeb.CREATETIME DESC 
2020/12/23-11:00:56 [http-nio-317-exec-5] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.OwerMapper.findEtcBlackList-[159] ==> Parameters: 津B55633(String), 津B55633(String), 津B55633(String)
2020/12/23-11:00:56 [http-nio-317-exec-5] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.OwerMapper.findEtcBlackList-[159] <==      Total: 0
2020/12/23-11:01:43 [http-nio-317-exec-6] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[32] 方法执行前执行。。。。。before
2020/12/23-11:01:43 [http-nio-317-exec-6] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[33] <============================================
2020/12/23-11:01:43 [http-nio-317-exec-6] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[34] 请求来源： =》192.168.3.5
2020/12/23-11:01:43 [http-nio-317-exec-6] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[35] 请求URL：=》/JC/APP/getEtcCardBlackList
2020/12/23-11:01:43 [http-nio-317-exec-6] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[36] 请求方式：=》POST
2020/12/23-11:01:43 [http-nio-317-exec-6] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[37] 响应方法：=》com.tuozhi.zhlw.admin.jcApp.controller.JCAuditStatusController.getEtcCardBlackList
2020/12/23-11:01:43 [http-nio-317-exec-6] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[38] 请求参数：=》[津B55633]
2020/12/23-11:01:54 [http-nio-317-exec-6] DEBUG com.tuozhi.zhlw.admin.jc.mapper.EtcCardBlackListMapper.findAll-[159] ==>  Preparing: select t.REQUESTORDERID, sed.enum_name OICARUSERTYPE, ttt.OICARTONNAGE, ttt.OICARAXIES, ttt.OICARWIDTH, ttt.OICARLENGTH, ttt.OIHEADSTOCKHEIGHT, to_char(t.saledate, 'yyyy-mm-dd HH24:mi:ss') saledate, t.cpucardid cpucardid, ttt.oiid oiid, s.codename codename, t.plateno plateno, s1.codename cardvehiclecolor, s2.codename cardvehicletype, decode(t.cardstate, 1,'待激活', 3, '发行', 4, '挂失', 5,'黑名单（欠费）', 6, '无卡挂起', 7,'有卡挂起',8,'无卡注销', 9, '有卡注销' ) cardstate, bc.codename cardblacklisttype, to_char(bc.createdate, 'yyyy-mm-dd hh24:mi:ss') createdate, ttt.oiplateno oiplateno, ttt.oiplatecolor oiplatecolor, ttt.oicarcategory oicarcategory, decode(ttt.oistate, 3, '在用', 4, '挂失', 6, '车型不符', 9, '注销', '不可用') oistate, t.ownername ownername, i.ciclientname as ciclientname, i.cimobile as cimobile, i.citel citel, i.ciidcard ciidcard, i.cilinkman cilinkman, t.clientid clientid, ebo.OFFICENAME, su.username, eocrt.oiid oiidtemp, evi.approvedcount, (select to_char(max(aecr.avt_inserttime), 'yyyy-mm-dd HH24:mi:ss') from avt_etc_card_client_rel@db_link_2310etc aecr where aecr.plateno=t.plateno and aecr.platenocolor=t.platenocolor) aecrsaledate, (select to_char(max(aeocr.avt_inserttime), 'yyyy-mm-dd HH24:mi:ss') from avt_etc_obu_client_rel@db_link_2310etc aeocr where aeocr.oiplateno=t.plateno and aeocr.oiplatecolor=t.platenocolor) aeocrsaledate from etc_card_client_rel@db_link_2310etc t left join etc_vehicle_info@db_link_2310etc evi on evi.plateno=t.plateno and evi.platenocolor=t.platenocolor left join ETC_OBU_CLIENT_REL_TEMP@db_link_2310etc eocrt on eocrt.oiplateno=t.plateno left join ETC_BUSINESS_OFFICE@db_link_2310etc ebo on t.OFFICEID=ebo.id left join etcv3_sys_user@db_link_2310etc su on t.userid=su.id left join etc_client_info@db_link_2310etc i on t.clientid = i.id left join (select tt.oiid, tt.oiplateno, o1.codename as oiplatecolor, o2.codename as oicarcategory, tt.oistate, tt.oiplatecolor as platecolor, tt.OICARTONNAGE, tt.OICARUSERTYPE, tt.OICARAXIES, tt.OICARWIDTH, tt.OICARLENGTH, tt.OIHEADSTOCKHEIGHT from etc_obu_client_rel@db_link_2310etc tt left join etc_system_code@db_link_2310etc o1 on o1.codevalue = tt.oiplatecolor and o1.typeid = 12 left join etc_system_code@db_link_2310etc o2 on o2.codevalue = tt.oicarcategory and o2.typeid = 13) ttt on ttt.oiplateno = t.plateno and ttt.platecolor = t.platenocolor left join (select b.cpucardid, b.createdate, bs.codename from etc_card_blacklist@db_link_2310etc b left join etc_system_code@db_link_2310etc bs on b.blacklisttype = bs.codevalue and bs.typeid = 43) bc on t.cpucardid = bc.cpucardid left join etc_system_code@db_link_2310etc s on s.codevalue = nvl(t.sendid, '1001002210001001') and s.typeid = 62 left join etc_system_code@db_link_2310etc s1 on s1.codevalue = t.platenocolor and s1.typeid = 12 left join etc_system_code@db_link_2310etc s2 on s2.codevalue = t.carcategory and s2.typeid = 13 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed ON ttt.OICARUSERTYPE = sed.ENUM_VALUE and sed.ENUM_ID = 41 WHERE t.plateno =? OR t.CPUCARDID=? 
2020/12/23-11:01:54 [http-nio-317-exec-6] DEBUG com.tuozhi.zhlw.admin.jc.mapper.EtcCardBlackListMapper.findAll-[159] ==> Parameters: 津B55633(String), 津B55633(String)
2020/12/23-11:01:58 [http-nio-317-exec-7] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[32] 方法执行前执行。。。。。before
2020/12/23-11:01:58 [http-nio-317-exec-7] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[33] <============================================
2020/12/23-11:01:58 [http-nio-317-exec-7] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[34] 请求来源： =》192.168.3.5
2020/12/23-11:01:58 [http-nio-317-exec-7] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[35] 请求URL：=》/JC/APP/findEtcBlackList
2020/12/23-11:01:58 [http-nio-317-exec-7] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[36] 请求方式：=》POST
2020/12/23-11:01:58 [http-nio-317-exec-7] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[37] 响应方法：=》com.tuozhi.zhlw.admin.jcApp.controller.OwerController.findEtcBlackList
2020/12/23-11:01:58 [http-nio-317-exec-7] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[38] 请求参数：=》[津B55633]
2020/12/23-11:01:58 [http-nio-317-exec-7] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.OwerMapper.findEtcBlackList-[159] ==>  Preparing: SELECT jeb.RCARDTYPE, jeb.ICCISSUER, esc.codename iccIssuerName, jeb.CPUCARDID, jeb.VEHICLELICENSE, decode(jeb.BLACKLISTTYPE,1,'白名单',5,'黑名单','')BLACKLISTTYPE, to_char(jeb.CREATETIME,'yyyy-MM-dd HH24:mi:ss') CREATETIME, jeb.AVT_ID, decode(jeb.FLAG,1,'已下发',0,'未下发')FLAG, jeb.TIME, decode(jeb.DELETEFLAG,1,'已下发',0,'未下发','此卡已消失/已入黑') DELETEFLAG, to_char(jeb.DELETETIME,'yyyy-MM-dd HH24:mi:ss') DELETETIME, jeb.DEVVEHICLELICENSE, sed1.ENUM_NAME ELUDEMONEYTYPE, CASE WHEN jeb.ELUDEMONEYTYPE = 1001 THEN sed2.ENUM_NAME WHEN jeb.ELUDEMONEYTYPE = 1002 THEN sed3.ENUM_NAME WHEN jeb.ELUDEMONEYTYPE = 1003 THEN sed4.ENUM_NAME WHEN jeb.ELUDEMONEYTYPE = 1004 THEN sed5.ENUM_NAME END ELUDEMONEYTYPEITEM, s2.enum_name VEHICLECOLOR, sed6.enum_name CARTYPE, jeb.BLACKTYPE, to_char(jeb.RECOVERTIME,'yyyy-MM-dd HH24:mi:ss') RECOVERTIME, jeb.SUMMONENY, jeb.SUMTOTAL, jeb.OBUID, jeb.ENTRYSTATIONID, bt1.NAME ENTRYSTATIONNAME, jeb.EXITSTATIONID, bt2.NAME EXITSTATIONNAME, to_char(jeb.ENTRYSTATIONTIME,'yyyy-MM-dd HH24:mi:ss') ENTRYSTATIONTIME, to_char(jeb.EXITSTATIONTIME,'yyyy-MM-dd HH24:mi:ss') EXITSTATIONTIME, jeb.PHYSICALTRUTHSTATUS, jeb.REQUESTDESCRIPTION, jeb.CREATENAME, jeb.CREATEDEPT, jeb.CREATEDEPTNAME, jeb.REQUESTID FROM HW_JZ.JC_ETC_CARD_BLACKLIST@DB_LINK3628 jeb LEFT JOIN (SELECT x.* FROM HW_JZ.BASIC_BASICINFODOWN_RES@DB_LINK3628 x WHERE x.downid = '27412820' AND x.TYPE = '1') bt1 ON bt1.ID = jeb.ENTRYSTATIONID LEFT JOIN (SELECT x.* FROM HW_JZ.BASIC_BASICINFODOWN_RES@DB_LINK3628 x WHERE x.downid = '27412820' AND x.TYPE = '1') bt2 ON bt2.ID = jeb.EXITSTATIONID left join etc_system_code@db_link_2310etc esc on esc.codevalue=jeb.ICCISSUER and typeid=62 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS s2 ON jeb.VEHICLECOLOR = s2.ENUM_VALUE and s2.ENUM_ID = 39 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed1 ON sed1.ENUM_VALUE = jeb.ELUDEMONEYTYPE AND sed1.ENUM_ID = 87 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed2 ON sed2.ENUM_VALUE = jeb.ELUDEMONEYTYPEITEM AND sed2.ENUM_ID = 88 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed3 ON sed3.ENUM_VALUE = jeb.ELUDEMONEYTYPEITEM AND sed3.ENUM_ID = 89 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed4 ON sed4.ENUM_VALUE = jeb.ELUDEMONEYTYPEITEM AND sed4.ENUM_ID = 90 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed5 ON sed5.ENUM_VALUE = jeb.ELUDEMONEYTYPEITEM AND sed5.ENUM_ID = 91 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed6 ON sed6.ENUM_VALUE = jeb.CARTYPE AND sed6.ENUM_ID = 40 WHERE jeb.BLACKTYPE = 5 AND ( jeb.CPUCARDID LIKE CONCAT( ?, '%' ) OR jeb.OBUID LIKE CONCAT( ?, '%' ) OR jeb.VEHICLELICENSE LIKE '%' || ? || '%') ORDER BY jeb.CREATETIME DESC 
2020/12/23-11:01:58 [http-nio-317-exec-8] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[32] 方法执行前执行。。。。。before
2020/12/23-11:01:58 [http-nio-317-exec-8] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[33] <============================================
2020/12/23-11:01:58 [http-nio-317-exec-8] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[34] 请求来源： =》192.168.3.5
2020/12/23-11:01:58 [http-nio-317-exec-8] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[35] 请求URL：=》/JC/APP/findEtcBlackList
2020/12/23-11:01:58 [http-nio-317-exec-8] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[36] 请求方式：=》POST
2020/12/23-11:01:58 [http-nio-317-exec-8] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[37] 响应方法：=》com.tuozhi.zhlw.admin.jcApp.controller.OwerController.findEtcBlackList
2020/12/23-11:01:58 [http-nio-317-exec-8] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[38] 请求参数：=》[津B55633]
2020/12/23-11:01:58 [http-nio-317-exec-7] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.OwerMapper.findEtcBlackList-[159] ==> Parameters: 津B55633(String), 津B55633(String), 津B55633(String)
2020/12/23-11:01:58 [http-nio-317-exec-8] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.OwerMapper.findEtcBlackList-[159] ==>  Preparing: SELECT jeb.RCARDTYPE, jeb.ICCISSUER, esc.codename iccIssuerName, jeb.CPUCARDID, jeb.VEHICLELICENSE, decode(jeb.BLACKLISTTYPE,1,'白名单',5,'黑名单','')BLACKLISTTYPE, to_char(jeb.CREATETIME,'yyyy-MM-dd HH24:mi:ss') CREATETIME, jeb.AVT_ID, decode(jeb.FLAG,1,'已下发',0,'未下发')FLAG, jeb.TIME, decode(jeb.DELETEFLAG,1,'已下发',0,'未下发','此卡已消失/已入黑') DELETEFLAG, to_char(jeb.DELETETIME,'yyyy-MM-dd HH24:mi:ss') DELETETIME, jeb.DEVVEHICLELICENSE, sed1.ENUM_NAME ELUDEMONEYTYPE, CASE WHEN jeb.ELUDEMONEYTYPE = 1001 THEN sed2.ENUM_NAME WHEN jeb.ELUDEMONEYTYPE = 1002 THEN sed3.ENUM_NAME WHEN jeb.ELUDEMONEYTYPE = 1003 THEN sed4.ENUM_NAME WHEN jeb.ELUDEMONEYTYPE = 1004 THEN sed5.ENUM_NAME END ELUDEMONEYTYPEITEM, s2.enum_name VEHICLECOLOR, sed6.enum_name CARTYPE, jeb.BLACKTYPE, to_char(jeb.RECOVERTIME,'yyyy-MM-dd HH24:mi:ss') RECOVERTIME, jeb.SUMMONENY, jeb.SUMTOTAL, jeb.OBUID, jeb.ENTRYSTATIONID, bt1.NAME ENTRYSTATIONNAME, jeb.EXITSTATIONID, bt2.NAME EXITSTATIONNAME, to_char(jeb.ENTRYSTATIONTIME,'yyyy-MM-dd HH24:mi:ss') ENTRYSTATIONTIME, to_char(jeb.EXITSTATIONTIME,'yyyy-MM-dd HH24:mi:ss') EXITSTATIONTIME, jeb.PHYSICALTRUTHSTATUS, jeb.REQUESTDESCRIPTION, jeb.CREATENAME, jeb.CREATEDEPT, jeb.CREATEDEPTNAME, jeb.REQUESTID FROM HW_JZ.JC_ETC_CARD_BLACKLIST@DB_LINK3628 jeb LEFT JOIN (SELECT x.* FROM HW_JZ.BASIC_BASICINFODOWN_RES@DB_LINK3628 x WHERE x.downid = '27412820' AND x.TYPE = '1') bt1 ON bt1.ID = jeb.ENTRYSTATIONID LEFT JOIN (SELECT x.* FROM HW_JZ.BASIC_BASICINFODOWN_RES@DB_LINK3628 x WHERE x.downid = '27412820' AND x.TYPE = '1') bt2 ON bt2.ID = jeb.EXITSTATIONID left join etc_system_code@db_link_2310etc esc on esc.codevalue=jeb.ICCISSUER and typeid=62 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS s2 ON jeb.VEHICLECOLOR = s2.ENUM_VALUE and s2.ENUM_ID = 39 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed1 ON sed1.ENUM_VALUE = jeb.ELUDEMONEYTYPE AND sed1.ENUM_ID = 87 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed2 ON sed2.ENUM_VALUE = jeb.ELUDEMONEYTYPEITEM AND sed2.ENUM_ID = 88 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed3 ON sed3.ENUM_VALUE = jeb.ELUDEMONEYTYPEITEM AND sed3.ENUM_ID = 89 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed4 ON sed4.ENUM_VALUE = jeb.ELUDEMONEYTYPEITEM AND sed4.ENUM_ID = 90 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed5 ON sed5.ENUM_VALUE = jeb.ELUDEMONEYTYPEITEM AND sed5.ENUM_ID = 91 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed6 ON sed6.ENUM_VALUE = jeb.CARTYPE AND sed6.ENUM_ID = 40 WHERE jeb.BLACKTYPE = 5 AND ( jeb.CPUCARDID LIKE CONCAT( ?, '%' ) OR jeb.OBUID LIKE CONCAT( ?, '%' ) OR jeb.VEHICLELICENSE LIKE '%' || ? || '%') ORDER BY jeb.CREATETIME DESC 
2020/12/23-11:01:58 [http-nio-317-exec-8] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.OwerMapper.findEtcBlackList-[159] ==> Parameters: 津B55633(String), 津B55633(String), 津B55633(String)
2020/12/23-11:01:59 [http-nio-317-exec-7] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.OwerMapper.findEtcBlackList-[159] <==      Total: 0
2020/12/23-11:02:00 [http-nio-317-exec-8] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.OwerMapper.findEtcBlackList-[159] <==      Total: 0
2020/12/23-11:02:00 [http-nio-317-exec-6] DEBUG com.tuozhi.zhlw.admin.jc.mapper.EtcCardBlackListMapper.findAll-[159] <==      Total: 2
2020/12/23-11:02:01 [http-nio-317-exec-10] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[32] 方法执行前执行。。。。。before
2020/12/23-11:02:01 [http-nio-317-exec-10] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[33] <============================================
2020/12/23-11:02:01 [http-nio-317-exec-10] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[34] 请求来源： =》192.168.3.5
2020/12/23-11:02:01 [http-nio-317-exec-10] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[35] 请求URL：=》/JC/APP/getNewVersionFilePath
2020/12/23-11:02:01 [http-nio-317-exec-10] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[36] 请求方式：=》POST
2020/12/23-11:02:01 [http-nio-317-exec-10] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[37] 响应方法：=》com.tuozhi.zhlw.admin.jcApp.controller.JCAppETCCardController.getNewVersionFilePath
2020/12/23-11:02:01 [http-nio-317-exec-10] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[38] 请求参数：=》[]
2020/12/23-11:02:01 [http-nio-317-exec-10] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.JCAppETCCardMapper.getNewVersionFilePath-[159] ==>  Preparing: SELECT VERSION,URLPATH FROM CD_JC.JC_APP_VERSION where rownum=1 ORDER BY VERSION desc 
2020/12/23-11:02:01 [http-nio-317-exec-10] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.JCAppETCCardMapper.getNewVersionFilePath-[159] ==> Parameters: 
2020/12/23-11:02:01 [http-nio-317-exec-10] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.JCAppETCCardMapper.getNewVersionFilePath-[159] <==      Total: 1
2020/12/23-11:02:02 [http-nio-317-exec-1] DEBUG com.tuozhi.zhlw.admin.mapper.LoginMapper.findBaseUserByLoginName-[159] ==>  Preparing: select t.ID as deptId,t.PARENT_ID as deptParentId,t.DEPT_NAME as deptName,t.DEPT_WORK as deptWork,u.LOGIN_NAME as loginName,u.USER_NAME as userName,u.PASSWORD as password,u.ID as userId,u.LAST_PASSWORD_MODIFY_TIME lastPasswordModifyTime,u.PASSWORD_HISTORY passwordHistory, t.PRIVILEGE_ID as privilegeId ,u.VALID_STATUS as validStatus,(select wm_concat(ROLE_ID) from SYS_USER_ROLES where USER_ID= u.ID) roleIds,t.DEPT_LONG_ID deptLongId, t.WORKFLOWDEPTROLE workFlowDeptRole from SYS_USERS u left join SYS_DEPT t on t.ID = u.DEPT_ID where u.LOGIN_NAME = ? 
2020/12/23-11:02:02 [http-nio-317-exec-1] DEBUG com.tuozhi.zhlw.admin.mapper.LoginMapper.findBaseUserByLoginName-[159] ==> Parameters: 1111111(String)
2020/12/23-11:02:02 [http-nio-317-exec-1] DEBUG com.tuozhi.zhlw.admin.mapper.LoginMapper.findBaseUserByLoginName-[159] <==      Total: 1
2020/12/23-11:02:02 [http-nio-317-exec-2] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[32] 方法执行前执行。。。。。before
2020/12/23-11:02:02 [http-nio-317-exec-2] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[33] <============================================
2020/12/23-11:02:02 [http-nio-317-exec-2] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[34] 请求来源： =》192.168.3.5
2020/12/23-11:02:02 [http-nio-317-exec-2] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[35] 请求URL：=》/JC/APP/getBlackOrGreyListByVehicle
2020/12/23-11:02:02 [http-nio-317-exec-2] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[36] 请求方式：=》POST
2020/12/23-11:02:02 [http-nio-317-exec-2] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[37] 响应方法：=》com.tuozhi.zhlw.admin.jcApp.controller.JCAuditStatusController.getBlackListByVehicle
2020/12/23-11:02:02 [http-nio-317-exec-2] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[38] 请求参数：=》[null]
2020/12/23-11:02:02 [http-nio-317-exec-2] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.JCAuditStatusMapper.getLocalBlackList-[159] ==>  Preparing: SELECT jbr.REQUESTID, jbr.CARNUMBER, sed.ENUM_NAME CARCOLOUR, jbr.CARFEATURE, round( jbr.ELUDEMONEYNUMBER / 100, 2 ) ELUDEMONEYNUMBER, round( jbr.FACTMONEYNUMBER / 100, 2 ) FACTMONEYNUMBER, sed1.ENUM_NAME ELUDEMONEYTYPE, CASE WHEN jbr.ELUDEMONEYTYPE = 1001 THEN sed2.ENUM_NAME WHEN jbr.ELUDEMONEYTYPE = 1002 THEN sed3.ENUM_NAME WHEN jbr.ELUDEMONEYTYPE = 1003 THEN sed4.ENUM_NAME WHEN jbr.ELUDEMONEYTYPE = 1004 THEN sed5.ENUM_NAME END ELUDEMONEYTYPEITEMNAME, sed6.ENUM_NAME CARTYPE, jbr.AXLETYPE, bt2.NAME ENTRYSTATIONID, bt3.NAME EXITSTATIONID, to_char( jbr.ENTRYSTATIONTIME, 'yyyy-mm-dd HH24:mi:ss' ) ENTRYSTATIONTIME, to_char( jbr.EXITSTATIONTIME, 'yyyy-mm-dd HH24:mi:ss' ) EXITSTATIONTIME, nvl( jbr.TOTALWEIGHT, '' ) TOTALWEIGHT, decode( jbr.HAVECARD, 1, '是', 0, '否', '' ) HAVECARD, decode( jbr.HAVEDAMAGEDEVICE, 1, '有', 0, '无', '' ) HAVEDAMAGEDEVICE, decode( jbr.HAVEVIDEO, 1, '有', 0, '无', '' ) HAVEVIDEO, nvl( jbr.CPUCARDID, '' ) CPUCARDID, nvl( jbr.REQUESTDESCRIPTION, '' ) REQUESTDESCRIPTION, to_char( jbr.CREATETIME, 'yyyy-mm-dd HH24:mi:ss' ) CREATETIME, jbr.CREATEUSERNAME, sed7.dept_name CREATEDEPTID, nvl( jbr.SUMTOTAL, 0 ) SUMTOTAL, bd1.DEPT_NAME SERVICEDEPTNAME, jbr1.SREQUESTID 撤销状态, --有值已撤销，没有值未撤销 jbr.IS_APP, jbr.REQUESTSTATUS FROM cd_jc.JC_BLACKLIST_REQUEST jbr LEFT JOIN "CD_JC"."JC_BLACKLIST_REQUEST" jbr1 ON jbr1.SREQUESTID = jbr.REQUESTID AND jbr1.DELETEFLAG = 1 AND jbr1.LOGICTYPE = 2 INNER JOIN "CD_JC"."JC_BLACKLIST_FLOWPATH" jbf ON jbr.CURRENTFLOWPATHID = jbf.FLOWPATHID LEFT JOIN CD_SYSTEM.SYS_DEPT bd1 ON jbf.OPERATEDEPTID = bd1.ID LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed ON sed.ENUM_VALUE = jbr.CARCOLOUR AND sed.ENUM_ID = 39 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed1 ON sed1.ENUM_VALUE = jbr.ELUDEMONEYTYPE AND sed1.ENUM_ID = 87 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed2 ON sed2.ENUM_VALUE = jbr.ELUDEMONEYTYPEITEM AND sed2.ENUM_ID = 88 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed3 ON sed3.ENUM_VALUE = jbr.ELUDEMONEYTYPEITEM AND sed3.ENUM_ID = 89 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed4 ON sed4.ENUM_VALUE = jbr.ELUDEMONEYTYPEITEM AND sed4.ENUM_ID = 90 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed5 ON sed5.ENUM_VALUE = jbr.ELUDEMONEYTYPEITEM AND sed5.ENUM_ID = 91 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed6 ON sed6.ENUM_VALUE = jbr.CARTYPE AND sed6.ENUM_ID = 40 LEFT JOIN CD_SYSTEM.SYS_DEPT sed7 ON sed7.ID = jbr.CREATEDEPTID LEFT JOIN ( SELECT x.* FROM CD_PASS.BASIC_BASICINFODOWN_RES x WHERE x.downid = ( SELECT max( w.down_id ) FROM CD_PASS.CLEAR_DOWNLOAD_LOG w WHERE w.read_result = 1 AND w.file_type = 24 ) AND x.TYPE = '1' ) bt2 ON bt2.ID = jbr.ENTRYSTATIONID LEFT JOIN ( SELECT x.* FROM CD_PASS.BASIC_BASICINFODOWN_RES x WHERE x.downid = ( SELECT max( w.down_id ) FROM CD_PASS.CLEAR_DOWNLOAD_LOG w WHERE w.read_result = 1 AND w.file_type = 24 ) AND x.TYPE = '1' ) bt3 ON bt3.ID = jbr.EXITSTATIONID WHERE jbr.DELETEFLAG = 1 AND jbr.LOGICTYPE =1 and rownum <=2 ORDER BY jbr.CREATETIME desc 
2020/12/23-11:02:02 [http-nio-317-exec-2] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.JCAuditStatusMapper.getLocalBlackList-[159] ==> Parameters: 
2020/12/23-11:02:02 [http-nio-317-exec-2] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.JCAuditStatusMapper.getLocalBlackList-[159] <==      Total: 2
2020/12/23-11:02:02 [http-nio-317-exec-2] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.JCAuditStatusMapper.getLocalGreyList-[159] ==>  Preparing: select t.REQUESTID,CARNUMBER,s2.ENUM_NAME LICENSECOLORID,CARFEATURE,round(ELUDEMONEYNUMBER/100,2) ELUDEMONEYNUMBER,round(FACTMONEYNUMBER/100,2) FACTMONEYNUMBER,s.ENUM_NAME ELUDEMONEYTYPE,s1.ENUM_NAME ELUDEMONEYTYPEITEM,s3.ENUM_NAME CARTYPE,AXLETYPE, bt2.NAME ENTRYSTATIONID, bt3.NAME EXITSTATIONID, to_char(ENTRYSTATIONTIME,'yyyy-mm-dd HH24:mi:ss') ENTRYSTATIONTIME,to_char(EXITSTATIONTIME,'yyyy-mm-dd HH24:mi:ss') EXITSTATIONTIME, nvl(TOTALWEIGHT,'') TOTALWEIGHT, decode(HAVECARD,1,'是',0,'否','') HAVECARD, decode(HAVEDAMAGEDEVICE,1,'有',0,'无','') HAVEDAMAGEDEVICE, decode(HAVEVIDEO,1,'有',0,'无','') HAVEVIDEO, nvl(CPUCARDID,'') CPUCARDID, nvl(REQUESTDESCRIPTION,'') REQUESTDESCRIPTION, to_char(t.CREATETIME,'yyyy-mm-dd HH24:mi:ss') CREATETIME, CREATEUSERNAME, s4.dept_name CREATEDEPTID, nvl(SUMTOTAL,0) SUMTOTAL, bd1.DEPT_NAME SERVICEDEPTNAME from cd_jc.JC_GRAYLIST_REQUEST t INNER JOIN "CD_JC"."JC_GRAYLIST_FLOWPATH" jbf ON t.CURRENTFLOWPATHID = jbf.FLOWPATHID LEFT JOIN CD_SYSTEM.SYS_DEPT bd1 ON jbf.DEPTID = bd1.DEPT_WORK LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS s ON t.ELUDEMONEYTYPE = s.ENUM_VALUE and s.ENUM_ID = 43 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS s1 ON t.ELUDEMONEYTYPEITEM = s1.ENUM_VALUE and s1.ENUM_ID = 44 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS s2 ON t.LICENSECOLORID = s2.ENUM_VALUE and s2.ENUM_ID = 39 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS s3 ON s3.ENUM_VALUE = t.CARTYPE AND s3.ENUM_ID = 40 LEFT JOIN CD_SYSTEM.SYS_DEPT s4 ON to_char(s4.ID) = t.CREATEDEPTID LEFT JOIN (SELECT x.* FROM CD_PASS.BASIC_BASICINFODOWN_RES x WHERE x.downid = ( SELECT max( w.down_id ) FROM CD_PASS.CLEAR_DOWNLOAD_LOG w WHERE w.read_result = 1 AND w.file_type = 24 ) AND x.TYPE = '1') bt2 ON bt2.ID = t.ENTRYSTATIONID LEFT JOIN (SELECT x.* FROM CD_PASS.BASIC_BASICINFODOWN_RES x WHERE x.downid = ( SELECT max( w.down_id ) FROM CD_PASS.CLEAR_DOWNLOAD_LOG w WHERE w.read_result = 1 AND w.file_type = 24 ) AND x.TYPE = '1') bt3 ON bt3.ID = t.EXITSTATIONID where rownum<=2 order by t.CREATETIME desc 
2020/12/23-11:02:02 [http-nio-317-exec-2] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.JCAuditStatusMapper.getLocalGreyList-[159] ==> Parameters: 
2020/12/23-11:02:03 [http-nio-317-exec-2] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.JCAuditStatusMapper.getLocalGreyList-[159] <==      Total: 2
2020/12/23-11:02:06 [http-nio-317-exec-3] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[32] 方法执行前执行。。。。。before
2020/12/23-11:02:06 [http-nio-317-exec-3] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[33] <============================================
2020/12/23-11:02:06 [http-nio-317-exec-3] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[34] 请求来源： =》192.168.3.5
2020/12/23-11:02:06 [http-nio-317-exec-3] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[35] 请求URL：=》/JC/APP/findEtcBlackList
2020/12/23-11:02:06 [http-nio-317-exec-3] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[36] 请求方式：=》POST
2020/12/23-11:02:06 [http-nio-317-exec-3] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[37] 响应方法：=》com.tuozhi.zhlw.admin.jcApp.controller.OwerController.findEtcBlackList
2020/12/23-11:02:06 [http-nio-317-exec-3] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[38] 请求参数：=》[津B55633]
2020/12/23-11:02:06 [http-nio-317-exec-3] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.OwerMapper.findEtcBlackList-[159] ==>  Preparing: SELECT jeb.RCARDTYPE, jeb.ICCISSUER, esc.codename iccIssuerName, jeb.CPUCARDID, jeb.VEHICLELICENSE, decode(jeb.BLACKLISTTYPE,1,'白名单',5,'黑名单','')BLACKLISTTYPE, to_char(jeb.CREATETIME,'yyyy-MM-dd HH24:mi:ss') CREATETIME, jeb.AVT_ID, decode(jeb.FLAG,1,'已下发',0,'未下发')FLAG, jeb.TIME, decode(jeb.DELETEFLAG,1,'已下发',0,'未下发','此卡已消失/已入黑') DELETEFLAG, to_char(jeb.DELETETIME,'yyyy-MM-dd HH24:mi:ss') DELETETIME, jeb.DEVVEHICLELICENSE, sed1.ENUM_NAME ELUDEMONEYTYPE, CASE WHEN jeb.ELUDEMONEYTYPE = 1001 THEN sed2.ENUM_NAME WHEN jeb.ELUDEMONEYTYPE = 1002 THEN sed3.ENUM_NAME WHEN jeb.ELUDEMONEYTYPE = 1003 THEN sed4.ENUM_NAME WHEN jeb.ELUDEMONEYTYPE = 1004 THEN sed5.ENUM_NAME END ELUDEMONEYTYPEITEM, s2.enum_name VEHICLECOLOR, sed6.enum_name CARTYPE, jeb.BLACKTYPE, to_char(jeb.RECOVERTIME,'yyyy-MM-dd HH24:mi:ss') RECOVERTIME, jeb.SUMMONENY, jeb.SUMTOTAL, jeb.OBUID, jeb.ENTRYSTATIONID, bt1.NAME ENTRYSTATIONNAME, jeb.EXITSTATIONID, bt2.NAME EXITSTATIONNAME, to_char(jeb.ENTRYSTATIONTIME,'yyyy-MM-dd HH24:mi:ss') ENTRYSTATIONTIME, to_char(jeb.EXITSTATIONTIME,'yyyy-MM-dd HH24:mi:ss') EXITSTATIONTIME, jeb.PHYSICALTRUTHSTATUS, jeb.REQUESTDESCRIPTION, jeb.CREATENAME, jeb.CREATEDEPT, jeb.CREATEDEPTNAME, jeb.REQUESTID FROM HW_JZ.JC_ETC_CARD_BLACKLIST@DB_LINK3628 jeb LEFT JOIN (SELECT x.* FROM HW_JZ.BASIC_BASICINFODOWN_RES@DB_LINK3628 x WHERE x.downid = '27412820' AND x.TYPE = '1') bt1 ON bt1.ID = jeb.ENTRYSTATIONID LEFT JOIN (SELECT x.* FROM HW_JZ.BASIC_BASICINFODOWN_RES@DB_LINK3628 x WHERE x.downid = '27412820' AND x.TYPE = '1') bt2 ON bt2.ID = jeb.EXITSTATIONID left join etc_system_code@db_link_2310etc esc on esc.codevalue=jeb.ICCISSUER and typeid=62 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS s2 ON jeb.VEHICLECOLOR = s2.ENUM_VALUE and s2.ENUM_ID = 39 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed1 ON sed1.ENUM_VALUE = jeb.ELUDEMONEYTYPE AND sed1.ENUM_ID = 87 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed2 ON sed2.ENUM_VALUE = jeb.ELUDEMONEYTYPEITEM AND sed2.ENUM_ID = 88 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed3 ON sed3.ENUM_VALUE = jeb.ELUDEMONEYTYPEITEM AND sed3.ENUM_ID = 89 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed4 ON sed4.ENUM_VALUE = jeb.ELUDEMONEYTYPEITEM AND sed4.ENUM_ID = 90 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed5 ON sed5.ENUM_VALUE = jeb.ELUDEMONEYTYPEITEM AND sed5.ENUM_ID = 91 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed6 ON sed6.ENUM_VALUE = jeb.CARTYPE AND sed6.ENUM_ID = 40 WHERE jeb.BLACKTYPE = 5 AND ( jeb.CPUCARDID LIKE CONCAT( ?, '%' ) OR jeb.OBUID LIKE CONCAT( ?, '%' ) OR jeb.VEHICLELICENSE LIKE '%' || ? || '%') ORDER BY jeb.CREATETIME DESC 
2020/12/23-11:02:06 [http-nio-317-exec-3] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.OwerMapper.findEtcBlackList-[159] ==> Parameters: 津B55633(String), 津B55633(String), 津B55633(String)
2020/12/23-11:02:06 [http-nio-317-exec-3] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.OwerMapper.findEtcBlackList-[159] <==      Total: 0
2020/12/23-11:02:10 [http-nio-317-exec-4] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[32] 方法执行前执行。。。。。before
2020/12/23-11:02:10 [http-nio-317-exec-4] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[33] <============================================
2020/12/23-11:02:10 [http-nio-317-exec-4] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[34] 请求来源： =》192.168.3.5
2020/12/23-11:02:10 [http-nio-317-exec-4] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[35] 请求URL：=》/JC/APP/findEtcBlackList
2020/12/23-11:02:10 [http-nio-317-exec-4] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[36] 请求方式：=》POST
2020/12/23-11:02:10 [http-nio-317-exec-4] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[37] 响应方法：=》com.tuozhi.zhlw.admin.jcApp.controller.OwerController.findEtcBlackList
2020/12/23-11:02:10 [http-nio-317-exec-4] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[38] 请求参数：=》[津B55633]
2020/12/23-11:02:10 [http-nio-317-exec-4] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.OwerMapper.findEtcBlackList-[159] ==>  Preparing: SELECT jeb.RCARDTYPE, jeb.ICCISSUER, esc.codename iccIssuerName, jeb.CPUCARDID, jeb.VEHICLELICENSE, decode(jeb.BLACKLISTTYPE,1,'白名单',5,'黑名单','')BLACKLISTTYPE, to_char(jeb.CREATETIME,'yyyy-MM-dd HH24:mi:ss') CREATETIME, jeb.AVT_ID, decode(jeb.FLAG,1,'已下发',0,'未下发')FLAG, jeb.TIME, decode(jeb.DELETEFLAG,1,'已下发',0,'未下发','此卡已消失/已入黑') DELETEFLAG, to_char(jeb.DELETETIME,'yyyy-MM-dd HH24:mi:ss') DELETETIME, jeb.DEVVEHICLELICENSE, sed1.ENUM_NAME ELUDEMONEYTYPE, CASE WHEN jeb.ELUDEMONEYTYPE = 1001 THEN sed2.ENUM_NAME WHEN jeb.ELUDEMONEYTYPE = 1002 THEN sed3.ENUM_NAME WHEN jeb.ELUDEMONEYTYPE = 1003 THEN sed4.ENUM_NAME WHEN jeb.ELUDEMONEYTYPE = 1004 THEN sed5.ENUM_NAME END ELUDEMONEYTYPEITEM, s2.enum_name VEHICLECOLOR, sed6.enum_name CARTYPE, jeb.BLACKTYPE, to_char(jeb.RECOVERTIME,'yyyy-MM-dd HH24:mi:ss') RECOVERTIME, jeb.SUMMONENY, jeb.SUMTOTAL, jeb.OBUID, jeb.ENTRYSTATIONID, bt1.NAME ENTRYSTATIONNAME, jeb.EXITSTATIONID, bt2.NAME EXITSTATIONNAME, to_char(jeb.ENTRYSTATIONTIME,'yyyy-MM-dd HH24:mi:ss') ENTRYSTATIONTIME, to_char(jeb.EXITSTATIONTIME,'yyyy-MM-dd HH24:mi:ss') EXITSTATIONTIME, jeb.PHYSICALTRUTHSTATUS, jeb.REQUESTDESCRIPTION, jeb.CREATENAME, jeb.CREATEDEPT, jeb.CREATEDEPTNAME, jeb.REQUESTID FROM HW_JZ.JC_ETC_CARD_BLACKLIST@DB_LINK3628 jeb LEFT JOIN (SELECT x.* FROM HW_JZ.BASIC_BASICINFODOWN_RES@DB_LINK3628 x WHERE x.downid = '27412820' AND x.TYPE = '1') bt1 ON bt1.ID = jeb.ENTRYSTATIONID LEFT JOIN (SELECT x.* FROM HW_JZ.BASIC_BASICINFODOWN_RES@DB_LINK3628 x WHERE x.downid = '27412820' AND x.TYPE = '1') bt2 ON bt2.ID = jeb.EXITSTATIONID left join etc_system_code@db_link_2310etc esc on esc.codevalue=jeb.ICCISSUER and typeid=62 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS s2 ON jeb.VEHICLECOLOR = s2.ENUM_VALUE and s2.ENUM_ID = 39 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed1 ON sed1.ENUM_VALUE = jeb.ELUDEMONEYTYPE AND sed1.ENUM_ID = 87 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed2 ON sed2.ENUM_VALUE = jeb.ELUDEMONEYTYPEITEM AND sed2.ENUM_ID = 88 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed3 ON sed3.ENUM_VALUE = jeb.ELUDEMONEYTYPEITEM AND sed3.ENUM_ID = 89 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed4 ON sed4.ENUM_VALUE = jeb.ELUDEMONEYTYPEITEM AND sed4.ENUM_ID = 90 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed5 ON sed5.ENUM_VALUE = jeb.ELUDEMONEYTYPEITEM AND sed5.ENUM_ID = 91 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed6 ON sed6.ENUM_VALUE = jeb.CARTYPE AND sed6.ENUM_ID = 40 WHERE jeb.BLACKTYPE = 5 AND ( jeb.CPUCARDID LIKE CONCAT( ?, '%' ) OR jeb.OBUID LIKE CONCAT( ?, '%' ) OR jeb.VEHICLELICENSE LIKE '%' || ? || '%') ORDER BY jeb.CREATETIME DESC 
2020/12/23-11:02:10 [http-nio-317-exec-4] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.OwerMapper.findEtcBlackList-[159] ==> Parameters: 津B55633(String), 津B55633(String), 津B55633(String)
2020/12/23-11:02:10 [http-nio-317-exec-4] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.OwerMapper.findEtcBlackList-[159] <==      Total: 0
2020/12/23-11:02:10 [http-nio-317-exec-5] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[32] 方法执行前执行。。。。。before
2020/12/23-11:02:10 [http-nio-317-exec-5] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[33] <============================================
2020/12/23-11:02:10 [http-nio-317-exec-5] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[34] 请求来源： =》192.168.3.5
2020/12/23-11:02:10 [http-nio-317-exec-5] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[35] 请求URL：=》/JC/APP/findEtcBlackList
2020/12/23-11:02:10 [http-nio-317-exec-5] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[36] 请求方式：=》POST
2020/12/23-11:02:10 [http-nio-317-exec-5] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[37] 响应方法：=》com.tuozhi.zhlw.admin.jcApp.controller.OwerController.findEtcBlackList
2020/12/23-11:02:10 [http-nio-317-exec-5] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[38] 请求参数：=》[津B55633]
2020/12/23-11:02:10 [http-nio-317-exec-5] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.OwerMapper.findEtcBlackList-[159] ==>  Preparing: SELECT jeb.RCARDTYPE, jeb.ICCISSUER, esc.codename iccIssuerName, jeb.CPUCARDID, jeb.VEHICLELICENSE, decode(jeb.BLACKLISTTYPE,1,'白名单',5,'黑名单','')BLACKLISTTYPE, to_char(jeb.CREATETIME,'yyyy-MM-dd HH24:mi:ss') CREATETIME, jeb.AVT_ID, decode(jeb.FLAG,1,'已下发',0,'未下发')FLAG, jeb.TIME, decode(jeb.DELETEFLAG,1,'已下发',0,'未下发','此卡已消失/已入黑') DELETEFLAG, to_char(jeb.DELETETIME,'yyyy-MM-dd HH24:mi:ss') DELETETIME, jeb.DEVVEHICLELICENSE, sed1.ENUM_NAME ELUDEMONEYTYPE, CASE WHEN jeb.ELUDEMONEYTYPE = 1001 THEN sed2.ENUM_NAME WHEN jeb.ELUDEMONEYTYPE = 1002 THEN sed3.ENUM_NAME WHEN jeb.ELUDEMONEYTYPE = 1003 THEN sed4.ENUM_NAME WHEN jeb.ELUDEMONEYTYPE = 1004 THEN sed5.ENUM_NAME END ELUDEMONEYTYPEITEM, s2.enum_name VEHICLECOLOR, sed6.enum_name CARTYPE, jeb.BLACKTYPE, to_char(jeb.RECOVERTIME,'yyyy-MM-dd HH24:mi:ss') RECOVERTIME, jeb.SUMMONENY, jeb.SUMTOTAL, jeb.OBUID, jeb.ENTRYSTATIONID, bt1.NAME ENTRYSTATIONNAME, jeb.EXITSTATIONID, bt2.NAME EXITSTATIONNAME, to_char(jeb.ENTRYSTATIONTIME,'yyyy-MM-dd HH24:mi:ss') ENTRYSTATIONTIME, to_char(jeb.EXITSTATIONTIME,'yyyy-MM-dd HH24:mi:ss') EXITSTATIONTIME, jeb.PHYSICALTRUTHSTATUS, jeb.REQUESTDESCRIPTION, jeb.CREATENAME, jeb.CREATEDEPT, jeb.CREATEDEPTNAME, jeb.REQUESTID FROM HW_JZ.JC_ETC_CARD_BLACKLIST@DB_LINK3628 jeb LEFT JOIN (SELECT x.* FROM HW_JZ.BASIC_BASICINFODOWN_RES@DB_LINK3628 x WHERE x.downid = '27412820' AND x.TYPE = '1') bt1 ON bt1.ID = jeb.ENTRYSTATIONID LEFT JOIN (SELECT x.* FROM HW_JZ.BASIC_BASICINFODOWN_RES@DB_LINK3628 x WHERE x.downid = '27412820' AND x.TYPE = '1') bt2 ON bt2.ID = jeb.EXITSTATIONID left join etc_system_code@db_link_2310etc esc on esc.codevalue=jeb.ICCISSUER and typeid=62 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS s2 ON jeb.VEHICLECOLOR = s2.ENUM_VALUE and s2.ENUM_ID = 39 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed1 ON sed1.ENUM_VALUE = jeb.ELUDEMONEYTYPE AND sed1.ENUM_ID = 87 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed2 ON sed2.ENUM_VALUE = jeb.ELUDEMONEYTYPEITEM AND sed2.ENUM_ID = 88 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed3 ON sed3.ENUM_VALUE = jeb.ELUDEMONEYTYPEITEM AND sed3.ENUM_ID = 89 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed4 ON sed4.ENUM_VALUE = jeb.ELUDEMONEYTYPEITEM AND sed4.ENUM_ID = 90 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed5 ON sed5.ENUM_VALUE = jeb.ELUDEMONEYTYPEITEM AND sed5.ENUM_ID = 91 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed6 ON sed6.ENUM_VALUE = jeb.CARTYPE AND sed6.ENUM_ID = 40 WHERE jeb.BLACKTYPE = 5 AND ( jeb.CPUCARDID LIKE CONCAT( ?, '%' ) OR jeb.OBUID LIKE CONCAT( ?, '%' ) OR jeb.VEHICLELICENSE LIKE '%' || ? || '%') ORDER BY jeb.CREATETIME DESC 
2020/12/23-11:02:10 [http-nio-317-exec-5] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.OwerMapper.findEtcBlackList-[159] ==> Parameters: 津B55633(String), 津B55633(String), 津B55633(String)
2020/12/23-11:02:10 [http-nio-317-exec-5] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.OwerMapper.findEtcBlackList-[159] <==      Total: 0
2020/12/23-11:02:11 [http-nio-317-exec-7] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[32] 方法执行前执行。。。。。before
2020/12/23-11:02:11 [http-nio-317-exec-7] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[33] <============================================
2020/12/23-11:02:11 [http-nio-317-exec-7] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[34] 请求来源： =》192.168.3.5
2020/12/23-11:02:11 [http-nio-317-exec-7] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[35] 请求URL：=》/JC/APP/findEtcBlackList
2020/12/23-11:02:11 [http-nio-317-exec-7] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[36] 请求方式：=》POST
2020/12/23-11:02:11 [http-nio-317-exec-7] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[37] 响应方法：=》com.tuozhi.zhlw.admin.jcApp.controller.OwerController.findEtcBlackList
2020/12/23-11:02:11 [http-nio-317-exec-7] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[38] 请求参数：=》[津B55633]
2020/12/23-11:02:11 [http-nio-317-exec-7] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.OwerMapper.findEtcBlackList-[159] ==>  Preparing: SELECT jeb.RCARDTYPE, jeb.ICCISSUER, esc.codename iccIssuerName, jeb.CPUCARDID, jeb.VEHICLELICENSE, decode(jeb.BLACKLISTTYPE,1,'白名单',5,'黑名单','')BLACKLISTTYPE, to_char(jeb.CREATETIME,'yyyy-MM-dd HH24:mi:ss') CREATETIME, jeb.AVT_ID, decode(jeb.FLAG,1,'已下发',0,'未下发')FLAG, jeb.TIME, decode(jeb.DELETEFLAG,1,'已下发',0,'未下发','此卡已消失/已入黑') DELETEFLAG, to_char(jeb.DELETETIME,'yyyy-MM-dd HH24:mi:ss') DELETETIME, jeb.DEVVEHICLELICENSE, sed1.ENUM_NAME ELUDEMONEYTYPE, CASE WHEN jeb.ELUDEMONEYTYPE = 1001 THEN sed2.ENUM_NAME WHEN jeb.ELUDEMONEYTYPE = 1002 THEN sed3.ENUM_NAME WHEN jeb.ELUDEMONEYTYPE = 1003 THEN sed4.ENUM_NAME WHEN jeb.ELUDEMONEYTYPE = 1004 THEN sed5.ENUM_NAME END ELUDEMONEYTYPEITEM, s2.enum_name VEHICLECOLOR, sed6.enum_name CARTYPE, jeb.BLACKTYPE, to_char(jeb.RECOVERTIME,'yyyy-MM-dd HH24:mi:ss') RECOVERTIME, jeb.SUMMONENY, jeb.SUMTOTAL, jeb.OBUID, jeb.ENTRYSTATIONID, bt1.NAME ENTRYSTATIONNAME, jeb.EXITSTATIONID, bt2.NAME EXITSTATIONNAME, to_char(jeb.ENTRYSTATIONTIME,'yyyy-MM-dd HH24:mi:ss') ENTRYSTATIONTIME, to_char(jeb.EXITSTATIONTIME,'yyyy-MM-dd HH24:mi:ss') EXITSTATIONTIME, jeb.PHYSICALTRUTHSTATUS, jeb.REQUESTDESCRIPTION, jeb.CREATENAME, jeb.CREATEDEPT, jeb.CREATEDEPTNAME, jeb.REQUESTID FROM HW_JZ.JC_ETC_CARD_BLACKLIST@DB_LINK3628 jeb LEFT JOIN (SELECT x.* FROM HW_JZ.BASIC_BASICINFODOWN_RES@DB_LINK3628 x WHERE x.downid = '27412820' AND x.TYPE = '1') bt1 ON bt1.ID = jeb.ENTRYSTATIONID LEFT JOIN (SELECT x.* FROM HW_JZ.BASIC_BASICINFODOWN_RES@DB_LINK3628 x WHERE x.downid = '27412820' AND x.TYPE = '1') bt2 ON bt2.ID = jeb.EXITSTATIONID left join etc_system_code@db_link_2310etc esc on esc.codevalue=jeb.ICCISSUER and typeid=62 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS s2 ON jeb.VEHICLECOLOR = s2.ENUM_VALUE and s2.ENUM_ID = 39 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed1 ON sed1.ENUM_VALUE = jeb.ELUDEMONEYTYPE AND sed1.ENUM_ID = 87 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed2 ON sed2.ENUM_VALUE = jeb.ELUDEMONEYTYPEITEM AND sed2.ENUM_ID = 88 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed3 ON sed3.ENUM_VALUE = jeb.ELUDEMONEYTYPEITEM AND sed3.ENUM_ID = 89 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed4 ON sed4.ENUM_VALUE = jeb.ELUDEMONEYTYPEITEM AND sed4.ENUM_ID = 90 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed5 ON sed5.ENUM_VALUE = jeb.ELUDEMONEYTYPEITEM AND sed5.ENUM_ID = 91 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed6 ON sed6.ENUM_VALUE = jeb.CARTYPE AND sed6.ENUM_ID = 40 WHERE jeb.BLACKTYPE = 5 AND ( jeb.CPUCARDID LIKE CONCAT( ?, '%' ) OR jeb.OBUID LIKE CONCAT( ?, '%' ) OR jeb.VEHICLELICENSE LIKE '%' || ? || '%') ORDER BY jeb.CREATETIME DESC 
2020/12/23-11:02:11 [http-nio-317-exec-7] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.OwerMapper.findEtcBlackList-[159] ==> Parameters: 津B55633(String), 津B55633(String), 津B55633(String)
2020/12/23-11:02:11 [http-nio-317-exec-7] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.OwerMapper.findEtcBlackList-[159] <==      Total: 0
2020/12/23-11:08:43 [http-nio-317-exec-8] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[32] 方法执行前执行。。。。。before
2020/12/23-11:08:43 [http-nio-317-exec-8] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[33] <============================================
2020/12/23-11:08:43 [http-nio-317-exec-8] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[34] 请求来源： =》192.168.3.5
2020/12/23-11:08:43 [http-nio-317-exec-8] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[35] 请求URL：=》/JC/APP/findEtcBlackList
2020/12/23-11:08:43 [http-nio-317-exec-8] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[36] 请求方式：=》POST
2020/12/23-11:08:43 [http-nio-317-exec-8] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[37] 响应方法：=》com.tuozhi.zhlw.admin.jcApp.controller.OwerController.findEtcBlackList
2020/12/23-11:08:43 [http-nio-317-exec-8] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[38] 请求参数：=》[津B55633]
2020/12/23-11:08:43 [http-nio-317-exec-8] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.OwerMapper.findEtcBlackList-[159] ==>  Preparing: SELECT jeb.RCARDTYPE, jeb.ICCISSUER, esc.codename iccIssuerName, jeb.CPUCARDID, jeb.VEHICLELICENSE, decode(jeb.BLACKLISTTYPE,1,'白名单',5,'黑名单','')BLACKLISTTYPE, to_char(jeb.CREATETIME,'yyyy-MM-dd HH24:mi:ss') CREATETIME, jeb.AVT_ID, decode(jeb.FLAG,1,'已下发',0,'未下发')FLAG, jeb.TIME, decode(jeb.DELETEFLAG,1,'已下发',0,'未下发','此卡已消失/已入黑') DELETEFLAG, to_char(jeb.DELETETIME,'yyyy-MM-dd HH24:mi:ss') DELETETIME, jeb.DEVVEHICLELICENSE, sed1.ENUM_NAME ELUDEMONEYTYPE, CASE WHEN jeb.ELUDEMONEYTYPE = 1001 THEN sed2.ENUM_NAME WHEN jeb.ELUDEMONEYTYPE = 1002 THEN sed3.ENUM_NAME WHEN jeb.ELUDEMONEYTYPE = 1003 THEN sed4.ENUM_NAME WHEN jeb.ELUDEMONEYTYPE = 1004 THEN sed5.ENUM_NAME END ELUDEMONEYTYPEITEM, s2.enum_name VEHICLECOLOR, sed6.enum_name CARTYPE, jeb.BLACKTYPE, to_char(jeb.RECOVERTIME,'yyyy-MM-dd HH24:mi:ss') RECOVERTIME, jeb.SUMMONENY, jeb.SUMTOTAL, jeb.OBUID, jeb.ENTRYSTATIONID, bt1.NAME ENTRYSTATIONNAME, jeb.EXITSTATIONID, bt2.NAME EXITSTATIONNAME, to_char(jeb.ENTRYSTATIONTIME,'yyyy-MM-dd HH24:mi:ss') ENTRYSTATIONTIME, to_char(jeb.EXITSTATIONTIME,'yyyy-MM-dd HH24:mi:ss') EXITSTATIONTIME, jeb.PHYSICALTRUTHSTATUS, jeb.REQUESTDESCRIPTION, jeb.CREATENAME, jeb.CREATEDEPT, jeb.CREATEDEPTNAME, jeb.REQUESTID FROM HW_JZ.JC_ETC_CARD_BLACKLIST@DB_LINK3628 jeb LEFT JOIN (SELECT x.* FROM HW_JZ.BASIC_BASICINFODOWN_RES@DB_LINK3628 x WHERE x.downid = '27412820' AND x.TYPE = '1') bt1 ON bt1.ID = jeb.ENTRYSTATIONID LEFT JOIN (SELECT x.* FROM HW_JZ.BASIC_BASICINFODOWN_RES@DB_LINK3628 x WHERE x.downid = '27412820' AND x.TYPE = '1') bt2 ON bt2.ID = jeb.EXITSTATIONID left join etc_system_code@db_link_2310etc esc on esc.codevalue=jeb.ICCISSUER and typeid=62 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS s2 ON jeb.VEHICLECOLOR = s2.ENUM_VALUE and s2.ENUM_ID = 39 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed1 ON sed1.ENUM_VALUE = jeb.ELUDEMONEYTYPE AND sed1.ENUM_ID = 87 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed2 ON sed2.ENUM_VALUE = jeb.ELUDEMONEYTYPEITEM AND sed2.ENUM_ID = 88 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed3 ON sed3.ENUM_VALUE = jeb.ELUDEMONEYTYPEITEM AND sed3.ENUM_ID = 89 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed4 ON sed4.ENUM_VALUE = jeb.ELUDEMONEYTYPEITEM AND sed4.ENUM_ID = 90 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed5 ON sed5.ENUM_VALUE = jeb.ELUDEMONEYTYPEITEM AND sed5.ENUM_ID = 91 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed6 ON sed6.ENUM_VALUE = jeb.CARTYPE AND sed6.ENUM_ID = 40 WHERE jeb.BLACKTYPE = 5 AND ( jeb.CPUCARDID LIKE CONCAT( ?, '%' ) OR jeb.OBUID LIKE CONCAT( ?, '%' ) OR jeb.VEHICLELICENSE LIKE '%' || ? || '%') ORDER BY jeb.CREATETIME DESC 
2020/12/23-11:08:43 [http-nio-317-exec-8] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.OwerMapper.findEtcBlackList-[159] ==> Parameters: 津B55633(String), 津B55633(String), 津B55633(String)
2020/12/23-11:08:43 [http-nio-317-exec-8] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.OwerMapper.findEtcBlackList-[159] <==      Total: 0
2020/12/23-11:09:04 [http-nio-317-exec-6] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[32] 方法执行前执行。。。。。before
2020/12/23-11:09:04 [http-nio-317-exec-6] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[33] <============================================
2020/12/23-11:09:04 [http-nio-317-exec-6] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[34] 请求来源： =》192.168.3.5
2020/12/23-11:09:04 [http-nio-317-exec-6] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[35] 请求URL：=》/JC/APP/findEtcBlackList
2020/12/23-11:09:04 [http-nio-317-exec-6] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[36] 请求方式：=》POST
2020/12/23-11:09:04 [http-nio-317-exec-6] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[37] 响应方法：=》com.tuozhi.zhlw.admin.jcApp.controller.OwerController.findEtcBlackList
2020/12/23-11:09:04 [http-nio-317-exec-6] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[38] 请求参数：=》[津B55633]
2020/12/23-11:09:09 [http-nio-317-exec-6] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.OwerMapper.findEtcBlackList-[159] ==>  Preparing: SELECT jeb.RCARDTYPE, jeb.ICCISSUER, esc.codename iccIssuerName, jeb.CPUCARDID, jeb.VEHICLELICENSE, decode(jeb.BLACKLISTTYPE,1,'白名单',5,'黑名单','')BLACKLISTTYPE, to_char(jeb.CREATETIME,'yyyy-MM-dd HH24:mi:ss') CREATETIME, jeb.AVT_ID, decode(jeb.FLAG,1,'已下发',0,'未下发')FLAG, jeb.TIME, decode(jeb.DELETEFLAG,1,'已下发',0,'未下发','此卡已消失/已入黑') DELETEFLAG, to_char(jeb.DELETETIME,'yyyy-MM-dd HH24:mi:ss') DELETETIME, jeb.DEVVEHICLELICENSE, sed1.ENUM_NAME ELUDEMONEYTYPE, CASE WHEN jeb.ELUDEMONEYTYPE = 1001 THEN sed2.ENUM_NAME WHEN jeb.ELUDEMONEYTYPE = 1002 THEN sed3.ENUM_NAME WHEN jeb.ELUDEMONEYTYPE = 1003 THEN sed4.ENUM_NAME WHEN jeb.ELUDEMONEYTYPE = 1004 THEN sed5.ENUM_NAME END ELUDEMONEYTYPEITEM, s2.enum_name VEHICLECOLOR, sed6.enum_name CARTYPE, jeb.BLACKTYPE, to_char(jeb.RECOVERTIME,'yyyy-MM-dd HH24:mi:ss') RECOVERTIME, jeb.SUMMONENY, jeb.SUMTOTAL, jeb.OBUID, jeb.ENTRYSTATIONID, bt1.NAME ENTRYSTATIONNAME, jeb.EXITSTATIONID, bt2.NAME EXITSTATIONNAME, to_char(jeb.ENTRYSTATIONTIME,'yyyy-MM-dd HH24:mi:ss') ENTRYSTATIONTIME, to_char(jeb.EXITSTATIONTIME,'yyyy-MM-dd HH24:mi:ss') EXITSTATIONTIME, jeb.PHYSICALTRUTHSTATUS, jeb.REQUESTDESCRIPTION, jeb.CREATENAME, jeb.CREATEDEPT, jeb.CREATEDEPTNAME, jeb.REQUESTID FROM HW_JZ.JC_ETC_CARD_BLACKLIST@DB_LINK3628 jeb LEFT JOIN (SELECT x.* FROM HW_JZ.BASIC_BASICINFODOWN_RES@DB_LINK3628 x WHERE x.downid = '27412820' AND x.TYPE = '1') bt1 ON bt1.ID = jeb.ENTRYSTATIONID LEFT JOIN (SELECT x.* FROM HW_JZ.BASIC_BASICINFODOWN_RES@DB_LINK3628 x WHERE x.downid = '27412820' AND x.TYPE = '1') bt2 ON bt2.ID = jeb.EXITSTATIONID left join etc_system_code@db_link_2310etc esc on esc.codevalue=jeb.ICCISSUER and typeid=62 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS s2 ON jeb.VEHICLECOLOR = s2.ENUM_VALUE and s2.ENUM_ID = 39 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed1 ON sed1.ENUM_VALUE = jeb.ELUDEMONEYTYPE AND sed1.ENUM_ID = 87 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed2 ON sed2.ENUM_VALUE = jeb.ELUDEMONEYTYPEITEM AND sed2.ENUM_ID = 88 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed3 ON sed3.ENUM_VALUE = jeb.ELUDEMONEYTYPEITEM AND sed3.ENUM_ID = 89 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed4 ON sed4.ENUM_VALUE = jeb.ELUDEMONEYTYPEITEM AND sed4.ENUM_ID = 90 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed5 ON sed5.ENUM_VALUE = jeb.ELUDEMONEYTYPEITEM AND sed5.ENUM_ID = 91 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed6 ON sed6.ENUM_VALUE = jeb.CARTYPE AND sed6.ENUM_ID = 40 WHERE jeb.BLACKTYPE = 5 AND ( jeb.CPUCARDID LIKE CONCAT( ?, '%' ) OR jeb.OBUID LIKE CONCAT( ?, '%' ) OR jeb.VEHICLELICENSE LIKE '%' || ? || '%') ORDER BY jeb.CREATETIME DESC 
2020/12/23-11:09:09 [http-nio-317-exec-6] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.OwerMapper.findEtcBlackList-[159] ==> Parameters: 津B55633(String), 津B55633(String), 津B55633(String)
2020/12/23-11:09:09 [http-nio-317-exec-6] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.OwerMapper.findEtcBlackList-[159] <==      Total: 0
2020/12/23-11:12:01 [http-nio-317-exec-1] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[32] 方法执行前执行。。。。。before
2020/12/23-11:12:01 [http-nio-317-exec-1] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[33] <============================================
2020/12/23-11:12:01 [http-nio-317-exec-1] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[34] 请求来源： =》192.168.3.5
2020/12/23-11:12:01 [http-nio-317-exec-1] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[35] 请求URL：=》/JC/APP/getNewVersionFilePath
2020/12/23-11:12:01 [http-nio-317-exec-1] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[36] 请求方式：=》POST
2020/12/23-11:12:01 [http-nio-317-exec-1] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[37] 响应方法：=》com.tuozhi.zhlw.admin.jcApp.controller.JCAppETCCardController.getNewVersionFilePath
2020/12/23-11:12:01 [http-nio-317-exec-1] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[38] 请求参数：=》[]
2020/12/23-11:12:01 [http-nio-317-exec-1] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.JCAppETCCardMapper.getNewVersionFilePath-[159] ==>  Preparing: SELECT VERSION,URLPATH FROM CD_JC.JC_APP_VERSION where rownum=1 ORDER BY VERSION desc 
2020/12/23-11:12:01 [http-nio-317-exec-1] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.JCAppETCCardMapper.getNewVersionFilePath-[159] ==> Parameters: 
2020/12/23-11:12:01 [http-nio-317-exec-1] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.JCAppETCCardMapper.getNewVersionFilePath-[159] <==      Total: 1
2020/12/23-11:12:44 [http-nio-317-exec-2] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[32] 方法执行前执行。。。。。before
2020/12/23-11:12:44 [http-nio-317-exec-2] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[33] <============================================
2020/12/23-11:12:44 [http-nio-317-exec-2] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[34] 请求来源： =》192.168.3.5
2020/12/23-11:12:44 [http-nio-317-exec-2] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[35] 请求URL：=》/JC/APP/findEtcBlackList
2020/12/23-11:12:44 [http-nio-317-exec-2] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[36] 请求方式：=》POST
2020/12/23-11:12:44 [http-nio-317-exec-2] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[37] 响应方法：=》com.tuozhi.zhlw.admin.jcApp.controller.OwerController.findEtcBlackList
2020/12/23-11:12:44 [http-nio-317-exec-2] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[38] 请求参数：=》[津C7W056]
2020/12/23-11:12:49 [http-nio-317-exec-2] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.OwerMapper.findEtcBlackList-[159] ==>  Preparing: SELECT jeb.RCARDTYPE, jeb.ICCISSUER, esc.codename iccIssuerName, jeb.CPUCARDID, jeb.VEHICLELICENSE, decode(jeb.BLACKLISTTYPE,1,'白名单',5,'黑名单','')BLACKLISTTYPE, to_char(jeb.CREATETIME,'yyyy-MM-dd HH24:mi:ss') CREATETIME, jeb.AVT_ID, decode(jeb.FLAG,1,'已下发',0,'未下发')FLAG, jeb.TIME, decode(jeb.DELETEFLAG,1,'已下发',0,'未下发','此卡已消失/已入黑') DELETEFLAG, to_char(jeb.DELETETIME,'yyyy-MM-dd HH24:mi:ss') DELETETIME, jeb.DEVVEHICLELICENSE, sed1.ENUM_NAME ELUDEMONEYTYPE, CASE WHEN jeb.ELUDEMONEYTYPE = 1001 THEN sed2.ENUM_NAME WHEN jeb.ELUDEMONEYTYPE = 1002 THEN sed3.ENUM_NAME WHEN jeb.ELUDEMONEYTYPE = 1003 THEN sed4.ENUM_NAME WHEN jeb.ELUDEMONEYTYPE = 1004 THEN sed5.ENUM_NAME END ELUDEMONEYTYPEITEM, s2.enum_name VEHICLECOLOR, sed6.enum_name CARTYPE, jeb.BLACKTYPE, to_char(jeb.RECOVERTIME,'yyyy-MM-dd HH24:mi:ss') RECOVERTIME, jeb.SUMMONENY, jeb.SUMTOTAL, jeb.OBUID, jeb.ENTRYSTATIONID, bt1.NAME ENTRYSTATIONNAME, jeb.EXITSTATIONID, bt2.NAME EXITSTATIONNAME, to_char(jeb.ENTRYSTATIONTIME,'yyyy-MM-dd HH24:mi:ss') ENTRYSTATIONTIME, to_char(jeb.EXITSTATIONTIME,'yyyy-MM-dd HH24:mi:ss') EXITSTATIONTIME, jeb.PHYSICALTRUTHSTATUS, jeb.REQUESTDESCRIPTION, jeb.CREATENAME, jeb.CREATEDEPT, jeb.CREATEDEPTNAME, jeb.REQUESTID FROM HW_JZ.JC_ETC_CARD_BLACKLIST@DB_LINK3628 jeb LEFT JOIN (SELECT x.* FROM HW_JZ.BASIC_BASICINFODOWN_RES@DB_LINK3628 x WHERE x.downid = '27412820' AND x.TYPE = '1') bt1 ON bt1.ID = jeb.ENTRYSTATIONID LEFT JOIN (SELECT x.* FROM HW_JZ.BASIC_BASICINFODOWN_RES@DB_LINK3628 x WHERE x.downid = '27412820' AND x.TYPE = '1') bt2 ON bt2.ID = jeb.EXITSTATIONID left join etc_system_code@db_link_2310etc esc on esc.codevalue=jeb.ICCISSUER and typeid=62 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS s2 ON jeb.VEHICLECOLOR = s2.ENUM_VALUE and s2.ENUM_ID = 39 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed1 ON sed1.ENUM_VALUE = jeb.ELUDEMONEYTYPE AND sed1.ENUM_ID = 87 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed2 ON sed2.ENUM_VALUE = jeb.ELUDEMONEYTYPEITEM AND sed2.ENUM_ID = 88 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed3 ON sed3.ENUM_VALUE = jeb.ELUDEMONEYTYPEITEM AND sed3.ENUM_ID = 89 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed4 ON sed4.ENUM_VALUE = jeb.ELUDEMONEYTYPEITEM AND sed4.ENUM_ID = 90 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed5 ON sed5.ENUM_VALUE = jeb.ELUDEMONEYTYPEITEM AND sed5.ENUM_ID = 91 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed6 ON sed6.ENUM_VALUE = jeb.CARTYPE AND sed6.ENUM_ID = 40 WHERE jeb.BLACKTYPE = 5 AND ( jeb.CPUCARDID LIKE CONCAT( ?, '%' ) OR jeb.OBUID LIKE CONCAT( ?, '%' ) OR jeb.VEHICLELICENSE LIKE '%' || ? || '%') ORDER BY jeb.CREATETIME DESC 
2020/12/23-11:12:49 [http-nio-317-exec-2] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.OwerMapper.findEtcBlackList-[159] ==> Parameters: 津C7W056(String), 津C7W056(String), 津C7W056(String)
2020/12/23-11:12:49 [http-nio-317-exec-2] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.OwerMapper.findEtcBlackList-[159] <==      Total: 1
2020/12/23-11:13:00 [http-nio-317-exec-3] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[32] 方法执行前执行。。。。。before
2020/12/23-11:13:00 [http-nio-317-exec-3] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[33] <============================================
2020/12/23-11:13:00 [http-nio-317-exec-3] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[34] 请求来源： =》192.168.3.5
2020/12/23-11:13:00 [http-nio-317-exec-3] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[35] 请求URL：=》/JC/APP/getEtcCardBlackList
2020/12/23-11:13:00 [http-nio-317-exec-3] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[36] 请求方式：=》POST
2020/12/23-11:13:00 [http-nio-317-exec-3] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[37] 响应方法：=》com.tuozhi.zhlw.admin.jcApp.controller.JCAuditStatusController.getEtcCardBlackList
2020/12/23-11:13:00 [http-nio-317-exec-3] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[38] 请求参数：=》[津C7W056]
2020/12/23-11:13:00 [http-nio-317-exec-3] DEBUG com.tuozhi.zhlw.admin.jc.mapper.EtcCardBlackListMapper.findAll-[159] ==>  Preparing: select t.REQUESTORDERID, sed.enum_name OICARUSERTYPE, ttt.OICARTONNAGE, ttt.OICARAXIES, ttt.OICARWIDTH, ttt.OICARLENGTH, ttt.OIHEADSTOCKHEIGHT, to_char(t.saledate, 'yyyy-mm-dd HH24:mi:ss') saledate, t.cpucardid cpucardid, ttt.oiid oiid, s.codename codename, t.plateno plateno, s1.codename cardvehiclecolor, s2.codename cardvehicletype, decode(t.cardstate, 1,'待激活', 3, '发行', 4, '挂失', 5,'黑名单（欠费）', 6, '无卡挂起', 7,'有卡挂起',8,'无卡注销', 9, '有卡注销' ) cardstate, bc.codename cardblacklisttype, to_char(bc.createdate, 'yyyy-mm-dd hh24:mi:ss') createdate, ttt.oiplateno oiplateno, ttt.oiplatecolor oiplatecolor, ttt.oicarcategory oicarcategory, decode(ttt.oistate, 3, '在用', 4, '挂失', 6, '车型不符', 9, '注销', '不可用') oistate, t.ownername ownername, i.ciclientname as ciclientname, i.cimobile as cimobile, i.citel citel, i.ciidcard ciidcard, i.cilinkman cilinkman, t.clientid clientid, ebo.OFFICENAME, su.username, eocrt.oiid oiidtemp, evi.approvedcount, (select to_char(max(aecr.avt_inserttime), 'yyyy-mm-dd HH24:mi:ss') from avt_etc_card_client_rel@db_link_2310etc aecr where aecr.plateno=t.plateno and aecr.platenocolor=t.platenocolor) aecrsaledate, (select to_char(max(aeocr.avt_inserttime), 'yyyy-mm-dd HH24:mi:ss') from avt_etc_obu_client_rel@db_link_2310etc aeocr where aeocr.oiplateno=t.plateno and aeocr.oiplatecolor=t.platenocolor) aeocrsaledate from etc_card_client_rel@db_link_2310etc t left join etc_vehicle_info@db_link_2310etc evi on evi.plateno=t.plateno and evi.platenocolor=t.platenocolor left join ETC_OBU_CLIENT_REL_TEMP@db_link_2310etc eocrt on eocrt.oiplateno=t.plateno left join ETC_BUSINESS_OFFICE@db_link_2310etc ebo on t.OFFICEID=ebo.id left join etcv3_sys_user@db_link_2310etc su on t.userid=su.id left join etc_client_info@db_link_2310etc i on t.clientid = i.id left join (select tt.oiid, tt.oiplateno, o1.codename as oiplatecolor, o2.codename as oicarcategory, tt.oistate, tt.oiplatecolor as platecolor, tt.OICARTONNAGE, tt.OICARUSERTYPE, tt.OICARAXIES, tt.OICARWIDTH, tt.OICARLENGTH, tt.OIHEADSTOCKHEIGHT from etc_obu_client_rel@db_link_2310etc tt left join etc_system_code@db_link_2310etc o1 on o1.codevalue = tt.oiplatecolor and o1.typeid = 12 left join etc_system_code@db_link_2310etc o2 on o2.codevalue = tt.oicarcategory and o2.typeid = 13) ttt on ttt.oiplateno = t.plateno and ttt.platecolor = t.platenocolor left join (select b.cpucardid, b.createdate, bs.codename from etc_card_blacklist@db_link_2310etc b left join etc_system_code@db_link_2310etc bs on b.blacklisttype = bs.codevalue and bs.typeid = 43) bc on t.cpucardid = bc.cpucardid left join etc_system_code@db_link_2310etc s on s.codevalue = nvl(t.sendid, '1001002210001001') and s.typeid = 62 left join etc_system_code@db_link_2310etc s1 on s1.codevalue = t.platenocolor and s1.typeid = 12 left join etc_system_code@db_link_2310etc s2 on s2.codevalue = t.carcategory and s2.typeid = 13 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed ON ttt.OICARUSERTYPE = sed.ENUM_VALUE and sed.ENUM_ID = 41 WHERE t.plateno =? OR t.CPUCARDID=? 
2020/12/23-11:13:00 [http-nio-317-exec-3] DEBUG com.tuozhi.zhlw.admin.jc.mapper.EtcCardBlackListMapper.findAll-[159] ==> Parameters: 津C7W056(String), 津C7W056(String)
2020/12/23-11:13:03 [http-nio-317-exec-3] DEBUG com.tuozhi.zhlw.admin.jc.mapper.EtcCardBlackListMapper.findAll-[159] <==      Total: 1
2020/12/23-11:13:55 [http-nio-317-exec-4] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[32] 方法执行前执行。。。。。before
2020/12/23-11:13:55 [http-nio-317-exec-4] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[33] <============================================
2020/12/23-11:13:55 [http-nio-317-exec-4] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[34] 请求来源： =》192.168.3.5
2020/12/23-11:13:55 [http-nio-317-exec-4] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[35] 请求URL：=》/JC/APP/getEtcCardBlackList
2020/12/23-11:13:55 [http-nio-317-exec-4] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[36] 请求方式：=》POST
2020/12/23-11:13:55 [http-nio-317-exec-4] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[37] 响应方法：=》com.tuozhi.zhlw.admin.jcApp.controller.JCAuditStatusController.getEtcCardBlackList
2020/12/23-11:13:55 [http-nio-317-exec-4] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[38] 请求参数：=》[津C7W056]
2020/12/23-11:13:55 [http-nio-317-exec-4] DEBUG com.tuozhi.zhlw.admin.jc.mapper.EtcCardBlackListMapper.findAll-[159] ==>  Preparing: select t.REQUESTORDERID, sed.enum_name OICARUSERTYPE, ttt.OICARTONNAGE, ttt.OICARAXIES, ttt.OICARWIDTH, ttt.OICARLENGTH, ttt.OIHEADSTOCKHEIGHT, to_char(t.saledate, 'yyyy-mm-dd HH24:mi:ss') saledate, t.cpucardid cpucardid, ttt.oiid oiid, s.codename codename, t.plateno plateno, s1.codename cardvehiclecolor, s2.codename cardvehicletype, decode(t.cardstate, 1,'待激活', 3, '发行', 4, '挂失', 5,'黑名单（欠费）', 6, '无卡挂起', 7,'有卡挂起',8,'无卡注销', 9, '有卡注销' ) cardstate, bc.codename cardblacklisttype, to_char(bc.createdate, 'yyyy-mm-dd hh24:mi:ss') createdate, ttt.oiplateno oiplateno, ttt.oiplatecolor oiplatecolor, ttt.oicarcategory oicarcategory, decode(ttt.oistate, 3, '在用', 4, '挂失', 6, '车型不符', 9, '注销', '不可用') oistate, t.ownername ownername, i.ciclientname as ciclientname, i.cimobile as cimobile, i.citel citel, i.ciidcard ciidcard, i.cilinkman cilinkman, t.clientid clientid, ebo.OFFICENAME, su.username, eocrt.oiid oiidtemp, evi.approvedcount, (select to_char(max(aecr.avt_inserttime), 'yyyy-mm-dd HH24:mi:ss') from avt_etc_card_client_rel@db_link_2310etc aecr where aecr.plateno=t.plateno and aecr.platenocolor=t.platenocolor) aecrsaledate, (select to_char(max(aeocr.avt_inserttime), 'yyyy-mm-dd HH24:mi:ss') from avt_etc_obu_client_rel@db_link_2310etc aeocr where aeocr.oiplateno=t.plateno and aeocr.oiplatecolor=t.platenocolor) aeocrsaledate from etc_card_client_rel@db_link_2310etc t left join etc_vehicle_info@db_link_2310etc evi on evi.plateno=t.plateno and evi.platenocolor=t.platenocolor left join ETC_OBU_CLIENT_REL_TEMP@db_link_2310etc eocrt on eocrt.oiplateno=t.plateno left join ETC_BUSINESS_OFFICE@db_link_2310etc ebo on t.OFFICEID=ebo.id left join etcv3_sys_user@db_link_2310etc su on t.userid=su.id left join etc_client_info@db_link_2310etc i on t.clientid = i.id left join (select tt.oiid, tt.oiplateno, o1.codename as oiplatecolor, o2.codename as oicarcategory, tt.oistate, tt.oiplatecolor as platecolor, tt.OICARTONNAGE, tt.OICARUSERTYPE, tt.OICARAXIES, tt.OICARWIDTH, tt.OICARLENGTH, tt.OIHEADSTOCKHEIGHT from etc_obu_client_rel@db_link_2310etc tt left join etc_system_code@db_link_2310etc o1 on o1.codevalue = tt.oiplatecolor and o1.typeid = 12 left join etc_system_code@db_link_2310etc o2 on o2.codevalue = tt.oicarcategory and o2.typeid = 13) ttt on ttt.oiplateno = t.plateno and ttt.platecolor = t.platenocolor left join (select b.cpucardid, b.createdate, bs.codename from etc_card_blacklist@db_link_2310etc b left join etc_system_code@db_link_2310etc bs on b.blacklisttype = bs.codevalue and bs.typeid = 43) bc on t.cpucardid = bc.cpucardid left join etc_system_code@db_link_2310etc s on s.codevalue = nvl(t.sendid, '1001002210001001') and s.typeid = 62 left join etc_system_code@db_link_2310etc s1 on s1.codevalue = t.platenocolor and s1.typeid = 12 left join etc_system_code@db_link_2310etc s2 on s2.codevalue = t.carcategory and s2.typeid = 13 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed ON ttt.OICARUSERTYPE = sed.ENUM_VALUE and sed.ENUM_ID = 41 WHERE t.plateno =? OR t.CPUCARDID=? 
2020/12/23-11:13:55 [http-nio-317-exec-4] DEBUG com.tuozhi.zhlw.admin.jc.mapper.EtcCardBlackListMapper.findAll-[159] ==> Parameters: 津C7W056(String), 津C7W056(String)
2020/12/23-11:13:58 [http-nio-317-exec-4] DEBUG com.tuozhi.zhlw.admin.jc.mapper.EtcCardBlackListMapper.findAll-[159] <==      Total: 1
2020/12/23-11:25:07 [http-nio-317-exec-7] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[32] 方法执行前执行。。。。。before
2020/12/23-11:25:07 [http-nio-317-exec-7] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[33] <============================================
2020/12/23-11:25:07 [http-nio-317-exec-7] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[34] 请求来源： =》192.168.3.5
2020/12/23-11:25:07 [http-nio-317-exec-7] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[35] 请求URL：=》/JC/APP/getNewVersionFilePath
2020/12/23-11:25:07 [http-nio-317-exec-7] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[36] 请求方式：=》POST
2020/12/23-11:25:07 [http-nio-317-exec-7] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[37] 响应方法：=》com.tuozhi.zhlw.admin.jcApp.controller.JCAppETCCardController.getNewVersionFilePath
2020/12/23-11:25:07 [http-nio-317-exec-7] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[38] 请求参数：=》[]
2020/12/23-11:25:07 [http-nio-317-exec-7] ERROR com.alibaba.druid.util.JdbcUtils-[102] close statement error
java.sql.SQLRecoverableException: 关闭的连接
	at oracle.jdbc.driver.PhysicalConnection.needLine(PhysicalConnection.java:4216)
	at oracle.jdbc.driver.OracleStatement.closeOrCache(OracleStatement.java:1431)
	at oracle.jdbc.driver.OracleStatement.close(OracleStatement.java:1410)
	at oracle.jdbc.driver.OracleStatementWrapper.close(OracleStatementWrapper.java:102)
	at com.alibaba.druid.util.JdbcUtils.close(JdbcUtils.java:100)
	at com.alibaba.druid.pool.vendor.OracleValidConnectionChecker.isValidConnection(OracleValidConnectionChecker.java:88)
	at com.alibaba.druid.pool.DruidAbstractDataSource.testConnectionInternal(DruidAbstractDataSource.java:1463)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1446)
	at com.alibaba.druid.filter.FilterChainImpl.dataSource_connect(FilterChainImpl.java:5059)
	at com.alibaba.druid.filter.stat.StatFilter.dataSource_getConnection(StatFilter.java:680)
	at com.alibaba.druid.filter.FilterChainImpl.dataSource_connect(FilterChainImpl.java:5055)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1373)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1365)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:109)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	at org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:82)
	at org.mybatis.spring.transaction.SpringManagedTransaction.getConnection(SpringManagedTransaction.java:68)
	at org.apache.ibatis.executor.BaseExecutor.getConnection(BaseExecutor.java:338)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:84)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:326)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.github.pagehelper.PageInterceptor.intercept(PageInterceptor.java:111)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy223.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:77)
	at sun.reflect.GeneratedMethodAccessor184.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	at com.sun.proxy.$Proxy134.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:166)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:83)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy208.getNewVersionFilePath(Unknown Source)
	at com.tuozhi.zhlw.admin.jcApp.service.impl.JCAppETCCardServiceImpl.getNewVersionFilePath(JCAppETCCardServiceImpl.java:66)
	at com.tuozhi.zhlw.admin.jcApp.controller.JCAppETCCardController.getNewVersionFilePath(JCAppETCCardController.java:252)
	at com.tuozhi.zhlw.admin.jcApp.controller.JCAppETCCardController$$FastClassBySpringCGLIB$$466c7024.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at com.tuozhi.zhlw.admin.jcApp.controller.JCAppETCCardController$$EnhancerBySpringCGLIB$$8867fbbe.getNewVersionFilePath(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.tuozhi.zhlw.admin.config.CorsFilter.doFilter(CorsFilter.java:29)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2020/12/23-11:25:07 [http-nio-317-exec-7] ERROR com.alibaba.druid.util.JdbcUtils-[102] close statement error
java.sql.SQLRecoverableException: 关闭的连接
	at oracle.jdbc.driver.PhysicalConnection.needLine(PhysicalConnection.java:4216)
	at oracle.jdbc.driver.OracleStatement.closeOrCache(OracleStatement.java:1431)
	at oracle.jdbc.driver.OracleStatement.close(OracleStatement.java:1410)
	at oracle.jdbc.driver.OracleStatementWrapper.close(OracleStatementWrapper.java:102)
	at com.alibaba.druid.util.JdbcUtils.close(JdbcUtils.java:100)
	at com.alibaba.druid.pool.vendor.OracleValidConnectionChecker.isValidConnection(OracleValidConnectionChecker.java:88)
	at com.alibaba.druid.pool.DruidAbstractDataSource.testConnectionInternal(DruidAbstractDataSource.java:1463)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1446)
	at com.alibaba.druid.filter.FilterChainImpl.dataSource_connect(FilterChainImpl.java:5059)
	at com.alibaba.druid.filter.stat.StatFilter.dataSource_getConnection(StatFilter.java:680)
	at com.alibaba.druid.filter.FilterChainImpl.dataSource_connect(FilterChainImpl.java:5055)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1373)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1365)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:109)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	at org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:82)
	at org.mybatis.spring.transaction.SpringManagedTransaction.getConnection(SpringManagedTransaction.java:68)
	at org.apache.ibatis.executor.BaseExecutor.getConnection(BaseExecutor.java:338)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:84)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:326)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.github.pagehelper.PageInterceptor.intercept(PageInterceptor.java:111)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy223.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:77)
	at sun.reflect.GeneratedMethodAccessor184.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	at com.sun.proxy.$Proxy134.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:166)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:83)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy208.getNewVersionFilePath(Unknown Source)
	at com.tuozhi.zhlw.admin.jcApp.service.impl.JCAppETCCardServiceImpl.getNewVersionFilePath(JCAppETCCardServiceImpl.java:66)
	at com.tuozhi.zhlw.admin.jcApp.controller.JCAppETCCardController.getNewVersionFilePath(JCAppETCCardController.java:252)
	at com.tuozhi.zhlw.admin.jcApp.controller.JCAppETCCardController$$FastClassBySpringCGLIB$$466c7024.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at com.tuozhi.zhlw.admin.jcApp.controller.JCAppETCCardController$$EnhancerBySpringCGLIB$$8867fbbe.getNewVersionFilePath(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.tuozhi.zhlw.admin.config.CorsFilter.doFilter(CorsFilter.java:29)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2020/12/23-11:25:07 [http-nio-317-exec-7] ERROR com.alibaba.druid.util.JdbcUtils-[102] close statement error
java.sql.SQLRecoverableException: 关闭的连接
	at oracle.jdbc.driver.PhysicalConnection.needLine(PhysicalConnection.java:4216)
	at oracle.jdbc.driver.OracleStatement.closeOrCache(OracleStatement.java:1431)
	at oracle.jdbc.driver.OracleStatement.close(OracleStatement.java:1410)
	at oracle.jdbc.driver.OracleStatementWrapper.close(OracleStatementWrapper.java:102)
	at com.alibaba.druid.util.JdbcUtils.close(JdbcUtils.java:100)
	at com.alibaba.druid.pool.vendor.OracleValidConnectionChecker.isValidConnection(OracleValidConnectionChecker.java:88)
	at com.alibaba.druid.pool.DruidAbstractDataSource.testConnectionInternal(DruidAbstractDataSource.java:1463)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1446)
	at com.alibaba.druid.filter.FilterChainImpl.dataSource_connect(FilterChainImpl.java:5059)
	at com.alibaba.druid.filter.stat.StatFilter.dataSource_getConnection(StatFilter.java:680)
	at com.alibaba.druid.filter.FilterChainImpl.dataSource_connect(FilterChainImpl.java:5055)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1373)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1365)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:109)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	at org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:82)
	at org.mybatis.spring.transaction.SpringManagedTransaction.getConnection(SpringManagedTransaction.java:68)
	at org.apache.ibatis.executor.BaseExecutor.getConnection(BaseExecutor.java:338)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:84)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:326)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.github.pagehelper.PageInterceptor.intercept(PageInterceptor.java:111)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy223.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:77)
	at sun.reflect.GeneratedMethodAccessor184.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	at com.sun.proxy.$Proxy134.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:166)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:83)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy208.getNewVersionFilePath(Unknown Source)
	at com.tuozhi.zhlw.admin.jcApp.service.impl.JCAppETCCardServiceImpl.getNewVersionFilePath(JCAppETCCardServiceImpl.java:66)
	at com.tuozhi.zhlw.admin.jcApp.controller.JCAppETCCardController.getNewVersionFilePath(JCAppETCCardController.java:252)
	at com.tuozhi.zhlw.admin.jcApp.controller.JCAppETCCardController$$FastClassBySpringCGLIB$$466c7024.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at com.tuozhi.zhlw.admin.jcApp.controller.JCAppETCCardController$$EnhancerBySpringCGLIB$$8867fbbe.getNewVersionFilePath(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.tuozhi.zhlw.admin.config.CorsFilter.doFilter(CorsFilter.java:29)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2020/12/23-11:25:07 [http-nio-317-exec-7] ERROR com.alibaba.druid.util.JdbcUtils-[102] close statement error
java.sql.SQLRecoverableException: 关闭的连接
	at oracle.jdbc.driver.PhysicalConnection.needLine(PhysicalConnection.java:4216)
	at oracle.jdbc.driver.OracleStatement.closeOrCache(OracleStatement.java:1431)
	at oracle.jdbc.driver.OracleStatement.close(OracleStatement.java:1410)
	at oracle.jdbc.driver.OracleStatementWrapper.close(OracleStatementWrapper.java:102)
	at com.alibaba.druid.util.JdbcUtils.close(JdbcUtils.java:100)
	at com.alibaba.druid.pool.vendor.OracleValidConnectionChecker.isValidConnection(OracleValidConnectionChecker.java:88)
	at com.alibaba.druid.pool.DruidAbstractDataSource.testConnectionInternal(DruidAbstractDataSource.java:1463)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1446)
	at com.alibaba.druid.filter.FilterChainImpl.dataSource_connect(FilterChainImpl.java:5059)
	at com.alibaba.druid.filter.stat.StatFilter.dataSource_getConnection(StatFilter.java:680)
	at com.alibaba.druid.filter.FilterChainImpl.dataSource_connect(FilterChainImpl.java:5055)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1373)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1365)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:109)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	at org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:82)
	at org.mybatis.spring.transaction.SpringManagedTransaction.getConnection(SpringManagedTransaction.java:68)
	at org.apache.ibatis.executor.BaseExecutor.getConnection(BaseExecutor.java:338)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:84)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:326)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.github.pagehelper.PageInterceptor.intercept(PageInterceptor.java:111)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy223.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:77)
	at sun.reflect.GeneratedMethodAccessor184.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	at com.sun.proxy.$Proxy134.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:166)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:83)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy208.getNewVersionFilePath(Unknown Source)
	at com.tuozhi.zhlw.admin.jcApp.service.impl.JCAppETCCardServiceImpl.getNewVersionFilePath(JCAppETCCardServiceImpl.java:66)
	at com.tuozhi.zhlw.admin.jcApp.controller.JCAppETCCardController.getNewVersionFilePath(JCAppETCCardController.java:252)
	at com.tuozhi.zhlw.admin.jcApp.controller.JCAppETCCardController$$FastClassBySpringCGLIB$$466c7024.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at com.tuozhi.zhlw.admin.jcApp.controller.JCAppETCCardController$$EnhancerBySpringCGLIB$$8867fbbe.getNewVersionFilePath(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.tuozhi.zhlw.admin.config.CorsFilter.doFilter(CorsFilter.java:29)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2020/12/23-11:25:07 [http-nio-317-exec-7] ERROR com.alibaba.druid.util.JdbcUtils-[102] close statement error
java.sql.SQLRecoverableException: 关闭的连接
	at oracle.jdbc.driver.PhysicalConnection.needLine(PhysicalConnection.java:4216)
	at oracle.jdbc.driver.OracleStatement.closeOrCache(OracleStatement.java:1431)
	at oracle.jdbc.driver.OracleStatement.close(OracleStatement.java:1410)
	at oracle.jdbc.driver.OracleStatementWrapper.close(OracleStatementWrapper.java:102)
	at com.alibaba.druid.util.JdbcUtils.close(JdbcUtils.java:100)
	at com.alibaba.druid.pool.vendor.OracleValidConnectionChecker.isValidConnection(OracleValidConnectionChecker.java:88)
	at com.alibaba.druid.pool.DruidAbstractDataSource.testConnectionInternal(DruidAbstractDataSource.java:1463)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1446)
	at com.alibaba.druid.filter.FilterChainImpl.dataSource_connect(FilterChainImpl.java:5059)
	at com.alibaba.druid.filter.stat.StatFilter.dataSource_getConnection(StatFilter.java:680)
	at com.alibaba.druid.filter.FilterChainImpl.dataSource_connect(FilterChainImpl.java:5055)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1373)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1365)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:109)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	at org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:82)
	at org.mybatis.spring.transaction.SpringManagedTransaction.getConnection(SpringManagedTransaction.java:68)
	at org.apache.ibatis.executor.BaseExecutor.getConnection(BaseExecutor.java:338)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:84)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:326)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.github.pagehelper.PageInterceptor.intercept(PageInterceptor.java:111)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy223.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:77)
	at sun.reflect.GeneratedMethodAccessor184.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	at com.sun.proxy.$Proxy134.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:166)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:83)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy208.getNewVersionFilePath(Unknown Source)
	at com.tuozhi.zhlw.admin.jcApp.service.impl.JCAppETCCardServiceImpl.getNewVersionFilePath(JCAppETCCardServiceImpl.java:66)
	at com.tuozhi.zhlw.admin.jcApp.controller.JCAppETCCardController.getNewVersionFilePath(JCAppETCCardController.java:252)
	at com.tuozhi.zhlw.admin.jcApp.controller.JCAppETCCardController$$FastClassBySpringCGLIB$$466c7024.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at com.tuozhi.zhlw.admin.jcApp.controller.JCAppETCCardController$$EnhancerBySpringCGLIB$$8867fbbe.getNewVersionFilePath(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.tuozhi.zhlw.admin.config.CorsFilter.doFilter(CorsFilter.java:29)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2020/12/23-11:25:07 [http-nio-317-exec-7] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.JCAppETCCardMapper.getNewVersionFilePath-[159] ==>  Preparing: SELECT VERSION,URLPATH FROM CD_JC.JC_APP_VERSION where rownum=1 ORDER BY VERSION desc 
2020/12/23-11:25:07 [http-nio-317-exec-7] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.JCAppETCCardMapper.getNewVersionFilePath-[159] ==> Parameters: 
2020/12/23-11:25:07 [http-nio-317-exec-7] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.JCAppETCCardMapper.getNewVersionFilePath-[159] <==      Total: 1
2020/12/23-11:25:14 [http-nio-317-exec-9] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[32] 方法执行前执行。。。。。before
2020/12/23-11:25:14 [http-nio-317-exec-9] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[33] <============================================
2020/12/23-11:25:14 [http-nio-317-exec-9] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[34] 请求来源： =》192.168.3.5
2020/12/23-11:25:14 [http-nio-317-exec-9] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[35] 请求URL：=》/JC/APP/findEtcBlackList
2020/12/23-11:25:14 [http-nio-317-exec-9] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[36] 请求方式：=》POST
2020/12/23-11:25:14 [http-nio-317-exec-9] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[37] 响应方法：=》com.tuozhi.zhlw.admin.jcApp.controller.OwerController.findEtcBlackList
2020/12/23-11:25:14 [http-nio-317-exec-9] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[38] 请求参数：=》[津C7W056]
2020/12/23-11:25:14 [http-nio-317-exec-9] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.OwerMapper.findEtcBlackList-[159] ==>  Preparing: SELECT jeb.RCARDTYPE, jeb.ICCISSUER, esc.codename iccIssuerName, jeb.CPUCARDID, jeb.VEHICLELICENSE, decode(jeb.BLACKLISTTYPE,1,'白名单',5,'黑名单','')BLACKLISTTYPE, to_char(jeb.CREATETIME,'yyyy-MM-dd HH24:mi:ss') CREATETIME, jeb.AVT_ID, decode(jeb.FLAG,1,'已下发',0,'未下发')FLAG, jeb.TIME, decode(jeb.DELETEFLAG,1,'已下发',0,'未下发','此卡已消失/已入黑') DELETEFLAG, to_char(jeb.DELETETIME,'yyyy-MM-dd HH24:mi:ss') DELETETIME, jeb.DEVVEHICLELICENSE, sed1.ENUM_NAME ELUDEMONEYTYPE, CASE WHEN jeb.ELUDEMONEYTYPE = 1001 THEN sed2.ENUM_NAME WHEN jeb.ELUDEMONEYTYPE = 1002 THEN sed3.ENUM_NAME WHEN jeb.ELUDEMONEYTYPE = 1003 THEN sed4.ENUM_NAME WHEN jeb.ELUDEMONEYTYPE = 1004 THEN sed5.ENUM_NAME END ELUDEMONEYTYPEITEM, s2.enum_name VEHICLECOLOR, sed6.enum_name CARTYPE, jeb.BLACKTYPE, to_char(jeb.RECOVERTIME,'yyyy-MM-dd HH24:mi:ss') RECOVERTIME, jeb.SUMMONENY, jeb.SUMTOTAL, jeb.OBUID, jeb.ENTRYSTATIONID, bt1.NAME ENTRYSTATIONNAME, jeb.EXITSTATIONID, bt2.NAME EXITSTATIONNAME, to_char(jeb.ENTRYSTATIONTIME,'yyyy-MM-dd HH24:mi:ss') ENTRYSTATIONTIME, to_char(jeb.EXITSTATIONTIME,'yyyy-MM-dd HH24:mi:ss') EXITSTATIONTIME, jeb.PHYSICALTRUTHSTATUS, jeb.REQUESTDESCRIPTION, jeb.CREATENAME, jeb.CREATEDEPT, jeb.CREATEDEPTNAME, jeb.REQUESTID FROM HW_JZ.JC_ETC_CARD_BLACKLIST@DB_LINK3628 jeb LEFT JOIN (SELECT x.* FROM HW_JZ.BASIC_BASICINFODOWN_RES@DB_LINK3628 x WHERE x.downid = '27412820' AND x.TYPE = '1') bt1 ON bt1.ID = jeb.ENTRYSTATIONID LEFT JOIN (SELECT x.* FROM HW_JZ.BASIC_BASICINFODOWN_RES@DB_LINK3628 x WHERE x.downid = '27412820' AND x.TYPE = '1') bt2 ON bt2.ID = jeb.EXITSTATIONID left join etc_system_code@db_link_2310etc esc on esc.codevalue=jeb.ICCISSUER and typeid=62 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS s2 ON jeb.VEHICLECOLOR = s2.ENUM_VALUE and s2.ENUM_ID = 39 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed1 ON sed1.ENUM_VALUE = jeb.ELUDEMONEYTYPE AND sed1.ENUM_ID = 87 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed2 ON sed2.ENUM_VALUE = jeb.ELUDEMONEYTYPEITEM AND sed2.ENUM_ID = 88 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed3 ON sed3.ENUM_VALUE = jeb.ELUDEMONEYTYPEITEM AND sed3.ENUM_ID = 89 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed4 ON sed4.ENUM_VALUE = jeb.ELUDEMONEYTYPEITEM AND sed4.ENUM_ID = 90 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed5 ON sed5.ENUM_VALUE = jeb.ELUDEMONEYTYPEITEM AND sed5.ENUM_ID = 91 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed6 ON sed6.ENUM_VALUE = jeb.CARTYPE AND sed6.ENUM_ID = 40 WHERE jeb.BLACKTYPE = 5 AND ( jeb.CPUCARDID LIKE CONCAT( ?, '%' ) OR jeb.OBUID LIKE CONCAT( ?, '%' ) OR jeb.VEHICLELICENSE LIKE '%' || ? || '%') ORDER BY jeb.CREATETIME DESC 
2020/12/23-11:25:14 [http-nio-317-exec-9] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.OwerMapper.findEtcBlackList-[159] ==> Parameters: 津C7W056(String), 津C7W056(String), 津C7W056(String)
2020/12/23-11:25:15 [http-nio-317-exec-9] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.OwerMapper.findEtcBlackList-[159] <==      Total: 1
2020/12/23-11:25:16 [http-nio-317-exec-8] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[32] 方法执行前执行。。。。。before
2020/12/23-11:25:16 [http-nio-317-exec-8] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[33] <============================================
2020/12/23-11:25:16 [http-nio-317-exec-8] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[34] 请求来源： =》192.168.3.5
2020/12/23-11:25:16 [http-nio-317-exec-8] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[35] 请求URL：=》/JC/APP/getEtcCardBlackList
2020/12/23-11:25:16 [http-nio-317-exec-8] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[36] 请求方式：=》POST
2020/12/23-11:25:16 [http-nio-317-exec-8] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[37] 响应方法：=》com.tuozhi.zhlw.admin.jcApp.controller.JCAuditStatusController.getEtcCardBlackList
2020/12/23-11:25:16 [http-nio-317-exec-8] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[38] 请求参数：=》[津C7W056]
2020/12/23-11:25:16 [http-nio-317-exec-8] DEBUG com.tuozhi.zhlw.admin.jc.mapper.EtcCardBlackListMapper.findAll-[159] ==>  Preparing: select t.REQUESTORDERID, sed.enum_name OICARUSERTYPE, ttt.OICARTONNAGE, ttt.OICARAXIES, ttt.OICARWIDTH, ttt.OICARLENGTH, ttt.OIHEADSTOCKHEIGHT, to_char(t.saledate, 'yyyy-mm-dd HH24:mi:ss') saledate, t.cpucardid cpucardid, ttt.oiid oiid, s.codename codename, t.plateno plateno, s1.codename cardvehiclecolor, s2.codename cardvehicletype, decode(t.cardstate, 1,'待激活', 3, '发行', 4, '挂失', 5,'黑名单（欠费）', 6, '无卡挂起', 7,'有卡挂起',8,'无卡注销', 9, '有卡注销' ) cardstate, bc.codename cardblacklisttype, to_char(bc.createdate, 'yyyy-mm-dd hh24:mi:ss') createdate, ttt.oiplateno oiplateno, ttt.oiplatecolor oiplatecolor, ttt.oicarcategory oicarcategory, decode(ttt.oistate, 3, '在用', 4, '挂失', 6, '车型不符', 9, '注销', '不可用') oistate, t.ownername ownername, i.ciclientname as ciclientname, i.cimobile as cimobile, i.citel citel, i.ciidcard ciidcard, i.cilinkman cilinkman, t.clientid clientid, ebo.OFFICENAME, su.username, eocrt.oiid oiidtemp, evi.approvedcount, (select to_char(max(aecr.avt_inserttime), 'yyyy-mm-dd HH24:mi:ss') from avt_etc_card_client_rel@db_link_2310etc aecr where aecr.plateno=t.plateno and aecr.platenocolor=t.platenocolor) aecrsaledate, (select to_char(max(aeocr.avt_inserttime), 'yyyy-mm-dd HH24:mi:ss') from avt_etc_obu_client_rel@db_link_2310etc aeocr where aeocr.oiplateno=t.plateno and aeocr.oiplatecolor=t.platenocolor) aeocrsaledate from etc_card_client_rel@db_link_2310etc t left join etc_vehicle_info@db_link_2310etc evi on evi.plateno=t.plateno and evi.platenocolor=t.platenocolor left join ETC_OBU_CLIENT_REL_TEMP@db_link_2310etc eocrt on eocrt.oiplateno=t.plateno left join ETC_BUSINESS_OFFICE@db_link_2310etc ebo on t.OFFICEID=ebo.id left join etcv3_sys_user@db_link_2310etc su on t.userid=su.id left join etc_client_info@db_link_2310etc i on t.clientid = i.id left join (select tt.oiid, tt.oiplateno, o1.codename as oiplatecolor, o2.codename as oicarcategory, tt.oistate, tt.oiplatecolor as platecolor, tt.OICARTONNAGE, tt.OICARUSERTYPE, tt.OICARAXIES, tt.OICARWIDTH, tt.OICARLENGTH, tt.OIHEADSTOCKHEIGHT from etc_obu_client_rel@db_link_2310etc tt left join etc_system_code@db_link_2310etc o1 on o1.codevalue = tt.oiplatecolor and o1.typeid = 12 left join etc_system_code@db_link_2310etc o2 on o2.codevalue = tt.oicarcategory and o2.typeid = 13) ttt on ttt.oiplateno = t.plateno and ttt.platecolor = t.platenocolor left join (select b.cpucardid, b.createdate, bs.codename from etc_card_blacklist@db_link_2310etc b left join etc_system_code@db_link_2310etc bs on b.blacklisttype = bs.codevalue and bs.typeid = 43) bc on t.cpucardid = bc.cpucardid left join etc_system_code@db_link_2310etc s on s.codevalue = nvl(t.sendid, '1001002210001001') and s.typeid = 62 left join etc_system_code@db_link_2310etc s1 on s1.codevalue = t.platenocolor and s1.typeid = 12 left join etc_system_code@db_link_2310etc s2 on s2.codevalue = t.carcategory and s2.typeid = 13 LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed ON ttt.OICARUSERTYPE = sed.ENUM_VALUE and sed.ENUM_ID = 41 WHERE t.plateno =? OR t.CPUCARDID=? 
2020/12/23-11:25:16 [http-nio-317-exec-8] DEBUG com.tuozhi.zhlw.admin.jc.mapper.EtcCardBlackListMapper.findAll-[159] ==> Parameters: 津C7W056(String), 津C7W056(String)
2020/12/23-11:25:20 [http-nio-317-exec-8] DEBUG com.tuozhi.zhlw.admin.jc.mapper.EtcCardBlackListMapper.findAll-[159] <==      Total: 1
2020/12/23-11:49:46 [http-nio-317-exec-10] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[32] 方法执行前执行。。。。。before
2020/12/23-11:49:46 [http-nio-317-exec-10] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[33] <============================================
2020/12/23-11:49:46 [http-nio-317-exec-10] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[34] 请求来源： =》192.168.3.5
2020/12/23-11:49:46 [http-nio-317-exec-10] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[35] 请求URL：=》/JC/APP/getNewVersionFilePath
2020/12/23-11:49:46 [http-nio-317-exec-10] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[36] 请求方式：=》POST
2020/12/23-11:49:46 [http-nio-317-exec-10] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[37] 响应方法：=》com.tuozhi.zhlw.admin.jcApp.controller.JCAppETCCardController.getNewVersionFilePath
2020/12/23-11:49:46 [http-nio-317-exec-10] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[38] 请求参数：=》[]
2020/12/23-11:49:46 [http-nio-317-exec-10] ERROR com.alibaba.druid.util.JdbcUtils-[102] close statement error
java.sql.SQLRecoverableException: 关闭的连接
	at oracle.jdbc.driver.PhysicalConnection.needLine(PhysicalConnection.java:4216)
	at oracle.jdbc.driver.OracleStatement.closeOrCache(OracleStatement.java:1431)
	at oracle.jdbc.driver.OracleStatement.close(OracleStatement.java:1410)
	at oracle.jdbc.driver.OracleStatementWrapper.close(OracleStatementWrapper.java:102)
	at com.alibaba.druid.util.JdbcUtils.close(JdbcUtils.java:100)
	at com.alibaba.druid.pool.vendor.OracleValidConnectionChecker.isValidConnection(OracleValidConnectionChecker.java:88)
	at com.alibaba.druid.pool.DruidAbstractDataSource.testConnectionInternal(DruidAbstractDataSource.java:1463)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1446)
	at com.alibaba.druid.filter.FilterChainImpl.dataSource_connect(FilterChainImpl.java:5059)
	at com.alibaba.druid.filter.stat.StatFilter.dataSource_getConnection(StatFilter.java:680)
	at com.alibaba.druid.filter.FilterChainImpl.dataSource_connect(FilterChainImpl.java:5055)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1373)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1365)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:109)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	at org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:82)
	at org.mybatis.spring.transaction.SpringManagedTransaction.getConnection(SpringManagedTransaction.java:68)
	at org.apache.ibatis.executor.BaseExecutor.getConnection(BaseExecutor.java:338)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:84)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:326)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.github.pagehelper.PageInterceptor.intercept(PageInterceptor.java:111)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy223.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:77)
	at sun.reflect.GeneratedMethodAccessor184.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	at com.sun.proxy.$Proxy134.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:166)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:83)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy208.getNewVersionFilePath(Unknown Source)
	at com.tuozhi.zhlw.admin.jcApp.service.impl.JCAppETCCardServiceImpl.getNewVersionFilePath(JCAppETCCardServiceImpl.java:66)
	at com.tuozhi.zhlw.admin.jcApp.controller.JCAppETCCardController.getNewVersionFilePath(JCAppETCCardController.java:252)
	at com.tuozhi.zhlw.admin.jcApp.controller.JCAppETCCardController$$FastClassBySpringCGLIB$$466c7024.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at com.tuozhi.zhlw.admin.jcApp.controller.JCAppETCCardController$$EnhancerBySpringCGLIB$$8867fbbe.getNewVersionFilePath(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.tuozhi.zhlw.admin.config.CorsFilter.doFilter(CorsFilter.java:29)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2020/12/23-11:49:47 [http-nio-317-exec-10] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.JCAppETCCardMapper.getNewVersionFilePath-[159] ==>  Preparing: SELECT VERSION,URLPATH FROM CD_JC.JC_APP_VERSION where rownum=1 ORDER BY VERSION desc 
2020/12/23-11:49:47 [http-nio-317-exec-10] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.JCAppETCCardMapper.getNewVersionFilePath-[159] ==> Parameters: 
2020/12/23-11:49:47 [http-nio-317-exec-10] DEBUG com.tuozhi.zhlw.admin.jcApp.mapper.JCAppETCCardMapper.getNewVersionFilePath-[159] <==      Total: 1
2020/12/23-11:52:31 [http-nio-317-exec-2] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[32] 方法执行前执行。。。。。before
2020/12/23-11:52:31 [http-nio-317-exec-2] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[33] <============================================
2020/12/23-11:52:31 [http-nio-317-exec-2] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[34] 请求来源： =》192.168.3.5
2020/12/23-11:52:31 [http-nio-317-exec-2] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[35] 请求URL：=》/JC/APP/getExitPassData
2020/12/23-11:52:31 [http-nio-317-exec-2] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[36] 请求方式：=》POST
2020/12/23-11:52:31 [http-nio-317-exec-2] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[37] 响应方法：=》com.tuozhi.zhlw.admin.jcApp.controller.JCAuditStatusController.getExitPassData
2020/12/23-11:52:31 [http-nio-317-exec-2] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[38] 请求参数：=》[org.apache.catalina.connector.RequestFacade@364d2a38]
2020/12/23-11:52:31 [http-nio-317-exec-2] DEBUG com.tuozhi.zhlw.admin.jc.mapper.ExitPassDataMapper.getTradePassDataByParams-[159] ==>  Preparing: SELECT PASS.EXID, vehicleSignId, PASS.PASSID, cd_system.F_ENUM_MEDIATYPE(PASS.MEDIATYPE) MEDIATYPE, PASS.ENTIME, ROUND(jnw.realfee,2) realfee, ROUND(jnw.owefee,2) owefee, CD_SYSTEM.F_ENUM_VEHICLETYPE(jnw.NEWVEHICLETYPE) as NEWVEHICLETYPE, ROUND(PASS.FEE/100,2) FEE, ROUND(PASS.DISCOUNTFEE/100,2) DISCOUNTFEE, ROUND(PASS.PAYFEE/100,2) PAYFEE, ROUND(PASS.SHORTFEE/100,2) SHORTFEE, PASS.VEHICLELENGTH, PASS.VEHICLEWIDTH, PASS.VEHICLEHIGHT, PASS.EXWEIGHT, PASS.EXAXLECOUNT, decode(PASS.CD_PATHFITTINGCLASS,2,decode(PASS.TRANSPAYTYPE,1,'现金',2,'其他第三方',3,'银联',6,'支付宝',7,'微信',''),3,decode(PASS.TRANSPAYTYPE,1,'出口ETC通行',2,'出口ETC刷卡通行',''),'') paytype, PASS.CD_PATHFITTINGCLASS, PASS.CD_INSERTTIME, PASS.ENTOLLLANEID, PASS.ENPROVINCEID, PASS.CD_PATHFITTINGID, PASS.EXPROVINCEID, PASS.EXTIME, PASS.EXTOLLLANEID, PASS.ENTOLLSTATIONID, PASS.EXTOLLSTATIONID, ENTOLLSTATIONNAME, EXTOLLSTATIONNAME, SECTION.NAME ENSECTIONID, SECTION1.NAME EXSECTIONID, cd_system.F_ENUM_VEHICLE(PASS.ENVEHICLEID) ENVEHICLENAME, cd_system.F_ENUM_VEHICLE(PASS.EXVEHICLEID) EXVEHICLENAME, PASS.EXVEHICLEID, PASS.MEDIANO, PASS.OBUID, CD_SYSTEM.F_ENUM_VEHICLETYPE(PASS.EXVEHICLETYPE) as EXVEHICLETYPE, CD_SYSTEM.F_ENUM_VEHICLECLASS(PASS.EXVEHICLECLASS) as EXVEHICLECLASS, PASS.SPECIALTYPE, CD_SYSTEM.F_ENUM_VEHICLETYPE(PASS.ENVEHICLETYPE) as ENVEHICLETYPE, CD_SYSTEM.F_ENUM_VEHICLECLASS(PASS.ENVEHICLECLASS) as ENVEHICLECLASS, PASS.SECTIONIDGROUP, PASS.CD_ETCDISCOUNTTYPE, PASS.CD_ETCDISCOUNTID, PASS.CD_ETCDISCOUTTIME, PASS.CD_REFITTING, PASS.CD_REFITTINGBYTRADETIME, PROVINCE.PROVINCENAME as ENPROVINCENAME, PROVINCE1.PROVINCENAME as EXPROVINCENAME, PASS.EXITFEETYPE, sed.ENUM_NAME issuerName, ROUND( jnw.allfee,2) allfee, ROUND(jnw.owerfee,2) owerfee, (SELECT to_char(wm_concat( DISTINCT cd_system.F_ENUM_VEHICLETYPE(VEHICLETYPE))) FROM cd_pass.TRANSACTION_PASSTU_DETAIL WHERE PASSID=PASS.passid) FEEVEHICLETYPE FROM "CD_PASS"."TRADE_PASS" PASS left join (SELECT realfee ,owefee,owerfee,allfee,passid,NEWVEHICLETYPE from cd_jc.JC_NEWTRADEPASSVEHICLETYPE) jnw on jnw.passid=pass.passid LEFT JOIN CD_TRADE.BASE_SECTION SECTION ON PASS.ENSECTIONID = SECTION.ID LEFT JOIN CD_TRADE.BASE_SECTION SECTION1 ON PASS.EXSECTIONID = SECTION1.ID LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed ON PASS.issuerId = sed.ENUM_VALUE and sed.ENUM_ID = 20191 LEFT JOIN CD_TRADE.BASE_NETPROVINCE PROVINCE ON PASS.ENPROVINCEID = PROVINCE.PROVINCEID LEFT JOIN CD_TRADE.BASE_NETPROVINCE PROVINCE1 ON PASS.EXPROVINCEID = PROVINCE1.PROVINCEID where PASS.CD_PATHFITTINGCLASS in (2,3) AND (PASS.EXVEHICLEID like ?||'%' or pass.mediano like ?) and PASS.EXTIME>= to_date(?,'yyyy-MM-dd HH24:mi:ss') and PASS.EXTIME<= to_date(?,'yyyy-MM-dd HH24:mi:ss') ORDER BY PASS.EXTIME DESC 
2020/12/23-11:52:31 [http-nio-317-exec-2] DEBUG com.tuozhi.zhlw.admin.jc.mapper.ExitPassDataMapper.getTradePassDataByParams-[159] ==> Parameters: 津C67D68(String), 津C67D68(String), 2020-11-30 11:51:45(String), 2020-12-23 11:51:45(String)
2020/12/23-11:52:34 [http-nio-317-exec-2] DEBUG com.tuozhi.zhlw.admin.jc.mapper.ExitPassDataMapper.getTradePassDataByParams-[159] <==      Total: 0
2020/12/23-11:53:22 [http-nio-317-exec-3] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[32] 方法执行前执行。。。。。before
2020/12/23-11:53:22 [http-nio-317-exec-3] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[33] <============================================
2020/12/23-11:53:22 [http-nio-317-exec-3] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[34] 请求来源： =》192.168.3.5
2020/12/23-11:53:22 [http-nio-317-exec-3] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[35] 请求URL：=》/JC/APP/getExitPassData
2020/12/23-11:53:22 [http-nio-317-exec-3] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[36] 请求方式：=》POST
2020/12/23-11:53:22 [http-nio-317-exec-3] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[37] 响应方法：=》com.tuozhi.zhlw.admin.jcApp.controller.JCAuditStatusController.getExitPassData
2020/12/23-11:53:22 [http-nio-317-exec-3] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[38] 请求参数：=》[org.apache.catalina.connector.RequestFacade@364d2a38]
2020/12/23-11:53:22 [http-nio-317-exec-3] DEBUG com.tuozhi.zhlw.admin.jc.mapper.ExitPassDataMapper.getTradePassDataByParams-[159] ==>  Preparing: SELECT PASS.EXID, vehicleSignId, PASS.PASSID, cd_system.F_ENUM_MEDIATYPE(PASS.MEDIATYPE) MEDIATYPE, PASS.ENTIME, ROUND(jnw.realfee,2) realfee, ROUND(jnw.owefee,2) owefee, CD_SYSTEM.F_ENUM_VEHICLETYPE(jnw.NEWVEHICLETYPE) as NEWVEHICLETYPE, ROUND(PASS.FEE/100,2) FEE, ROUND(PASS.DISCOUNTFEE/100,2) DISCOUNTFEE, ROUND(PASS.PAYFEE/100,2) PAYFEE, ROUND(PASS.SHORTFEE/100,2) SHORTFEE, PASS.VEHICLELENGTH, PASS.VEHICLEWIDTH, PASS.VEHICLEHIGHT, PASS.EXWEIGHT, PASS.EXAXLECOUNT, decode(PASS.CD_PATHFITTINGCLASS,2,decode(PASS.TRANSPAYTYPE,1,'现金',2,'其他第三方',3,'银联',6,'支付宝',7,'微信',''),3,decode(PASS.TRANSPAYTYPE,1,'出口ETC通行',2,'出口ETC刷卡通行',''),'') paytype, PASS.CD_PATHFITTINGCLASS, PASS.CD_INSERTTIME, PASS.ENTOLLLANEID, PASS.ENPROVINCEID, PASS.CD_PATHFITTINGID, PASS.EXPROVINCEID, PASS.EXTIME, PASS.EXTOLLLANEID, PASS.ENTOLLSTATIONID, PASS.EXTOLLSTATIONID, ENTOLLSTATIONNAME, EXTOLLSTATIONNAME, SECTION.NAME ENSECTIONID, SECTION1.NAME EXSECTIONID, cd_system.F_ENUM_VEHICLE(PASS.ENVEHICLEID) ENVEHICLENAME, cd_system.F_ENUM_VEHICLE(PASS.EXVEHICLEID) EXVEHICLENAME, PASS.EXVEHICLEID, PASS.MEDIANO, PASS.OBUID, CD_SYSTEM.F_ENUM_VEHICLETYPE(PASS.EXVEHICLETYPE) as EXVEHICLETYPE, CD_SYSTEM.F_ENUM_VEHICLECLASS(PASS.EXVEHICLECLASS) as EXVEHICLECLASS, PASS.SPECIALTYPE, CD_SYSTEM.F_ENUM_VEHICLETYPE(PASS.ENVEHICLETYPE) as ENVEHICLETYPE, CD_SYSTEM.F_ENUM_VEHICLECLASS(PASS.ENVEHICLECLASS) as ENVEHICLECLASS, PASS.SECTIONIDGROUP, PASS.CD_ETCDISCOUNTTYPE, PASS.CD_ETCDISCOUNTID, PASS.CD_ETCDISCOUTTIME, PASS.CD_REFITTING, PASS.CD_REFITTINGBYTRADETIME, PROVINCE.PROVINCENAME as ENPROVINCENAME, PROVINCE1.PROVINCENAME as EXPROVINCENAME, PASS.EXITFEETYPE, sed.ENUM_NAME issuerName, ROUND( jnw.allfee,2) allfee, ROUND(jnw.owerfee,2) owerfee, (SELECT to_char(wm_concat( DISTINCT cd_system.F_ENUM_VEHICLETYPE(VEHICLETYPE))) FROM cd_pass.TRANSACTION_PASSTU_DETAIL WHERE PASSID=PASS.passid) FEEVEHICLETYPE FROM "CD_PASS"."TRADE_PASS" PASS left join (SELECT realfee ,owefee,owerfee,allfee,passid,NEWVEHICLETYPE from cd_jc.JC_NEWTRADEPASSVEHICLETYPE) jnw on jnw.passid=pass.passid LEFT JOIN CD_TRADE.BASE_SECTION SECTION ON PASS.ENSECTIONID = SECTION.ID LEFT JOIN CD_TRADE.BASE_SECTION SECTION1 ON PASS.EXSECTIONID = SECTION1.ID LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed ON PASS.issuerId = sed.ENUM_VALUE and sed.ENUM_ID = 20191 LEFT JOIN CD_TRADE.BASE_NETPROVINCE PROVINCE ON PASS.ENPROVINCEID = PROVINCE.PROVINCEID LEFT JOIN CD_TRADE.BASE_NETPROVINCE PROVINCE1 ON PASS.EXPROVINCEID = PROVINCE1.PROVINCEID where PASS.CD_PATHFITTINGCLASS in (2,3) AND (PASS.EXVEHICLEID like ?||'%' or pass.mediano like ?) and PASS.EXTIME>= to_date(?,'yyyy-MM-dd HH24:mi:ss') and PASS.EXTIME<= to_date(?,'yyyy-MM-dd HH24:mi:ss') ORDER BY PASS.EXTIME DESC 
2020/12/23-11:53:22 [http-nio-317-exec-3] DEBUG com.tuozhi.zhlw.admin.jc.mapper.ExitPassDataMapper.getTradePassDataByParams-[159] ==> Parameters: 津C67D68(String), 津C67D68(String), 2020-06-01 00:00:00(String), 2020-07-01 23:59:59(String)
2020/12/23-11:53:22 [http-nio-317-exec-3] DEBUG com.tuozhi.zhlw.admin.jc.mapper.ExitPassDataMapper.getTradePassDataByParams-[159] <==      Total: 0
2020/12/23-11:53:47 [http-nio-317-exec-4] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[32] 方法执行前执行。。。。。before
2020/12/23-11:53:47 [http-nio-317-exec-4] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[33] <============================================
2020/12/23-11:53:47 [http-nio-317-exec-4] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[34] 请求来源： =》192.168.3.5
2020/12/23-11:53:47 [http-nio-317-exec-4] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[35] 请求URL：=》/JC/APP/getExitPassData
2020/12/23-11:53:47 [http-nio-317-exec-4] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[36] 请求方式：=》POST
2020/12/23-11:53:47 [http-nio-317-exec-4] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[37] 响应方法：=》com.tuozhi.zhlw.admin.jcApp.controller.JCAuditStatusController.getExitPassData
2020/12/23-11:53:47 [http-nio-317-exec-4] INFO  com.tuozhi.zhlw.admin.jcApp.config.SysLoginAspect-[38] 请求参数：=》[org.apache.catalina.connector.RequestFacade@364d2a38]
2020/12/23-11:53:47 [http-nio-317-exec-4] DEBUG com.tuozhi.zhlw.admin.jc.mapper.ExitPassDataMapper.getTradePassDataByParams-[159] ==>  Preparing: SELECT PASS.EXID, vehicleSignId, PASS.PASSID, cd_system.F_ENUM_MEDIATYPE(PASS.MEDIATYPE) MEDIATYPE, PASS.ENTIME, ROUND(jnw.realfee,2) realfee, ROUND(jnw.owefee,2) owefee, CD_SYSTEM.F_ENUM_VEHICLETYPE(jnw.NEWVEHICLETYPE) as NEWVEHICLETYPE, ROUND(PASS.FEE/100,2) FEE, ROUND(PASS.DISCOUNTFEE/100,2) DISCOUNTFEE, ROUND(PASS.PAYFEE/100,2) PAYFEE, ROUND(PASS.SHORTFEE/100,2) SHORTFEE, PASS.VEHICLELENGTH, PASS.VEHICLEWIDTH, PASS.VEHICLEHIGHT, PASS.EXWEIGHT, PASS.EXAXLECOUNT, decode(PASS.CD_PATHFITTINGCLASS,2,decode(PASS.TRANSPAYTYPE,1,'现金',2,'其他第三方',3,'银联',6,'支付宝',7,'微信',''),3,decode(PASS.TRANSPAYTYPE,1,'出口ETC通行',2,'出口ETC刷卡通行',''),'') paytype, PASS.CD_PATHFITTINGCLASS, PASS.CD_INSERTTIME, PASS.ENTOLLLANEID, PASS.ENPROVINCEID, PASS.CD_PATHFITTINGID, PASS.EXPROVINCEID, PASS.EXTIME, PASS.EXTOLLLANEID, PASS.ENTOLLSTATIONID, PASS.EXTOLLSTATIONID, ENTOLLSTATIONNAME, EXTOLLSTATIONNAME, SECTION.NAME ENSECTIONID, SECTION1.NAME EXSECTIONID, cd_system.F_ENUM_VEHICLE(PASS.ENVEHICLEID) ENVEHICLENAME, cd_system.F_ENUM_VEHICLE(PASS.EXVEHICLEID) EXVEHICLENAME, PASS.EXVEHICLEID, PASS.MEDIANO, PASS.OBUID, CD_SYSTEM.F_ENUM_VEHICLETYPE(PASS.EXVEHICLETYPE) as EXVEHICLETYPE, CD_SYSTEM.F_ENUM_VEHICLECLASS(PASS.EXVEHICLECLASS) as EXVEHICLECLASS, PASS.SPECIALTYPE, CD_SYSTEM.F_ENUM_VEHICLETYPE(PASS.ENVEHICLETYPE) as ENVEHICLETYPE, CD_SYSTEM.F_ENUM_VEHICLECLASS(PASS.ENVEHICLECLASS) as ENVEHICLECLASS, PASS.SECTIONIDGROUP, PASS.CD_ETCDISCOUNTTYPE, PASS.CD_ETCDISCOUNTID, PASS.CD_ETCDISCOUTTIME, PASS.CD_REFITTING, PASS.CD_REFITTINGBYTRADETIME, PROVINCE.PROVINCENAME as ENPROVINCENAME, PROVINCE1.PROVINCENAME as EXPROVINCENAME, PASS.EXITFEETYPE, sed.ENUM_NAME issuerName, ROUND( jnw.allfee,2) allfee, ROUND(jnw.owerfee,2) owerfee, (SELECT to_char(wm_concat( DISTINCT cd_system.F_ENUM_VEHICLETYPE(VEHICLETYPE))) FROM cd_pass.TRANSACTION_PASSTU_DETAIL WHERE PASSID=PASS.passid) FEEVEHICLETYPE FROM "CD_PASS"."TRADE_PASS" PASS left join (SELECT realfee ,owefee,owerfee,allfee,passid,NEWVEHICLETYPE from cd_jc.JC_NEWTRADEPASSVEHICLETYPE) jnw on jnw.passid=pass.passid LEFT JOIN CD_TRADE.BASE_SECTION SECTION ON PASS.ENSECTIONID = SECTION.ID LEFT JOIN CD_TRADE.BASE_SECTION SECTION1 ON PASS.EXSECTIONID = SECTION1.ID LEFT JOIN CD_SYSTEM.SYS_ENUM_DETAILS sed ON PASS.issuerId = sed.ENUM_VALUE and sed.ENUM_ID = 20191 LEFT JOIN CD_TRADE.BASE_NETPROVINCE PROVINCE ON PASS.ENPROVINCEID = PROVINCE.PROVINCEID LEFT JOIN CD_TRADE.BASE_NETPROVINCE PROVINCE1 ON PASS.EXPROVINCEID = PROVINCE1.PROVINCEID where PASS.CD_PATHFITTINGCLASS in (2,3) AND (PASS.EXVEHICLEID like ?||'%' or pass.mediano like ?) and PASS.EXTIME>= to_date(?,'yyyy-MM-dd HH24:mi:ss') and PASS.EXTIME<= to_date(?,'yyyy-MM-dd HH24:mi:ss') ORDER BY PASS.EXTIME DESC 
2020/12/23-11:53:47 [http-nio-317-exec-4] DEBUG com.tuozhi.zhlw.admin.jc.mapper.ExitPassDataMapper.getTradePassDataByParams-[159] ==> Parameters: 津C67D68(String), 津C67D68(String), 2020-07-01 11:53:35(String), 2020-08-01 11:53:35(String)
2020/12/23-11:53:47 [http-nio-317-exec-4] DEBUG com.tuozhi.zhlw.admin.jc.mapper.ExitPassDataMapper.getTradePassDataByParams-[159] <==      Total: 1
2020/12/23-11:54:08 [http-nio-317-exec-5] DEBUG com.tuozhi.zhlw.admin.mapper.EnumDetailMapper.findByEnumName-[159] ==>  Preparing: select s.*,s.id as enumDetailsId from sys_enum e inner join SYS_ENUM_DETAILS s on e.ID = s.ENUM_ID WHERE e.ENUM_NAME = ? ORDER BY s.ID ASC 
2020/12/23-11:54:08 [http-nio-317-exec-5] DEBUG com.tuozhi.zhlw.admin.mapper.EnumDetailMapper.findByEnumName-[159] ==> Parameters: 1001(String)
2020/12/23-11:54:08 [http-nio-317-exec-5] DEBUG com.tuozhi.zhlw.admin.mapper.EnumDetailMapper.findByEnumName-[159] <==      Total: 7
2020/12/23-18:01:30 [SpringContextShutdownHook] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler-[208] Shutting down ExecutorService 'taskScheduler'
2020/12/23-18:01:30 [SpringContextShutdownHook] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean-[598] Closing JPA EntityManagerFactory for persistence unit 'default'
2020/12/23-18:01:31 [SpringContextShutdownHook] INFO  com.alibaba.druid.pool.DruidDataSource-[1965] {dataSource-1} closing ...
2020/12/23-18:01:31 [SpringContextShutdownHook] WARN  com.alibaba.druid.pool.DruidDataSource-[2012] close connection error
java.sql.SQLRecoverableException: IO 错误: Connection reset by peer: socket write error
	at oracle.jdbc.driver.T4CConnection.logoff(T4CConnection.java:857)
	at oracle.jdbc.driver.PhysicalConnection.close(PhysicalConnection.java:2498)
	at com.alibaba.druid.filter.FilterChainImpl.connection_close(FilterChainImpl.java:186)
	at com.alibaba.druid.filter.stat.StatFilter.connection_close(StatFilter.java:261)
	at com.alibaba.druid.filter.FilterChainImpl.connection_close(FilterChainImpl.java:181)
	at com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl.close(ConnectionProxyImpl.java:114)
	at com.alibaba.druid.pool.DruidDataSource.close(DruidDataSource.java:2010)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:339)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:273)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1072)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1065)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1060)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1029)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:948)
Caused by: java.net.SocketException: Connection reset by peer: socket write error
	at java.net.SocketOutputStream.socketWrite0(Native Method)
	at java.net.SocketOutputStream.socketWrite(SocketOutputStream.java:111)
	at java.net.SocketOutputStream.write(SocketOutputStream.java:155)
	at oracle.net.ns.DataPacket.send(DataPacket.java:209)
	at oracle.net.ns.NetOutputStream.flush(NetOutputStream.java:215)
	at oracle.net.ns.NetInputStream.getNextPacket(NetInputStream.java:302)
	at oracle.net.ns.NetInputStream.read(NetInputStream.java:249)
	at oracle.net.ns.NetInputStream.read(NetInputStream.java:171)
	at oracle.net.ns.NetInputStream.read(NetInputStream.java:89)
	at oracle.jdbc.driver.T4CSocketInputStreamWrapper.readNextPacket(T4CSocketInputStreamWrapper.java:123)
	at oracle.jdbc.driver.T4CSocketInputStreamWrapper.read(T4CSocketInputStreamWrapper.java:79)
	at oracle.jdbc.driver.T4CMAREngineStream.unmarshalUB1(T4CMAREngineStream.java:429)
	at oracle.jdbc.driver.T4CTTIfun.receive(T4CTTIfun.java:397)
	at oracle.jdbc.driver.T4CTTIfun.doRPC(T4CTTIfun.java:257)
	at oracle.jdbc.driver.T4C7Ocommoncall.doOLOGOFF(T4C7Ocommoncall.java:59)
	at oracle.jdbc.driver.T4CConnection.logoff(T4CConnection.java:844)
	... 20 common frames omitted
2020/12/23-18:01:31 [SpringContextShutdownHook] INFO  com.alibaba.druid.pool.DruidDataSource-[2037] {dataSource-1} closed
