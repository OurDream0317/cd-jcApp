server.port=0317


#数据源  

spring.datasource.driver-class-name=oracle.jdbc.driver.OracleDriver
spring.datasource.druid.url=jdbc:oracle:thin:@10.212.23.30:1521/tradedb
spring.datasource.username=CD_SYSTEM
spring.datasource.password=CD_SYSTEM
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource

# 更多数据源
#custom.datasource.ds1.driver-class-name=oracle.jdbc.driver.OracleDriver
#custom.datasource.ds1.url=jdbc:oracle:thin:@47.92.165.167:1521:orcl
#custom.datasource.ds1.username=cd_base
#custom.datasource.ds1.password=cd_base

#custom.datasource.ds2.driver-class-name=com.mysql.jdbc.Driver
#custom.datasource.ds2.url=jdbc:mysql://localhost:3306/test2
#custom.datasource.ds2.username=root
#custom.datasource.ds2.password=123456

#日志文件
#logging.config=classpath:logback-spring.xml

#关闭默认模板引擎
spring.thymeleaf.cache=false
spring.thymeleaf.enabled=false

#加载分页插件
pagehelper.helper-dialect=oracle
pagehelper.params=count=countSql
pagehelper.reasonable=false
pagehelper.support-methods-arguments=true
mybatis.configuration.map-underscore-to-camel-case=true

# 初始化时建立物理连接的个数
spring.datasource.druid.initial-size=5
# 最大连接池数量
spring.datasource.druid.max-active=30
# 最小连接池数量
spring.datasource.druid.min-idle=5
# 获取连接时最大等待时间，单位毫秒
spring.datasource.druid.max-wait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 
spring.datasource.druid.time-between-eviction-runs-millis=60000
# 连接保持空闲而不被驱逐的最小时间
spring.datasource.druid.min-evictable-idle-time-millis=300000
# 用来检测连接是否有效的sql，要求是一个查询语句
spring.datasource.druid.validation-query=SELECT 1 FROM DUAL
# 建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
spring.datasource.druid.test-while-idle=true
# 申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
spring.datasource.druid.test-on-borrow=false
# 归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
spring.datasource.druid.test-on-return=false
# 是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle。在mysql下建议关闭。
spring.datasource.druid.pool-prepared-statements=true
# 要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true。
spring.datasource.druid.max-pool-prepared-statement-per-connection-size=50
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计
spring.datasource.druid.filters=stat
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.druid.connection-properties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500
# 合并多个DruidDataSource的监控数据
spring.datasource.druid.use-global-data-source-stat=true




fileOutPath=${user.dir}/uploads
fileDownPath=${user.dir}/downloads
gantryBase64ImagePath=http://10.212.35.69:8082/oss/etc/image
tradePassBase64ImagePath=http://10.212.35.69:8082/oss/station/image
aptJiImagePath=http://10.212.200.200:9191/appointment/container/osspic

# REDIS (RedisProperties)
# Redis数据库索引（默认为0）
spring.redis.database=0
# Redis服务器地址
spring.redis.host=10.212.35.70
# Redis服务器连接端口
spring.redis.port=6379
# Redis服务器连接密码（默认为空）
spring.redis.password=
# 连接超时时间（毫秒）
spring.redis.timeout=60000


mybatis.mapperLocations=classpath:mapper/*.xml,classpath:mapper/report/*.xml,classpath:mapper/hubei/*.xml,classpath:mapper/tjportrefund/*.xml,classpath:mapper/jcgrey/*.xml,classpath:mapper/jcApp/*.xml
#mybatis.type-aliases-package=com.tuozhi.admin.entity



spring.jpa.show-sql=true
logging.level.com.tuozhi.zhlw.admin.mapper=debug


#log 日志输出
logging.file=./logs/cd_SYSTEM.log
logging.level.com.tuozhi=debug
logging.level.root=info
logging.pattern.console=${CONSOLE_LOG_PATTERN:%clr(%d{${LOG_DATEFORMAT_PATTERN:yyyy-MM-dd HH:mm:ss.SSS}}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:%wEx}}
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss.SSS} -%5p ${PID:-} [%15.15t] %-40.40logger{39} : %m%n||||||| .r662

#上传文件大小限制
spring.servlet.multipart.max-file-size=1000000000
spring.servlet.multipart.max-request-size=1000000000
max-file-size-custom=2097152000


#登陆错误次数上限
maxLoginErrorTimes=5
#登陆错误次数上限后，锁定时间(小时)
maxLoginErrorTimes_LockTime=6

mybatis.configuration.call-setters-on-nulls=true
#设定HttpHeader请求头大小
server.max-http-header-size=102400000
 #设定Httppost数据大小

server.tomcat.max-http-form-post-size=102400000

jcAppBlackListRequestAttachmentListUrl=http://10.212.35.69/JC/blacklistRequestQuery/getjcAppBlackListRequestAttachmentList
##获取追缴名单或撤销追缴名单附件地址
##jcAppBlackListRequestAttachmentListUrl=http://127.0.0.1:8088/JC/blacklistRequestQuery/getjcAppBlackListRequestAttachmentList
